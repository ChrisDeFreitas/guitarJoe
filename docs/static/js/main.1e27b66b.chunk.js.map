{"version":3,"sources":["guitar_lib.js","react-abcjs.js","FretButton.jsx","FretPnl.jsx","controls/ArrowButton.jsx","InfoPnl.jsx","resources/logo.svg","QueryPnl.jsx","Fretboard.jsx","AboutDlg.jsx","App.jsx","index.jsx"],"names":["q","chords","list","name","abr","intervals","byName","str","chord","obj","root","chordName","ivls","preferFlats","indexOf","note","iname","ivl","notes","calc","push","type","fullName","fullAbbrev","inversions","octave","robj","toUpperCase","objByNote","Number","cobj","maxinversions","length","result","max","positions","rivls","cnt","pos","idx","ioctave","ridx","semis","inversionNotes","invrObj","invrPos","undefined","local_invrToNobj","invr","strgn","parent","rootfret","nobj","strg","fretboard","fret","byNote","fretMax","num","maxInversions","tmp","inversion","fnd","forEach","findByIvls","ii","strings","tabLetter","fretMin","fretMinSet","nn","init","fretMaxSet","strgN","fretInRange","strgnum","tab","bySemis","objBySemis","objByTab","ltr","substr","tabByFret","strN","degName","nm","returnFirst","findNote","find","alpha","ivlOrName","rprefix","rsuffix","iprefix","newlet","newsfx","local_inc","fobj","match","nobjList","nidx","slice","comparisons","iidx","splice","toAbc","noteLength","acc","Math","floor","scales","short","degreeTriads","scale","sobj","degrees","rootivl","semis0","deg","triad","degree","degreeName","scaleName","ivlAbr","shortName","abbrevName","octaveNum","Abcjs","uniqueNumber","Date","now","random","abcNotation","parserParams","engraverParams","renderParams","abcjsObj","renderAbc","this","props","renderAbcNotation","style","width","id","PureComponent","defaultProps","responsive","viewportHorizontal","FretButton","qry","buttonClick","event","btn","target","nodeName","parentNode","stopPropagation","rootType","dataset","state","stateChange","fretSelect","fretSelectFind","selected","btnStyleChange","fretBtnStyle","btnState","btnStyle","fsmatch","fretSelectMatch","noteFilter","btncaption","key","minPadding","paddingtop","paddingbottom","paddingleft","paddingright","staffwidth","textboxpadding","className","onClick","FretPnl","fretClick","bind","fretFltrClick","strgFltrClick","cell","strn","isNaN","console","log","fretfilter","clientY","getBoundingClientRect","top","offsetHeight","strgFiltered","document","querySelector","fbid","currentTarget","fso","scaleTriadIvls","chordInvrNotes","inv","inversionNoteByTab","selNoteVal","fretSelectMatchFind","ivlFind","chordFind","scaleTriadFind","scaleFind","rootFind","noteFind","octaveFind","trArray","first","fretFirst","last","fretLast","ss","row","frets","strgFltr","col","fretFltr","fretFilter","btnStrFltr","cls","collapsed","onMouseDown","stringdiv","buttonFind","React","Component","ArrowButton","uord","upOrDn","toLowerCase","dstyle","height","astyle","fontSize","arrow","newud","onChange","title","InfoPnl","_g","fsChordClick","fsScaleClick","infoItemClick","invrLabelClick","triadLabelClick","scaletriad","html","lastkey","fretSelectMatchDisplay","fretSelectMatchTtl","noblist","filter","a","lastname","iobj","ob","drawFretSelectMatches","scaleTriadDisplay","scaleTriadDisplayTtl","scaleTriads","scaleTriadSelected","chordInvrDisplay","chordInvrDisplayTtl","invrs","chordInvrSelected","QueryPnl","btnDupeClick","btnDelClick","selLabelClick","selChordChange","btnClearClick","btnCollapseClick","selIntervalChange","selNoteChange","selOctaveChange","selScaleChange","remove","duplicate","upordn","val","reset","lbl","ivlName","sel","options","selectedIndex","text","value","omin","oct","datastate","chd","qryBtnClass","qryDisplayClass","qryDisplay","qryDisplayTtl","qryDisplayWdth","selNote","selOct","selInt","selScale","selChord","drawSelNote","drawSelOctave","drawSelInterval","drawSelScale","drawSelChord","Fretboard","strgFilter","fretRoot","makeQuery","setState","objOrTab","Array","isArray","sort","b","About","trigger","modal","nested","close","href","_excluded","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlns","viewBox","x","y","ref","fill","stroke","strokeWidth","d","points","ForwardRef","App","useState","fbs","setFbs","newid","setNewId","indexOfFbid","nid","Error","fbCount","el","fretBtnText","strgFltrList","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e27b66b.chunk.js","sourcesContent":["/*\n  //♭ &flat; alt+?\n  \n  GuitarJoe's guitar logic\n  by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  \n   Note:\n    - note refers to what we usually call a note: C#\n    - note object: { strgnum:int, fret:int, note:'C#', semis:49, ... }\n    - note.semis is unique\n    - fret is an integer\n    - fobj is a fret object: frets.obj() => { strg:{}, fret:int, tab:'e12' }\n    - ivl is an interval object: intervals.list[n]\n    - assume: exception handling performed by caller\n\n  Todo:\n    - check for code consistency\n    - (when needed) update notes.calc() for ##/bb -- see comments in function\n  \n */\n\nvar q = {\n\n  chords: {\n    //verified against: https://www.omnicalculator.com/other/chord\n    list:[\n      {\n        name:'Major triad', abr:'maj',\n        intervals:[ 'P1', 'M3', 'P5' ]\n      },{\n        name:'Minor triad', abr:'min',\n        intervals:[ 'P1', 'm3', 'P5' ]\n      },{\n        name:'Augmented triad', abr:'aug',\n        intervals:[ 'P1', 'M3', 'A5' ]\n      },{\n        name:'Diminished triad', abr:'dim',\n        intervals:[ 'P1', 'm3', 'd5' ]\n      },{\n        name:'Dominant seventh', abr:'7',\n        intervals:[ 'P1', 'M3', 'P5', 'm7' ]\n      },{\n        name:'Major seventh', abr:'maj7',\n        intervals:[ 'P1', 'M3', 'P5', 'M7' ]\n      },{\n        name:'Minor seventh', abr:'min7',\n        intervals:[ 'P1', 'm3', 'P5', 'm7' ]\n      },{\n        name:'Major sixth', abr:'maj6',\n        intervals:[ 'P1', 'M3', 'P5', 'M6' ]\n      },{\n        name:'Minor sixth', abr:'min6',\n        intervals:[ 'P1', 'm3', 'P5', 'M6' ]\n      },{\n        name:'Suspended second', abr:'sus2',\n        intervals:[ 'P1', 'M2', 'P5' ]\n      },{\n        name:'Suspended fourth', abr:'sus4',\n        intervals:[ 'P1', 'P4', 'P5' ]\n      }\n    ],\n    byName( str ){\n      for(let chord of q.chords.list){\n        if(chord.abr === str || chord.name === str)\n          return { ...chord }\n      }\n      return null\n    },\n    obj( root, chordName ){  //return chord with notes based on root\n      let ivls = [],\n        chord = q.chords.byName( chordName )\n      if(chord === null) return null\n\n      if(typeof root === 'string')\n        root = q.intervals.byName( root )   //object returned to caller\n      if(root === null) return null\n\n      let preferFlats = ( \n          chord.name.indexOf('Minor') >= 0  \n        ||chord.name.indexOf('Diminished') >= 0 \n        || root.note.indexOf('♭') >= 0)\n      for(let iname of chord.intervals){\n        let ivl = q.intervals.byName( iname )\n        let note = q.notes.calc( root, ivl, preferFlats )\n        ivls.push({ ...ivl, note:note })\n      }\n\n      let obj = { \n        ...chord, \n        type:'chord',\n        fullName: root.note +' '+chord.name,\n        fullAbbrev: root.note +chord.abr,\n        root: root,\n        ivls:ivls\n      }\n\n      return obj\n    },\n    inversions( note, chord, octave = 0 ){   // return an inversion object for given note and scale\n      let robj = null\n      if( typeof note === 'object' ){\n        robj = note\n        note = robj.note\n      }else{\n        note = note.toUpperCase()\n        robj = q.notes.objByNote( note )\n      }\n      if(octave === null) octave = 0\n      robj.octave = Number(octave)\n      let cobj = null\n      if( typeof chord === 'object' ){\n        cobj = chord\n        chord = cobj.abr\n      }else\n        cobj = q.chords.obj(note, chord)\n\n      let maxinversions = cobj.ivls.length\n      let result = { root:robj.note, chord:chord, octave:octave, max:maxinversions, positions:{} }\n      let rivls = cobj.ivls\n      let positions = ['Root','First','Second','Third','Fourth','Fifth']\n\n\n      for( let cnt = 1; cnt <= maxinversions; cnt++){\n        let pos = positions[ cnt -1 ]\n        result.positions[ pos ] = {}\n        let obj = result.positions[ pos ]\n\n        for( let idx = 1; idx <= maxinversions; idx++ ){\n          let ioctave = robj.octave\n          let ridx = idx +(cnt -2) \n          if(ridx >= maxinversions) {\n            ridx -= maxinversions\n            ioctave++\n          }\n          // console.log({idx:idx, ridx:ridx})\n          obj[idx] ={ \n            ...rivls[ ridx ], \n            octave:ioctave,\n            semis:q.semis.calc( rivls[ ridx ].note, ioctave )\n          }\n        }\n      }\n      // console.log( result.positions )\n      return result\n    },\n    inversionNotes( invrObj, invrPos ){ //return note objects for all fretboard locations of given inversion\n\n      if( invrObj.positions[invrPos] === undefined )\n        return null\n\n      function local_invrToNobj( invr, strgn, parent = null, rootfret = null ){\n        let nobj = null\n        let strg = q.fretboard.strg( strgn )\n        let note = invr.note\n        let fret = ( q.intervals.byNote( note ).semis  -q.intervals.byNote( strg.note ).semis )\n        if(fret < 0) fret += 12\n        \n        if(rootfret != null) fret = rootfret +12  //for root position: find multiple notes on string\n        \n        while( fret <= q.fretboard.fretMax ){\n          //  console.log('fret'+fret+':', {strg:strg.note, invr:note, fret:fret} )\n          if(fret <= q.fretboard.fretMax){\n            nobj = q.notes.obj( strg.num, fret, note )\n            // console.log('  search:', {iOctave:invr.octave, nOctave:nobj.octave, nobjFret:nobj.fret, parentFret:parentFret })\n            if( parent === null || (nobj.fret >= parent.fret-3 && nobj.fret <= parent.fret+3 ))  //verify proximity of frets\n            //don't verify octaves, leave it for the user to inspect\n            // && ( [0,1].indexOf(invr.octave) >= 0 || nobj.octave === invr.octave ))  //octave == 0||1 means note selected from QueryPnl.selNote\n              break;\n            else{   //keep searching string\n              fret += 12\n              nobj = null\n            }\n          }\n        }\n        return nobj\n      }\n\n      let chord = invrObj.root +invrObj.chord\n      let maxInversions = invrObj.max\n      let inversions = invrObj.positions[invrPos]\n\n      let tmp = []  //temporary store for notes found\n      let list = []     //returned with all notes found\n      for(let strgn = 6; strgn >= maxInversions; strgn--){   //because of inversion logic, rootnote can never be on upper strings\n\n        let rootfret = null\n        while( rootfret === null || rootfret < q.fretboard.fretMax){  //allow searching for root note multiple times\n          //calc fret position of root note\n          let invr = inversions[1]\n          let nobj = local_invrToNobj( invr, strgn, null, rootfret )\n          if(nobj === null) break\n          tmp[0] = nobj\n          tmp[0].invr = {chord:chord, inversion:invrPos, abr:invr.abr, num:1}\n          rootfret = nobj.fret    //\n\n          //calc note n\n          let fnd = true\n          for(let num = 2; num <= maxInversions; num++){\n            let parent = nobj\n            invr = inversions[ num ]\n            nobj = local_invrToNobj( invr, strgn -(num -1), parent, null )\n            if(nobj === null) {\n              fnd = false\n              break\n            }\n            tmp[ num -1 ] = nobj\n            tmp[ num -1 ].invr = {chord:chord, inversion:invrPos, abr:invr.abr, num:num}\n          }\n          if(fnd === false) continue\n\n          tmp.forEach( nobj => list.push( nobj ) )\n        }\n      }\n      if(list.length === 0) return null\n      return list\n    },\n    findByIvls( ivls ){    //find a chord by matching interval.abr\n      // return null or one of q.chords.list[]\n      for( let chord of q.chords.list ){\n        if(chord.intervals.length !== ivls.length) \n          continue\n\n        let fnd = true\n        for( let ii = 0; ii < chord.intervals.length; ii++ ){\n           if(ivls[ii].abr !== chord.intervals[ii]){\n             fnd = false\n             break\n           }\n        }\n        if( fnd === true )    // all ivls match\n          return { ...chord }\n      }\n      return null\n    },\n\n  },\n\n  fretboard: {\n    strings: [\n      {num:1, note:'E', octave:4, semis:0, tabLetter:'e' },\n      {num:2, note:'B', octave:3, semis:0, tabLetter:'B' },\n      {num:3, note:'G', octave:3, semis:0, tabLetter:'G' },\n      {num:4, note:'D', octave:3, semis:0, tabLetter:'D' },\n      {num:5, note:'A', octave:2, semis:0, tabLetter:'A' },\n      {num:6, note:'E', octave:2, semis:0, tabLetter:'E' }\n    ],\n\n    fretMin:1,\n    fretMax:14,\n    fretMinSet( nn ){   //not used as yet\n      q.fretboard.fretMin = nn\n      q.fretboard.init()\n    },\n    fretMaxSet( nn ){   //not used as yet\n      q.fretboard.fretMax = nn\n      q.fretboard.init()\n    },\n\n    init(){\n      for(let ii = 0; ii <= q.fretboard.strings.length -1; ii++){\n        let strg = q.fretboard.strings[ii]\n        q.fretboard.strings[ii].semis = q.semis.calc(strg.note, strg.octave)\n      }\n    },\n    strg( strgN ){  \n      return { ...q.fretboard.strings[ strgN -1 ] }\n    },\n    fretInRange(nobj, root, num = 3){\n      //assume: root is a notes.obj()\n      let max = (num <= 5 ?5 :num)\n      if((root.fret <= 1 && nobj.fret <= max)\n      || (root.fret > 1 && nobj.fret >= (root.fret -num)\n         && nobj.fret <= (root.fret +num)) )\n        return true\n      return null\n    },\n    obj( strg, fret ){\n      if( typeof strg === 'number')\n        strg = q.fretboard.strg( strg )\n      let semis = strg.semis +Number(fret)\n      return {\n        fret:fret, \n        // strg:Object.assign( {}, strg ), \n        strgnum:strg.num, \n        tab:(strg.tabLetter +fret),\n        semis: semis,\n        notes: q.notes.bySemis(semis)\n      }\n    },\n    objBySemis( semis ){\n      let fret = null,\n        fretMax = q.fretboard.fretMax\n      for(let strg of q.fretboard.strings){\n        if(semis >= strg.semis && semis <= (strg.semis +fretMax)){\n          fret = ( semis -strg.semis )\n          return q.fretboard.obj( strg, fret )\n        }\n      }\n      return null\n    },\n    objByTab( tab ){\n      let ltr = tab.substr(0,1),\n        fret = Number(tab.substr(1))\n      for( let strg of q.fretboard.strings ){\n        if(strg.tabLetter === ltr){\n          return q.fretboard.obj( strg, fret )\n        }\n      }\n      return null\n    },\n    tabByFret( strN, fret ){  // return example: 'e12'\n      strN = Number( strN )\n      for( let strg of q.fretboard.strings ){\n        if(strg.num === strN){\n          return ( strg.tabLetter +fret )\n        }\n      }\n      return null\n    },\n  },\n\n  intervals:{\n    list:[\n      //rules:\n      // 1. order by semitones\n      // 2. prefer perfect, major, minor first\n      // 3. prefer minor over diminished\n      // 4. prefer augmented last\n      // 5. removed (♭♭, TT) because added complexity not relevant to most uses\n      // \n      {name:'Perfect unison', abr:'P1',  semis:0, degName:'Tonic', note:'C' },\n      //{name:'Diminished second', abr:'d2', semis:0, note:'D♭♭' },\n      \n      {name:'Minor second', abr:'m2', semis:1, degName:'', note:'D♭' },\n      {name:'Augmented unison', abr:'A1', semis:1, degName:'', note:'C#' },\n      \n      {name:'Major second', abr:'M2', semis:2, degName:'Supertonic', note:'D' },\n      // {name:'Diminished third', abr:'d3', semis:2, note:'E♭♭' },\n      \n      {name:'Minor third', abr:'m3', semis:3, degName:'Mediant', note:'E♭' },\n      {name:'Augmented second', abr:'A2', semis:3, degName:'Mediant', note:'D#' },\n      \n      {name:'Major third', abr:'M3', semis:4, degName:'Mediant', note:'E' },\n      {name:'Diminished fourth', abr:'d4', semis:4, degName:'Mediant', note:'F♭' },\n\n      {name:'Perfect fourth', abr:'P4', semis:5, degName:'Subdominant', note:'F'},\n      {name:'Augmented third', abr:'A3', semis:5, degName:'Subdominant', note:'E#'},\n      \n      {name:'Diminished fifth', abr:'d5', semis:6, degName:'', note:'G♭' },\n      {name:'Augmented fourth', abr:'A4', semis:6, degName:'', note:'F#' },\n      // {name:'Tritone', abr:'TT', semis:6, note:'TT' },\n      \n      {name:'Perfect fifth', abr:'P5', semis:7, degName:'Dominant', note:'G' },\n      // {name:'Diminished sixth', abr:'d6', semis:7, note:'A♭♭' },\n      \n      {name:'Minor sixth', abr:'m6', semis:8, degName:'Submediant', note:'A♭' },\n      {name:'Augmented fifth', abr:'A5', semis:8, degName:'Submediant', note:'G#' },\n      \n      {name:'Major sixth', abr:'M6', semis:9, degName:'Submediant', note:'A' },\n      // {name:'Diminished seventh', abr:'d7', semis:9, note:'B♭♭' },\n      \n      {name:'Minor seventh', abr:'m7', semis:10, degName:'Subtonic', note:'B♭' },\n      {name:'Augmented sixth', abr:'A6', semis:10, degName:'Subtonic', note:'A#' },\n      \n      {name:'Major seventh', abr:'M7', semis:11, degName:'Leading tone', note:'B' },\n      {name:'Diminished octave', abr:'d8', semis:11, degName:'Leading tone', note:'C♭' },\n      \n      {name:'Perfect octave', abr:'P8', semis:12, degName:'Octave', note:'C' },\n      {name:'Augmented seventh', abr:'A7', semis:12, degName:'Octave', note:'B#' },\n    ],\n  \n    byNote( note ){\n      note = note.toUpperCase()\n      for(let ivl of q.intervals.list){\n        if(ivl.note === note)\n          return { ...ivl }\n      }\n      return null\n    },\n    byName( nm ){\n      let note = nm.toUpperCase()\n      for(let ivl of q.intervals.list){\n        if(ivl.abr === nm || ivl.note === note || ivl.name === nm)\n          return { ...ivl }\n      }\n      return null\n    },\n    bySemis( semis, returnFirst = false ){   //return intervals where semis match\n      semis = semis % 12\n      let list = []\n      for(let ivl of q.intervals.list){\n        if(ivl.semis > semis) break    //shortcircuit, intervals ordered by semis\n        if(ivl.semis === semis){\n          let obj = { ...ivl }\n          if(returnFirst === true) return obj\n          list.push( obj )\n        }\n      }\n      return list\n    },\n    findNote( ivls, nobj ){   //return null or ivl containing note\n      if(typeof nobj === 'string')\n        nobj = q.notes.objByNote( nobj )\n      \n      let result = ivls.find( ivl => {\n        return ( nobj.notes.indexOf( ivl.note ) >= 0 )\n      })\n\n      if( typeof result !== 'object') return null\n      return result\n    }\n  },\n\n  notes:{\n    list:['C','C#','D♭','D','D#','E♭','E','F','F#','G♭','G','G#','A♭','A','A#','B♭','B'],\n    alpha:['C','D','E','F','G','A','B'],\n\n    bySemis( semis, returnFirst = false ){\n      let list = []\n      semis = Number(semis) % 12\n      for(let ivl of q.intervals.list ){\n        if(ivl.semis === semis){\n          if(returnFirst === true) return ivl.note\n          list.push( ivl.note )\n        }\n        if(ivl.semis > semis) break //intervals ordered by semis\n      }\n      return list\n    },\n    calc( root, ivlOrName, preferFlats = false){  //iterate by semitones to get new note with correct #/b\n      // assume: preferFlats === true: return only flats\n\n      // to handle ##/bb:\n      // 1. pre-loop: resolve to standard note, get new root interval, proceed as normal: C## => D\n      // 2. post loop(???): if ivl requires ##/bb, manually resolve based on new note: D => C##\n\n      if(typeof root === 'object') root = root.note\n      let rprefix = root.substr(0,1)\n      let rsuffix = root.substr(1,2)\n      // console.log('root='+root, 'rprefix='+rprefix, 'rsuffix='+rsuffix)\n\n      let ivl = (typeof ivlOrName === 'object' ?ivlOrName : q.intervals.byName(ivlOrName))\n      let iprefix = ivl.abr.substr(0,1)    // A as in A1\n      // console.log('ivl.abr='+ivl.abr, 'iprefix='+iprefix )\n\n      // test: display matching intervals\n      // let rivl = q.intervals.byName( root )\n      // let list = q.intervals.bySemis( rivl.semis +ivl.semis )\n      // console.log( 'ivl.semis='+ivl.semis, '\\nlist=', list  )\n\n      //assume: no ## or bb used\n      let max = ivl.semis, idx = 0    //idx = q.notes.alpha.indexOf( ltr ) ::: test\n      let newlet = rprefix, newsfx = rsuffix\n      function local_inc( ltr ){\n        idx = q.notes.alpha.indexOf( ltr ) // this can probably be refactored out: notes.alpha[idx % 7] always === newlet; lookup not required\n        idx++\n        return q.notes.alpha[ idx % 7]\n      }\n      for(let ii = 0; ii < max; ii++){\n        // console.log('root='+root, 'newlet='+newlet+newsfx)\n        if(newlet === 'B' && newsfx === ''){ \n          newlet = 'C'; \n        }else\n        if(newlet === 'E' && newsfx === ''){ \n           newlet = 'F'; \n        }else\n        if(newsfx === '♭'){\n          newsfx = ''\n        }else\n        if(newsfx === '#'){\n          newsfx = ''\n          newlet = local_inc( newlet )\n        } \n        else  //newsfx === ''\n        if(iprefix === 'm' || iprefix === 'd'  || preferFlats === true){\n          newsfx = '♭'\n          newlet = local_inc( newlet )\n        }\n        else\n          newsfx = '#'\n      }\n      // console.log('root='+root, 'newlet='+newlet+newsfx)\n      return newlet+newsfx\n    },\n\n    find( strgN, note ){ //return null or list of note objects on string\n      let result = []\n      let strg = q.fretboard.strg( strgN )\n      let max = strg.semis +q.fretboard.fretMax\n      let semis = strg.semis\n      while(semis <= max){\n        let notes = q.notes.bySemis( semis )\n        if(notes.indexOf( note) >= 0){\n          let nobj = q.notes.obj(strg, semis -strg.semis, note)\n          result.push( nobj )\n          semis += 12\n        }\n        else\n          ++semis\n      }\n\n      if(result.length === 0) return null\n      return result\n    },\n    obj( strg, fret, note = null  ){\n      // console.log(111, fret, strg.num)\n      if(typeof strg === 'number')\n        strg = q.fretboard.strg( strg )\n      if(fret < 0) return null\n      let semis = strg.semis +fret\n      if(semis > (strg.semis +q.fretboard.fretMax)) return null\n\n      let octave = q.octave(semis),\n          list = q.notes.bySemis( semis )\n      return {\n        fret: fret,\n        note: (note === null ?list[0] :note),\n        notes: list,\n        octave: octave,\n        semis: semis,\n        // strg: strg, \n        strgnum: strg.num, \n        tab: strg.tabLetter +fret\n      }\n    },\n    objByNote( note /*, octave = 0 */ ){\n      let ivl = q.intervals.byNote( note ),\n          semis = ivl.semis /* +(octave * 12) */,\n          list = q.notes.bySemis( semis )\n          //, fobj = q.fretboard.objBySemis( semis )\n      return {\n        fret: null, // fobj.fret,    //null because input is not specific to a fret\n        note:note,\n        notes:list,\n        octave:null,  //octave,\n        semis:semis,\n        // strg: null, // fobj.strg,\n        strgnum: null, // fobj.strg.num,\n        tab: null // fobj.tab,\n      }\n    },\n    objByTab( tab ){\n      let fobj = q.fretboard.objByTab( tab )\n      return q.notes.obj( fobj.strg, fobj.fret )\n    },\n\n    match( ivls, nobjList ){    //return true/false if notes in nobjList contained within ivls\n      //used to match scales and chords to user selected frets\n      //assume: ivls is a list of intervals.list[n]\n      //assume: nobjList is a list of notes.obj()\n      //assume: no duplicate items allowed\n      //assume: ivls.length > nobjList.length \n      //assume: there may be ivls[n] between matched items: c,e matches c,d,e\n      //assume: matches may occur across head/tail boundaries: e,c matches c,d,e\n      //generally this is a pattern matching algorithm between two lists\n      if(nobjList.length > ivls.length) return false\n\n      let list = nobjList.slice()   //to support rotating list\n      let fnd, nidx\n\n      //break on first match of all items in nobjList\n      for(let comparisons = 1; comparisons <= list.length; comparisons++){ //max comparisons = original pattern +(list.length -1) rotations \n\n        fnd = false; nidx = 0    //reset search params\n        for(let iidx = 0; iidx < ivls.length; iidx++){    //iterate ivls\n          if(list[nidx].notes.indexOf( ivls[iidx].note ) >= 0){ //increment when list item found; allows for gaps in range\n            if(++nidx === list.length){   //point to next list item\n              // console.log( 'found:', comparisons, list, ivls )\n              fnd = true; break   \n            } \n          }\n        }\n\n        if(fnd === true) break\n        list.push( list.splice(0,1)[0] ) //rotate list by moving head to tail\n      }\n\n      return fnd\n    },\n\n    toAbc( nobj, noteLength = 8 ){\n      let result = ''\n      \n      let acc = nobj.note.substr(1)\n      if(acc === '#') result = '^'\n      else\n      if(acc === '♭') result = '_'\n      else\n      if(acc === '##') result = '^^'\n      else\n      if(acc === '♭♭') result = '__'\n\n      result += nobj.note.substr(0,1)\n       \n      if(nobj.octave === 1) result += ',,'\n      else\n      if(nobj.octave === 2) result += ','\n      else\n      //if(nobj.octave === 3) result = result\n      //else\n      if(nobj.octave === 4) result += \"'\"\n      else\n      if(nobj.octave === 5) result += \"''\"\n      else\n      if(nobj.octave === 6) result += \"''\"\n      else\n      if(nobj.octave === 7) result += \"'''\"\n\n      return result +noteLength\n    }\n  },\n\n  octave( semis ){\n    return Math.floor( semis / 12 )\n  },\n\n  scales:{\n    list:[\n      // tested with: https://www.omnicalculator.com/other/music-scale\n      //            https://www.scales-chords.com/scalenav.php\n      // rules:\n      //   keep accidentals of the same type -- all flat or sharp\n      { name:'Major', abr:'M', short:'Major',\n        // list:[ 'C', 'D', 'E', 'F', 'G', 'A', 'B'],\n        intervals:['P1','M2','M3','P4','P5','M6','M7']\n      },\n      { name:'Natural minor', abr:'m', short:'Minor', \n        // list:[ 'C', 'D', 'D#', 'F', 'G', 'A', 'A#'],\n        intervals:['P1','M2','m3','P4','P5','m6','m7']\n      },\n      { name:'Pentatonic major', abr:'P', short:'Pen.Maj', \n        // list:[ 'C', 'D', 'E', 'G', 'A'],\n        intervals:['P1','M2','M3','P5','M6']\n      },\n      { name:'Pentatonic minor', abr:'p', short:'Pen.min',\n        // list:[ 'C', 'D#', 'F', 'G', 'A#'],\n        intervals:['P1','m3','P4','P5','m7']\n      },\n      { name:'Blues heptatonic', abr:'B7', short:'Blues7',\n        intervals:['P1','M2','m3','P4','d5','M6','m7']\n      },\n      { name:'Blues hexatonic', abr:'B6', short:'Blues6',\n        // 1, ♭3, 4, ♭5, 5, ♭7\n        intervals:['P1','m3','P4','d5','P5','m7']\n      },\n      { name:'Akebono I', abr:'Ak1', short:'Akebono1',\n        intervals:['P1','M2','m3','P5','M6']   // https://ianring.com/musictheory/scales/653 {0,2,3,7,9}\n      },\n      { name:'Akebono II', abr:'Ak2', short:'Akebono2',\n        intervals:['P1','m2','M3','P5','m6']\n        // https://pianoencyclopedia.com/scales/akebono-ii/C-akebono-ii.html:  C, bD, E, G, bA \n        // also: https://ianring.com/musictheory/scales/419\n        // also: https://www.flutopedia.com/csc_5tone_12tet.htm\n      },\n      // { name:'Chromatic', abr:'Ch', short:'Chromatic',\n      //   intervals:['P1','m2','M2','m3','M3','P4','d5','P5','m6','M6','m7','M7']\n      // },\n      { name:'Double harmonic', abr:'DH', short:'Dbl.Hrm',\n        // minor second, major third, perfect fourth and fifth, minor sixth, major seventh -- https://en.wikipedia.org/wiki/Double_harmonic_scale\n        intervals:['P1','m2','M3','P4','P5','m6','M7']\n      },\n      { name:'Gypsy minor', abr:'Gm', short:'Gypsy',\n        // step pattern is W, H, +, H, H, +, H -- https://en.wikipedia.org/wiki/Hungarian_minor_scale\n        intervals:['P1','M2','m3','d5','P5','m6','M7']\n      },\n      { name:'Hungarian major', abr:'HM', short:'Hungarian',\n        // semitones: 3, 1, 2, 1, 2, 1, 2 -- https://en.wikipedia.org/wiki/Hungarian_major_scale\n        intervals:['P1','m3','M3','d5','P5','M6','m7']\n      },\n      { name:'Phrygian dominant', abr:'Pd', short:'Phrygian',\n        //1 – ♭2 – 3 – 4 – 5 – ♭6 – ♭7 – 1  https://en.wikipedia.org/wiki/Phrygian_dominant_scale\n        intervals:['P1','m2','M3','P4','P5','m6','m7']\n      },\n      { name:'Pygmy', abr:'Py', short:'Pygmy',\n        intervals:['P1','M2','m3','P5','m7']\n        // https://ianring.com/musictheory/scales/397  {0,2,3,7,8}\n        // also: https://alchetron.com/Pygmy-music#Pygmy-scale\n      }\n    ],\n    degreeTriads( root, scale ){    //build triads on all scale degrees\n      // return: {type:'Scale Degree Triads', root:root, scale:scale, abr:sobj.abr, list:[]}\n      let sobj = null\n      if(typeof root === 'object') root = root.note\n      if(typeof scale === 'object') sobj = scale\n      else sobj = q.scales.obj(root, scale)\n      if(sobj === null) return null\n\n      let result = {type:'Scale Degree Triads', root:root, scale:scale, abr:sobj.abr, list:[]}\n      const degrees = ['i','ii','iii','iv','v','vi','vii']\n\n      for(let ii = 0; ii < sobj.ivls.length; ii++){    //iterate each scale degree\n        let ivls = []\n        let rootivl = null    //to calc correct semitones for interval\n\n        for(let num = 0; num <= 2; num++ ){   //build triad\n          let iidx = ii +((+2 * num) )\n          if( iidx >= sobj.ivls.length ) iidx -= sobj.ivls.length\n          \n          let ivl = sobj.ivls[ iidx ]\n          ivl = {\n            num:    (num +1),\n            abr:    null,\n            note:   ivl.note, \n            semis0: ivl.semis, \n            semis:  ivl.semis\n          } \n          if(rootivl === null){\n            rootivl = ivl\n            rootivl.semis = 0\n          }\n          else{\n            ivl.semis -= rootivl.semis0\n            if( ivl.semis < 0 ) ivl.semis += 12\n          }\n          ivl.abr = q.intervals.bySemis( ivl.semis, true ).abr\n          ivls.push( ivl )\n        }\n      \n        let deg = degrees[ii]\n        let match = q.chords.findByIvls( ivls )\n        if(match !== null){\n          if( match.name.indexOf('Major') >= 0) deg = deg.toUpperCase()\n          if( match.name.indexOf('Diminished') >= 0) deg += '°'\n          if( match.name.indexOf('Augmented') >= 0) deg += '+'\n        }\n\n        let triad = {\n          root:   sobj.ivls[ii].note,\n          num:    (ii +1),\n          degree: deg,\n          degreeName: sobj.ivls[ii].degName,\n          name:   (match !== null ?match.name :null),\n          abr:    (match !== null ?match.abr :null),\n          ivls:   ivls\n        }\n        result.list.push( triad )\n        // console.log( triad )\n      }\n      return result\n    },\n    byName( scaleName ){\n      for(let scale of q.scales.list){\n        if(scale.name === scaleName || scale.short === scaleName || scale.abr === scaleName)\n          return { ...scale }\n      }\n      return null\n    },\n    obj( root, scaleName ){  //return scale, root and scale intervals\n      let ivls = []\n\n      if(typeof root === 'string')        //else interval object\n        root = q.intervals.byName( root )\n      if(root === null) return null\n\n      let scale = q.scales.byName( scaleName )\n      if(scale === null) return null\n\n      let preferFlats = ( scaleName.indexOf('minor') >= 0 || root.note.indexOf('♭') >= 0 )\n\n      for(let ivlAbr of scale.intervals){   //generate intervals for scale built on root\n        let ivl = q.intervals.byName( ivlAbr )\n        let note = q.notes.calc( root, ivl, preferFlats )\n        ivl = {\n          ...ivl,\n          abr: ivlAbr,    //abbreviation may differ from one assigned to scale\n          note:note,\n        }\n        ivls.push( ivl )\n      }\n\n      let obj = { \n        ...scale, \n        type:'scale',\n        fullName: root.note +' '+scale.name,\n        shortName: root.note +' '+scale.short,\n        abbrevName: root.note +scale.abr,\n        root: root,\n        ivls: ivls \n      }\n      return obj\n    }\n  },\n\n  semis:{\n    calc(note, octaveNum){   //return number of semitones\n        //assume: ocatveNum range: 0 to infinity\n        //assume: Middle C (C4) == (C,4) == (48 +0) == 48\n        //assume:            C0 == (C,0) == ( 0 +0) ==  0\n        //assume: A440     (A4) == (A,4) == (48 +9) == 57\n        let semis = (octaveNum *12)\n        semis += q.intervals.byName( note ).semis\n        return semis\n    },\n  },\n}\n\n\nq.fretboard.init()\nexport default q","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport abcjsObj from 'abcjs'\n\nclass Abcjs extends PureComponent {\n  uniqueNumber = Date.now() + Math.random()\n\n  renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams) {\n    // const res = abcjsObj.renderAbc(\n    abcjsObj.renderAbc(\n      'abcjs-result-' + this.uniqueNumber,\n      abcNotation,\n      parserParams,\n      engraverParams,\n      renderParams\n    )\n    \n//    return res\n  }\n\n  componentDidMount() {\n    const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n    this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n  }\n\n  componentDidUpdate() {\n    const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n    this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%' }}>\n        <div id={'abcjs-result-' + this.uniqueNumber} style={{ width: '100%' }} />\n      </div>\n    )\n  }\n}\n\nAbcjs.propTypes = {\n  abcNotation: PropTypes.string,\n  parserParams: PropTypes.object,\n  engraverParams: PropTypes.object,\n  renderParams: PropTypes.object,\n}\n\nAbcjs.defaultProps = {\n  abcNotation: '',\n  parserParams: {},\n  engraverParams: { responsive: 'resize' },\n  renderParams: { viewportHorizontal: true },\n}\n\nexport default Abcjs\n","/*\n  FretButton.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by FrePnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FretButton.css';\nimport q from \"./guitar_lib.js\";\nimport Abcjs from \"./react-abcjs\"\n\n// sample:\n// <button className='fretButton'>\n//   <span className=spanNote >C\n//     <sub className='subOctave' >octave</sub>\n//   </span>\n//   <sub className='subInterval' >interval</sub>\n// </button>\n\n\nfunction FretButton( props ){\n  // console.log('FretButton', props)\n\n  let {root, nobj, qry} = props\n\n  function buttonClick(event){\n    let btn = event.target\n    if(btn.nodeName !== 'BUTTON'){ \n      btn = btn.parentNode      //span\n      if(btn.nodeName !== 'BUTTON') \n        btn = btn.parentNode    //span span\n    }\n    if(btn.nodeName !== 'BUTTON') return\n    event.stopPropagation()\n\n    if(['fretRoot','noteSelect'].indexOf( qry.rootType ) >= 0  \n    && ['fretRoot','noteSelect'].indexOf( btn.dataset.state ) >= 0\n    && qry.scale === null && qry.chord === null && qry.ivl === null){    //nothing to do, turn off fretRoot state\n\t    props.stateChange( 'fretRoot', null )\n    } else\n    if(qry.rootType === 'fretSelect' && btn.dataset.state === 'fretSelect'\n    && btn.dataset.tab === qry.fretSelect[0].tab){ //hide button\n        // console.log('buttonClick(): stop fretSelect')\n    \t\tprops.stateChange( 'fretSelect', null )\n        return\n    } else\n    if(qry.rootType === 'fretSelect' && props.fretSelectFind( btn.dataset.tab ) >= 0){ //this is a selected fret\n      if(qry.fretSelect.length === 2 )    //one selected fret after this hidden, change to fretRoot\n\t\t    props.stateChange( 'fretRoot', qry.fretSelect[0] )\n      else    //more than two frets selected, deselect this button\n     \t\tprops.stateChange( 'fretSelect', btn.dataset.tab)\n    }\n    else{   //toggle button selected state\n      let selected = Number( btn.dataset.selected )\n      if(selected === 0)\n        btn.dataset.selected = 1\n      else\n      if(selected === 1)\n        btn.dataset.selected = 0\n    }\n  }\n  function btnStyleChange(event){   //toggle formatting of fret button captions\n    // console.log('fretBtnStyleChange', event)\n    event.stopPropagation()\n    \n   if(qry.note === 'All'){\n      if(qry.fretBtnStyle === 'NoteTab')\n   \t  \tprops.stateChange( 'fretBtnStyle', 'NoteAbc' )\n      else\n        props.stateChange( 'fretBtnStyle', 'NoteTab' )\n    }\n    else\n    if(props.qry.fretBtnStyle === 'NoteFirst')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlFirst' )\n    else\n    if(props.qry.fretBtnStyle === 'IvlFirst')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlAbc' )\n    else\n    if(props.qry.fretBtnStyle === 'IvlAbc')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlTab' )\n    else\n   \t\tprops.stateChange( 'fretBtnStyle', 'NoteFirst' )\n  }\n\n  let btnState = '', \n    btnStyle = qry.fretBtnStyle,\n    ivl = nobj.ivl, \n    selected = 0\n    \n    if(ivl === undefined || ivl === null){\n      switch(btnStyle){\n        case 'IvlFirst': btnStyle = 'NoteFirst'; break;\n        case 'IvlAbc': btnStyle = 'NoteAbc'; break;\n        case 'IvlTab': btnStyle = 'NoteTab'; break;\n        default: break; //for React automated testing\n      } \n    }\n\n  //assign format for root note button\n  if(root === 'ALL'){   //user selected All Notes\n    if(qry.octave !== 0 && qry.octave !== nobj.octave)\n      return null      \n    if( ['NoteAbc','NoteTab'].indexOf( qry.fretBtnStyle ) < 0 )\n      btnStyle = 'NoteAbc'\n  }else\n  if(qry.rootType === 'fretRoot'){\n    if(nobj.notes.indexOf( root.note ) >= 0  &&  nobj.semis === root.semis){\n      if(qry.chord === null)\n        btnState = qry.rootType\n    }\n  }else\n  if(qry.rootType === 'noteSelect'){\n    if(root.notes.indexOf( nobj.note ) >= 0){\n      if(qry.chord === null)\n        btnState = qry.rootType\n    }\n  }else\n  if(qry.rootType === 'fretSelect'){\n    // if(nobj.ivl.abr === 'P1' && nobj.tab === qry.fretSelect[0].tab){\n    if(nobj.tab === qry.fretSelect[0].tab){\n      btnState = qry.rootType\n    }else\n    if(nobj.fsmatch){\n      btnState = 'fretSelectMatch'\n      if(nobj.notes.indexOf( qry.fretSelectMatch.obj.ivls[0].note ) >= 0) //obj = scale || chord\n        btnState += 1   //fretSelectMatch1 == root note of chord or scale\n    }\n  }\n\n  //button.dataset.state used to apply CSS\n  if(btnState === '' && nobj.state)\n    btnState = nobj.state\n  // overrides calculated state\n  if(nobj.state === 'triad' || nobj.state === 'triad1'\n  || nobj.state === 'invr'   || nobj.state === 'invr1' )  \n    btnState = nobj.state\n  if(qry.noteFilter.indexOf( nobj.note ) >= 0)   // allow overriding roottype because user selected\n    btnState = 'noteFilter'\n\n  //format button caption\n  let btncaption = [], key=0\n  let renderParams = {    //for AbcJs\n    minPadding:5,   //doesn't work\n    paddingtop:0,\n    paddingbottom:0,\n    paddingleft:0,\n    paddingright:0,\n    //responsive: \"resize\",\n    scale:(nobj.octave <= 2 || nobj.octave >= 5 ?0.3 :0.4),\n    staffwidth:18,\n    textboxpadding:0,\n  }\n\n  let note = nobj.note\n  if( note.indexOf('♭') >= 1 )    //safari does not render ♭ properly\n    note = <span className='btnFlatNote'>{note}</span>\n  else\n    note = <span>{note}</span>\n  \n  //apply button caption style\n  if(btnStyle === 'IvlFirst'){\n    if(nobj.ivl){\n      btncaption.push(\n        <span key={++key} className='spanIvl' onClick={buttonClick} >\n          <span key={++key} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n          {ivl.abr.substr(1)}\n        </span>\n      )\n    }\n    btncaption.push(\n      <sub key={++key} className='subNote' onClick={btnStyleChange}>{nobj.note}\n          <sub key={++key} className='subOctave' >{nobj.octave}</sub>\n      </sub>\n    )\n  }else\n  if(btnStyle === 'IvlAbc'){\n    btncaption.push(\n      <span key={++key} className='spanIvl' onClick={buttonClick} >\n        <span key={++key} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={++key} className='ivlabc abc' onClick={btnStyleChange}\n         ><Abcjs key={++key} \n        abcNotation={'K:clef=none\\n y' +q.notes.toAbc( nobj )}\n        renderParams={renderParams} parserParams={{}} engraverParams={{}}\n      /></sub>\n    )\n  } else\n  if(btnStyle === 'IvlTab'){\n    btncaption.push(\n      <span key={++key} className='spanIvl' onClick={buttonClick} >\n        <span key={++key} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={++key} className='ivltab tab' onClick={btnStyleChange}\n        >{nobj.tab}</sub>\n    )\n  }else\n  if(btnStyle === 'NoteTab'){      \n    btncaption.push(\n      <span key={++key} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={++key} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    btncaption.push(\n      <sub key={++key} className='notetab tab' onClick={btnStyleChange}\n        >{nobj.tab}</sub>\n    )\n  }else\n  if(btnStyle === 'NoteAbc'){\n    btncaption.push(\n      <span key={++key} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={++key} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    btncaption.push(\n      <sub key={++key} className='abc' onClick={btnStyleChange}\n         ><Abcjs key={++key} \n        abcNotation={'K:clef=none\\n y' +q.notes.toAbc( nobj )}\n        renderParams={renderParams} parserParams={{}} engraverParams={{}}\n      /></sub>\n    )\n  } \n  else {  // (btnStyle === 'NoteFirst')\n    btncaption.push(\n      <span key={++key} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={++key} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    if(nobj.ivl){\n      btncaption.push(\n        <sub key={++key} className='subInterval' onClick={btnStyleChange} >{ivl.abr}</sub>\n      )\n    }\n  }\n \n  return (\n    <button key={++key} className='fretButton'  onClick={buttonClick}\n      data-strn={nobj.strgnum} data-fret={nobj.fret}  data-tab={nobj.tab} \n      data-state={btnState} data-selected={selected}\n    >\n      {btncaption}\n    </button>\n  )  \n}\n\nFretButton.propTypes = {\n  root: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  nobj: PropTypes.object,\n  qry:  PropTypes.object,\n  fretSelectFind: PropTypes.func,\n  stateChange: PropTypes.func,\n}\n\nexport default FretButton\n","/*\n  FretPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - manage activation of fretboard controls for GuitarJoe app\n\n*/\n\nimport React from 'react'\nimport './FretPnl.css';\nimport FretButton from './FretButton.jsx';\nimport q from \"./guitar_lib.js\";\n\nclass FretPnl extends React.Component{\n\n  constructor (props) {\n    super(props)\n    this.fretClick = this.fretClick.bind(this)\n    this.fretFltrClick = this.fretFltrClick.bind(this)\n    this.strgFltrClick = this.strgFltrClick.bind(this)\n  }\n\n  fretClick( event ){\n    let qry = this.props.qry,\n      cell = event.target,\n      strN = Number(cell.dataset.strn), \n      fret = Number(cell.dataset.fret)\n\n    if( isNaN(strN) ){\n      console.log('FretPnl.fretClick() error, bad caller:', cell)\n      return \n    }\n    event.stopPropagation()\n    if(cell.dataset.fretfilter === \"true\")\n      return\n\n    if(strN === 7){\n      strN = 6\n    }else\n    if(strN !== 1 && cell.nodeName === 'TD'){ //calc string to use\n      let  cy = event.clientY,\n        abs = cell.getBoundingClientRect(),\n        top = abs.top,\n        mid = top +(cell.offsetHeight  /2)\n\n      if(cy < mid) strN--\n    }\n\n    if(this.props.strgFiltered( strN ) === true)\n      return\n\n    // console.log('fretPnl.fretClick:', strN, fret, cell.className)\n    let note = q.notes.obj( strN, fret )\n    let btn = document.querySelector( '#Fretboard' +qry.fbid +' .fretButton[data-tab=' +note.tab +']')\n    if(btn !== null){\n      event.target = btn\n      this.buttonClick( event )\n      return\n    } else\n    if(['','noteSelect'].indexOf(qry.rootType) >= 0){\n\t\t  this.props.stateChange( 'fretRoot', note )\n    }else\n    if(qry.rootType === 'fretRoot'){\n\t\t  this.props.stateChange( 'fretSelect', [qry.root, note] )\n    }else\n    if(qry.rootType === 'fretSelect'){\n\t    this.props.stateChange( 'fretSelect', note )\n    }\n  }\n  fretFltrClick( event ){ //toggle state for frets\n    let //qry = this.props.qry,\n      btn = event.currentTarget,\n      fret = Number( btn.dataset.fret )\n\n    event.stopPropagation()\n    // console.log( 'fretFltrClick:', fret, qry.fretFilter )\n    this.props.stateChange( 'fretFilter', fret )\n  }\n  strgFltrClick( event ){\n    let btn = event.currentTarget,\n      strN = btn.dataset.strn\n    this.props.stateChange( 'strgFilter', strN )\n    event.stopPropagation()\n  }  \n  \n  rootFind( nobj ){    //select fret = selected fret\n    let qry = this.props.qry\n    if(qry.rootType !== 'fretRoot') return null\n\n    if(nobj.tab === qry.root.tab){\n      return <FretButton \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    }\n    return null\n  }\n  noteFind( nobj ){    //select all frets with note = selNoteVal\n    let qry = this.props.qry\n    if(qry.rootType !== 'noteSelect') return null\n\n    let idx = nobj.notes.indexOf(qry.note)\n    if(qry.note === '' ||  idx >= 0){\n      if(qry.octave === 0 || qry.octave === nobj.octave){\n        if(qry.note !== '')\n          nobj.note = qry.note\n        // return qq.button( nobj, qry.root  )\n        return <FretButton \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n  }  }\n    return null\n  }\n  fretSelectFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.rootType !== 'fretSelect') return null\n    if(qry.fretSelect.length === 0) return null\n\n    for(let fso of qry.fretSelect){\n      if(nobj.tab === fso.tab){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = fso.ivl\n          nobj.note = fso.note\n          // return qq.button( nobj, qry.root )\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  fretSelectMatchFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.rootType !== 'fretSelect') return null\n    if(qry.fretSelectMatch === null) return null\n\n    for(let ivl of qry.fretSelectMatch.obj.ivls){\n      if(nobj.notes.indexOf( ivl.note ) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          if(this.props.fretSelectFind( nobj.tab ) < 0)\n            nobj.fsmatch = true\n          // return qq.button( nobj, qry.root )\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  scaleTriadFind( nobj ){\n    let qry = this.props.qry\n    if(qry.scale === null) return null\n    if(qry.scaleTriadIvls === null) return null\n\n    let ivl = q.intervals.findNote( qry.scaleTriadIvls, nobj )\n    if( ivl === null ) return null\n\n    nobj.note = ivl.note\n    nobj.ivl = ivl\n    nobj.state = 'triad' +(ivl.num === 1 ?1 :'')\n    return <FretButton \n              root={qry.root} nobj={nobj}  qry={qry} \n              fretSelectFind={this.props.fretSelectFind} \n              stateChange={this.props.stateChange} \n           />\n  }\n  octaveFind( nobj ){  //find notes for selected octave\n    let qry = this.props.qry\n    if(qry.note !== '') return\n\n    if(qry.octave === nobj.octave){\n      nobj.ivl = qry.ivl\n      return <FretButton \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    }\n    return null\n  }\n  scaleFind( nobj ){\n    let qry = this.props.qry\n    if(qry.scale === null) return null\n\n    if(qry.rootType === 'fretRoot'){    //exclude frets\n      if(q.fretboard.fretInRange(nobj, qry.root) !== true)\n        return null\n    }\n    for(let ivl of qry.scale.ivls){\n      if( nobj.notes.indexOf(ivl.note) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          // return qq.button( nobj, qry.root )\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  chordFind( nobj ){\n    let qry = this.props.qry\n    if(qry.chord === null) return null\n\n    if(qry.chordInvrNotes !== null){    //inversion format take precedence\n      let inv = this.props.inversionNoteByTab( nobj.tab )\n      if(inv !== null){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.note = inv.note\n          nobj.ivl = inv.invr\n          nobj.state = 'invr' +(inv.invr.num === 1 ?1 :'')\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    if(qry.rootType === 'fretRoot'){    //exclude frets out of range\n      if(q.fretboard.fretInRange(nobj, qry.root) !== true)\n        return null\n    }\n    for(let ivl of qry.chord.ivls){\n      if( nobj.notes.indexOf(ivl.note) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          nobj.state = 'chord' +(ivl.abr === 'P1' ?'1' :'')\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  ivlFind( nobj ){     //select frets matching interval\n    let qry = this.props.qry\n    if(qry.ivl === null) return null\n    \n    let btn = null\n    if( (qry.rootType === 'fretRoot' && nobj.tab === qry.root.tab)\n    ||  (qry.rootType === 'noteSelect' && nobj.notes.indexOf(qry.note) >= 0) ){ //this is the root note object\n      btn = 'root'\n    } else\n    if(qry.rootType === 'fretRoot' && q.fretboard.fretInRange(nobj, qry.root, 4) === true){\n      if( nobj.notes.indexOf(qry.ivl.note) >= 0 )\n        btn = true\n    }else\n    if(qry.rootType === 'noteSelect' && nobj.notes.indexOf(qry.ivl.note) >= 0){\n      btn = true\n    }\n\n    if(btn === 'root'){\n      nobj.ivl = q.intervals.byName('P1')\n      nobj.note = qry.note\n      // btn = qq.button( nobj, qry.root  )\n    }else\n    if(btn === true){\n      if(qry.octave === 0 || qry.octave === nobj.octave){\n        nobj.ivl = qry.ivl\n        nobj.note = qry.ivl.note\n        nobj.state = 'interval'   //new, allow for color coding of intervals\n        // btn =  qq.button( nobj, qry.root  )\n      }\n      else\n        btn = null\n    }\n    if(btn != null)\n      return <FretButton \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    return null\n  }\n\n  buttonFind( nobj ){\n    let qry = this.props.qry\n    let btn = null\n\n    // ordering is critical because it determines which buttons are on top\n    // all modes respect selOctave filter\n\n    //All notes mode\n    if(qry.rootType === 'noteSelect' && this.props.selNoteVal === 'All')\n      btn = <FretButton \n              root={'ALL'} nobj={nobj}  qry={qry} \n              fretSelectFind={this.props.fretSelectFind} \n              stateChange={this.props.stateChange} \n            />\n    //fretSelect mode\n    if(btn === null) btn = this.fretSelectMatchFind( nobj )\n    if(btn === null) btn = this.fretSelectFind( nobj )\n\n    //noteSelect mode\n    if(btn === null) btn = this.ivlFind( nobj )\n    if(btn === null) btn = this.chordFind( nobj )\n    if(btn === null) btn = this.scaleTriadFind( nobj )\n    if(btn === null) btn = this.scaleFind( nobj )\n    if(btn === null){\n      if(qry.rootType === 'fretRoot')\n        btn = this.rootFind( nobj )  //only select the fret clicked\n      else\n      if(qry.rootType === 'noteSelect')\n        btn = this.noteFind( nobj )  //select all frets with note = selNoteVal\n    }\n    if(btn === null) btn = this.octaveFind( nobj )\n    return btn\n  }\n\n  render(){\n    // console.log('fretPnl.render()', this.props)\n    let qry = this.props.qry\n\n    //make table's tr and td\n    let trArray = [],\n      fretMax = q.fretboard.fretMax,    \n      first = this.props.fretFirst,\n      last = this.props.fretLast,\n      ss = ''\n    for (let row = 1; row <= 9; row++) {\n      let frets = []\n      let strN = row -1\n      let strgFltr = this.props.strgFiltered( strN )\n\n      for (let col = 0; col <= fretMax +1; col++) {\n        let tab = '',\n          fretFltr = (qry.fretFilter.indexOf( col ) >= 0)\n\n        let btnStrFltr = null    //create string filter button for fret0 and fretMax\n        if(col === 0 && strN >= 1 && strN <= 6){\n          btnStrFltr=(<div onClick={this.strgFltrClick} data-strn={strN}\n            className={'btnFilter btnStrgFltr btnStrgFltr'+strN}\n           ><div>&diams;</div></div>\n          )\n        }\n\n        if(row === 1){  //top border, fret filter disabled because may not be needed\n          let cls = (col === (fretMax +1) ?'borderRight tdBorder'+col :'tdBorder'+col)\n          let ss = (col === first || col === (fretMax +1) ?' ' :col)\n          if(ss === col && qry.collapsed === true){\n            if([5,7,9,12].indexOf(col) >= 0)\n              ss = <div data-fret={col} className='collapsed' >&nbsp;</div>\n            else\n              ss = ''\n          }\n          frets.push( <td key={col} \n            data-fret={col} data-fretfilter={fretFltr}\n            onMouseDown={this.fretFltrClick} className={cls}>{ss}</td> \n          )\n        }else\n        if(row === 9){  //bottom frame\n\n          if(col === (fretMax +1))    //right bottom corner frame\n            frets.push( <td key={col} className={'borderRight tdBottom col'+col}></td> )\n          else {      //bottom fret frame\n            frets.push(<td key={col} className={'tdBottom col'+col}></td>)\n           }\n\n        }else{   // generate frets with right and left borders\n\n          if(col === fretMax +1){   // right border\n            frets.push( <td key={col} data-strn={strN} data-col={col} className={'borderRight col'+col}></td> )\n          } \n          else{ //fretboard cells\n            let btn = null, stringdiv = null, nobj = null\n\n            if(strN >= 1 && strN <= 6)\n              stringdiv = <div className='stringdiv' onClick={this.fretClick} data-strn={strN} data-fret={col} ></div>\n\n            //process fret button\n            if( strN <= 6\n             && fretFltr === false    //no filter applied to fret\n             && strgFltr === false    //no filter applied to string\n             && col >= first \n             && col <= last){         //filter by fretboard range\n              nobj = q.notes.obj( strN, col )\n              tab = nobj.tab\n              btn = this.buttonFind( nobj )\n            }\n            frets.push(<td key={col} className={'fret fret'+col} onClick={this.fretClick} \n              data-strn={strN} data-fret={col} data-tab={tab} data-fretfilter={fretFltr} >\n              {btnStrFltr}\n              {btn}\n              {stringdiv}\n              <div className='fretbar' onClick={this.fretClick} data-strn={strN} data-fret={col} ></div>\n            </td>)\n           }\n        }\n      }\n\n      if(row === 1) \n        ss = 'frame frameTop'\n      else\n      if(row === 8) \n        ss = 'borderBottom'\n      else\n      if(row === 9) \n        ss = 'frame frameBottom'\n      else{\n        ss = 'strg strg' +(row -1)\n      }\n      trArray.push( <tr key={row} className={ss} data-fltr={strgFltr}>{frets}</tr> )\n    }\n    return (\n      <div className='fretPnlContainer'>\n        <table className='fretPnl'><tbody>\n          {trArray}\n        </tbody></table>\n      </div>\n    )\n  }\n}\n\nexport default FretPnl\n","/*\n  ArrowButton.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - arrow in button frame pointing up or down used to expand/collapse controls\n  - used by to exapnd and collpase controls GuitrJoe app\n*/\nimport React  from 'react';\nimport PropTypes from 'prop-types';\nimport './ArrowButton.css';\n\nfunction ArrowButton( props ){\n\n  let uord =  (props.upOrDn === '' ?'dn' :props.upOrDn.toLowerCase())\n  // console.log('ArrowButton Init', uord, props)\n\n  function onClick(){\n    let newud = (uord === 'up' ?'dn' :'up')\n    // console.log('ArrowButton.onClick', newud )\n    if(props.onChange !== null)\n      props.onChange( newud )\n  }\n\n  let className = 'ArrowBtn ' +(uord === 'up' ?'ArrowBtnUp' :'ArrowBtnDn')\n  \n  let width = (props.width === '' ? '1em' :props.width)\n  let dstyle = { height:width, width:width}\n  let astyle = { fontSize:'calc( '+width+' * 0.8 )' }\n  let arrow = <div style={astyle} >&#10148;</div>\n\n  return (\n    <div className={className} style={dstyle} onClick={onClick} title={props.title} > \n      {arrow}\n    </div>\n  )  \n\n}\n\nArrowButton.propTypes = {\n  upOrDn: PropTypes.string,\n  title: PropTypes.string,\n  width: PropTypes.string,\n  onChange: PropTypes.func,\n}\nArrowButton.defaultProps = {\n  upOrDn: 'up',     //up or dn\n  title: 'Click to collapse',\n  onChange: null,\n  width:'1em',\n}\n\nexport default ArrowButton\n\n","/*\n  InfoPnl.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by QueryPnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ArrowButton from './controls/ArrowButton'\nimport q from \"./guitar_lib.js\";\n\nfunction InfoPnl( props ){\n  let {qry} = props\n\n  function fsChordClick( event ){\n    let btn = event.target\n    // console.log('fsChordClick', btn.dataset.note, btn.dataset.abr)\n\n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else{   //default operation\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === btn.dataset.note && qry.fretSelectMatch.abr === btn.dataset.abr)    //turn off selected match\n        props.stateChange( 'fretSelectMatch', null )\n      else\n        props.stateChange( 'fretSelectMatch', {type:'chord', note:btn.dataset.note, abr:btn.dataset.abr} )\n    }\n  }\n  function fsScaleClick( event ){\n    let btn = event.target\n    // console.log('fsScaleClick', btn.dataset.note, btn.dataset.abr)\n\n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )   //turn off selected match\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else{   //default operation\n      if(qry.fretSelectMatch != null \n      && qry.fretSelectMatch.note === btn.dataset.note && qry.fretSelectMatch.abr === btn.dataset.abr)\n        props.stateChange( 'fretSelectMatch', null )   //turn off selected match\n      else\n        props.stateChange( 'fretSelectMatch', {type:'scale', note:btn.dataset.note, abr:btn.dataset.abr} )\n    }\n  }\n  function infoItemClick(event){\n    event.stopPropagation()\n\n    let btn = event.target   \n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )\n      props.stateChange( 'chordInvrSelected', null )\n      props.stateChange( 'noteFilter', 'clear' )\n      props.stateChange( 'scaleTriadSelected', null )\n    }\n    else {   //default noteFilter: highlight all FretButtons with selected note\n      if(btn.className !== 'ivl')\n        btn = btn.parentNode\n      \n      let note = btn.dataset.note     \n      if(typeof note === 'string')\n        props.stateChange( 'noteFilter', note )\n    }\n  }\n  function invrLabelClick(event){\n    event.stopPropagation()\n    let btn = event.target   \n    props.stateChange( 'chordInvrSelected', btn.dataset.invr )\n  }\n  function triadLabelClick(event){\n    event.stopPropagation()\n    let btn = event.target   \n    props.stateChange( 'scaleTriadSelected', btn.dataset.scaletriad )\n  }\n  \n  function toggleFretSelectMatchDisplay(){\n    let ss = (qry.fretSelectMatchDisplay === 'Show' ?'Hide' :'Show')\n    props.stateChange( 'fretSelectMatchDisplay', ss)\n  }\n  function toggleScaleTriadDisplay(){\n    let ss = (qry.scaleTriadDisplay === 'Show' ?'Hide' :'Show')\n    props.stateChange( 'scaleTriadDisplay', ss)\n  }\n  function toggleChordInvrDisplay(){\n    let ss = (qry.chordInvrDisplay === 'Show' ?'Hide' :'Show')\n    props.stateChange( 'chordInvrDisplay', ss)\n  }\n\n  function drawFretSelectMatches( html, key ){    //push matching chords and scales onto html[]\n    let selected = 0\n    \n    if(qry.fretSelect.length < 2) return null  \n\n    let noblist = qry.fretSelect.slice()\n    let last = null\n    noblist = noblist.filter(function(a){   //filter duplicate notes\n      if(last != null && last.notes.indexOf( a.note ) >= 0) return null\n      last = a\n      return a\n    })\n\n    //test chords for matching notes\n    let list = []\n    let lastkey = key\n    let lastname = null\n    last = null\n    for(let chord of q.chords.list){    \n\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        let ivls = q.chords.obj( iobj.note, chord.name).ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true)\n         list.push( {note:iobj.note, chord:chord} )\n      }\n    }\n\n    for(let ob of list){    //write matching chords\n      let chord = ob.chord\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={fsChordClick}\n        >Matching chords:&nbsp;</span> )\n      }\n\n      selected = 0\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === chord.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== chord.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = chord.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={fsChordClick} title={ob.note +' ' +chord.name}\n        data-note={ob.note} data-abr={chord.abr} data-selected={selected} \n        >&#8200;{ob.note}&#8239;{chord.abr}&#8200;</span> \n      )\n    }\n\n    //test scales for matching notes\n    list = []\n    lastkey = key\n    lastname = null\n    last = null\n    // for(let scale of q.scales.list){   ==> disabled because most scales are not necessary for this use\n    for(let scaleName of ['Major','Minor','Pen.Maj','Pen.min','Blues7','Blues6' /*,'Dbl.Hrm'*/]){\n      //can optimize by caching related minor scales when major found: \n      // Major:Nat.min; Pent Maj:Pen.min,Blues7,Blues6; Dbl.Hrm:Gypsy\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        // let ivls = q.scales.obj( iobj.note, scale.name).ivls    \n        let scale = q.scales.obj( iobj.note, scaleName )\n        let ivls = scale.ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true) \n         list.push( {note:iobj.note, scale:scale} )\n      }\n    }\n\n    for(let ob of list){    //write matching scales\n      selected = 0\n      let scale = ob.scale\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={fsScaleClick}\n        >Matching scales:&nbsp;</span> )\n      }\n\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === scale.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== scale.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = scale.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={fsScaleClick} title={ob.note +' ' +scale.name}\n        data-note={ob.note} data-abr={scale.abr} data-selected={selected} \n        > &#8200;{ob.note}&#8239;{scale.short}&#8200;</span> \n      )\n    }\n\n    return key\n  }\n\n\n  let  selected = 0, html = [], key=0, lastkey=null\n\n  if(qry.rootType === 'fretSelect'){    \n      let fretSelectMatchDisplay = (qry.fretSelectMatchDisplay === 'Show' ?'up' :'dn')\n      let fretSelectMatchTtl = (qry.fretSelectMatchDisplay === 'Show' ?'Hide matching chords and scales' :'Show matching chords and scales')\n\n      html.push( <span key={++key} className='propName' onClick={infoItemClick}\n         data-selected='label'>\n          <ArrowButton upOrDn={fretSelectMatchDisplay} width='1em' title={fretSelectMatchTtl} onChange={toggleFretSelectMatchDisplay}/>\n          Fret select:&nbsp;\n        </span> \n      )\n\n      let last = null\n      qry.fretSelect.forEach( nobj => {\n        if(last && last.note === nobj.note) return\n\n        if(qry.noteFilter.indexOf( nobj.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        html.push( \n          <span key={++key} className='ivl' onClick={infoItemClick}\n            data-note={nobj.note} data-selected={selected}\n            >&nbsp;{nobj.note} <sub>{nobj.ivl.abr}</sub> \n          </span> \n        )\n        last = nobj\n      })\n\n      if(qry.fretSelectMatchDisplay === 'Show'){    //no selected chord or scale to draw\n        if(qry.fretSelectMatch === null){    //no selected chord or scale to draw\n          // if(qry.collapsed !== true){\n            html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n            html.push( <span key={++key} className='propName'\n             data-selected='label' onClick={infoItemClick}\n            > &nbsp;</span> )\n          // }\n        }\n        else{    //draw user select chord or scale match\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n           html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={infoItemClick}\n          >Selected, {qry.fretSelectMatch.obj.fullName}:&nbsp;</span> )\n\n          for(let ivl of qry.fretSelectMatch.obj.ivls){   \n            if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            html.push( <span key={++key} className='ivl' onClick={infoItemClick}\n              data-note={ivl.note} data-selected={selected}\n            >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> </span> )\n          }\n        }\n\n        key = drawFretSelectMatches( html, key )\n      }\n  } else\n  if(qry.rootType === 'noteSelect' && props.selNoteVal === 'All'){    //special case\n    html.push( <span key={++key} className='propName'\n       data-selected='label' onClick={infoItemClick}\n      >{'All Notes'}</span> )\n\n    if(qry.octave !== 0){\n      html.push( <span key={++key} className='ivl'>{': Octave '}{qry.octave} </span> )\n    }\n  }\n  else{   //draw scale, chord and interval labels and notes\n    lastkey = key\n\n    if(qry.scale !== null){\n      let uord = (qry.scaleTriadDisplay === 'Show' ?'up' :'dn')\n      let scaleTriadDisplayTtl = (qry.scaleTriadDisplay === 'Show' ?'Hide Scale Degree Triads' :'Show Scale Degree Triads')\n\n      // html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n      html.push( \n        <span key={++key} className='propName' onClick={infoItemClick} data-selected='label' >\n          <ArrowButton upOrDn={uord} width='1em' title={scaleTriadDisplayTtl} onChange={toggleScaleTriadDisplay}/>\n          {qry.root.note +' ' +qry.scale.name +':'}\n        </span> \n      )\n      qry.scale.ivls.forEach( ivl => {\n        if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        html.push(\n          <span key={++key} className='ivl' onClick={infoItemClick} \n            data-note={ivl.note} data-selected={selected}\n          >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n          </span> \n        )\n      })\n\n      if(qry.scaleTriads !== null && qry.scaleTriadDisplay === 'Show'){   // draw scale degree triads\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( \n          <span key={++key} className='propName' onClick={infoItemClick} data-selected='label' >{ \n            qry.root.note +qry.scale.abr +' Scale Degree Triads:'\n          }</span> \n        )\n\n        qry.scaleTriads.list.forEach( triad => {\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          \n          if( qry.scaleTriadSelected === triad.num ) selected = 'triad'\n          else selected = 0\n          let ss = (triad.abr !== null ?triad.abr :'')\n          \n          html.push( \n            <span key={++key} className='ivl' onClick={triadLabelClick}\n             data-scaletriad={triad.num} data-selected={selected} >{\n              triad.degree +'. ' + triad.root +ss +': '\n            }</span> \n          )\n\n          triad.ivls.forEach( ivl => {\n            if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            html.push( \n              <span key={++key} className='ivl' onClick={infoItemClick}\n               data-note={ivl.note} data-selected={selected}\n              >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n              </span>\n            )\n          })\n        })\n      }\n    }\n    if(qry.chord !== null){\n      let uord = (qry.chordInvrDisplay === 'Show' ?'up' :'dn')\n      let chordInvrDisplayTtl = (qry.chordInvrDisplay === 'Show' ?'Hide Inversions' :'Show Inversions')\n\n      if(lastkey !== key)\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n      html.push( \n        <span key={++key} className='propName' onClick={infoItemClick} data-selected='label'>\n          <ArrowButton upOrDn={uord} width='1em' title={chordInvrDisplayTtl} onChange={toggleChordInvrDisplay}/>\n          { qry.root.note \n            +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n            +' ' +qry.chord.name +':' }        \n        </span> \n      )\n\n      qry.chord.ivls.forEach( ivl => {\n        if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n\n        html.push( \n          <span key={++key} className='ivl' onClick={infoItemClick} \n            data-note={ivl.note} data-selected={selected}\n          >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n          </span> \n        )\n      })\n\n      if(qry.inversions !== null && qry.chordInvrDisplay === 'Show'){    //draw inversions for major chords\n        let invrs = qry.inversions\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n        html.push( \n          <span key={++key} className='propName' onClick={infoItemClick}\n            data-selected='label'>{\n            invrs.root \n            +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n            +qry.chord.abr +' Inversions:'\n           }</span> \n         )\n\n        for(let pos in invrs.positions){\n          let obj = invrs.positions[ pos ]\n          selected = (qry.chordInvrSelected === pos ?'invr' :'')\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          html.push( \n            <span key={++key} className='ivl' onClick={invrLabelClick}\n             data-selected={selected} data-invr={pos}>{\n              pos +' Position: '\n            }</span> \n          )\n          for(let num in obj){\n            let ivl = obj[num]\n            let octave = ([0,1].indexOf(ivl.octave) >= 0 ?'' :ivl.octave)\n            if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            html.push( \n              <span key={++key} className='ivl' onClick={infoItemClick}\n               data-note={ivl.note} data-selected={selected}\n              >&nbsp;{ivl.note +octave} <sub>{ivl.abr}</sub> \n              </span>\n            )\n          }\n        }\n      }\n\n    }\n    if(qry.ivl !== null){\n      if(qry.noteFilter.indexOf( qry.ivl.note ) >= 0) selected = 'noteFilter'\n      else selected = 0\n      \n      if(lastkey !== key)\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n      html.push( <span key={++key} className='propName'\n       data-selected='label' onClick={infoItemClick}\n      >{qry.note \n        +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n        +' + ' \n        +qry.ivl.name +':'\n       }</span> )\n  \n      html.push( <span key={++key} className='ivl' onClick={infoItemClick}\n        data-note={qry.ivl.note} data-selected={selected}\n      >&nbsp;{qry.ivl.note}<sub>{qry.ivl.abr}</sub></span> )\n    }\n  }\n  \n  if(html.length === 0) return null\n  return (\n    <div className='infoPnl'>\n       <div className='infoDiv'>\n         {html}\n       </div>\n    </div>\n  )      \n}\n \n InfoPnl.propTypes = {\n  qry: PropTypes.object,\n  selNoteVal: PropTypes.string,\n  fretSelectFind: PropTypes.func,\n  stateChange: PropTypes.func,\n}\n\nexport default InfoPnl\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    x: \"0px\",\n    y: \"0px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#ffffff\",\n    stroke: \"#0006\",\n    strokeWidth: \"1px\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,23v-4a2,2,0,1,0,0,4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48,24V18.038L47.967,18H32.033L32,18.038V25a7.979,7.979,0,0,0,3.556,6.648l.124.078a8.078,8.078,0,0,0,8.762-.076A7.982,7.982,0,0,0,48,25ZM35.5,22A1.5,1.5,0,1,1,37,20.5,1.5,1.5,0,0,1,35.5,22Zm3.361,6H37V26h1.861a7.445,7.445,0,0,0,3.635-.864L43.5,26.864A9.353,9.353,0,0,1,38.861,28ZM44.5,22A1.5,1.5,0,1,1,46,20.5,1.5,1.5,0,0,1,44.5,22Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"17.279 13 18 10.838 18 4 13 4 13 10.838 13.721 13 17.279 13\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17,35.226V15H14V35.226A5.657,5.657,0,0,1,17,35.226Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50,19v4a2,2,0,0,0,0-4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48,11.41v-.021q0-.66-.034-1.324c0-.022,0-.043,0-.065H32.038c0,.022,0,.044,0,.066-.022.441-.033.883-.034,1.323V12H48Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31,16H49a3.006,3.006,0,0,0,2.829-2H28.171A3.006,3.006,0,0,0,31,16Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.613,6.793A3.329,3.329,0,0,0,44.32,4a3.357,3.357,0,0,0-2.781,1.489,1.853,1.853,0,0,1-3.076,0A3.359,3.359,0,0,0,35.68,4a3.33,3.33,0,0,0-3.292,2.79c-.067.4-.1.806-.154,1.21H47.766C47.716,7.6,47.679,7.19,47.613,6.793Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40,35a9.941,9.941,0,0,1-4-.847V36.17a2,2,0,0,1-1.637,1.963l-1.188.224.383,1.576a6.629,6.629,0,0,0,12.884,0l.383-1.576-1.19-.224A2,2,0,0,1,44,36.17V34.147A9.946,9.946,0,0,1,40,35Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18,57V56H11a1,1,0,0,1-1-1V51a1,1,0,0,1,1-1h7V45.4a5.495,5.495,0,0,1-6-9.131V29.151a5.078,5.078,0,0,0-3.991,4.606,4.891,4.891,0,0,0,.041.926,12.5,12.5,0,0,1-2.032,9.29A9.98,9.98,0,0,0,4,50.3,10.262,10.262,0,0,0,14.35,60h2.3a10.328,10.328,0,0,0,1.8-.161A4.013,4.013,0,0,1,18,58Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.7,58H20a1.958,1.958,0,0,0,.814,1.608A2.01,2.01,0,0,0,22,60h4a1.006,1.006,0,0,1-.555-.168Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"28 60 28.017 59.998 26 60 28 60\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"53.303 51 60 51 60 49 56.303 49 53.303 51\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.941,43.492c-.005-.031-.013-.062-.018-.093a3.991,3.991,0,0,0-.142-.523c-.025-.069-.05-.137-.078-.2a3.814,3.814,0,0,0-.239-.509h0a3.982,3.982,0,0,0-.377-.54c-.014-.018-.03-.034-.045-.051a4.006,4.006,0,0,0-.914-.786c-.06-.038-.12-.075-.18-.108a3.871,3.871,0,0,0-.511-.245l-.041-.017a4.017,4.017,0,0,0-.67-.186l-7.941-1.466-.4,1.643a8.629,8.629,0,0,1-16.772,0l-.4-1.643-7.941,1.466a3.962,3.962,0,0,0-1.248.461c-.044.025-.087.051-.132.079a3.953,3.953,0,0,0-.388.277c-.063.051-.125.1-.184.156-.1.09-.191.186-.28.284-.059.065-.118.13-.173.2a4,4,0,0,0-.576,1c-.025.062-.049.125-.071.189a3.913,3.913,0,0,0-.158.583v0a4.035,4.035,0,0,0-.063.708V47h4a1.006,1.006,0,0,1,.555.168L30.3,51H49.7l5.748-3.832A1.006,1.006,0,0,1,56,47h4V44.162A4.012,4.012,0,0,0,59.941,43.492Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,53a1.006,1.006,0,0,1-.555-.168L23.7,49H20v7h3a1.006,1.006,0,0,1,.555.168L26.3,58H32l20.1,2.005L58,60a2,2,0,0,0,2-2V53H30Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.448,37.594a3.542,3.542,0,0,0-3.893,0,3.492,3.492,0,1,0,4.619,5.133l.012-.059a.716.716,0,0,1,.023-.1c.028-.1.077-.2.11-.293.042-.127.089-.251.14-.374.038-.092.06-.184.1-.277.079-.164.158-.311.238-.451l0-.01c.053-.093.109-.174.163-.257A3.571,3.571,0,0,0,19,40.5,3.469,3.469,0,0,0,17.448,37.594Z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 12,\n    y: 52,\n    width: 6,\n    height: 2\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.134,38.906c.094-.051.18-.119.276-.164l.447-.192a3.5,3.5,0,0,1,.549-.175,3.424,3.424,0,0,1,.462-.11,15.6,15.6,0,0,1,.081-3.578,4.84,4.84,0,0,0,.042-.926A5.079,5.079,0,0,0,19,29.151v7.113a5.445,5.445,0,0,1,1.815,2.825C20.919,39.024,21.025,38.965,21.134,38.906Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.97fcb56e.svg\";\nexport { ForwardRef as ReactComponent };","/*\n  QueryPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - manage query controls for GuitarJoe app\n\n*/\nimport React from 'react'\n\nimport ArrowButton from './controls/ArrowButton'\nimport InfoPnl from \"./InfoPnl\"\nimport q from \"./guitar_lib.js\"\n\n\nclass QueryPnl extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.btnDupeClick = this.btnDupeClick.bind(this)\n    this.btnDelClick = this.btnDelClick.bind(this)\n\n    this.last = {}    //store last query params before reset via label.click\n    this.selLabelClick = this.selLabelClick.bind(this)\n    this.selChordChange = this.selChordChange.bind(this)\n    this.btnClearClick = this.btnClearClick.bind(this)\n    this.btnCollapseClick = this.btnCollapseClick.bind(this)\n    this.selIntervalChange = this.selIntervalChange.bind(this)\n    this.selNoteChange = this.selNoteChange.bind(this)\n    this.selOctaveChange = this.selOctaveChange.bind(this)\n    this.selScaleChange = this.selScaleChange.bind(this)\n  }\n\n  //event handlers\n  btnDelClick(){\n    this.props.remove()\n  }\n  btnDupeClick(){\n    this.props.duplicate()\n  }\n  btnCollapseClick( upordn ){\n    let val = !this.props.qry.collapsed\n    this.props.stateChange( 'collapsed', val )\n  }\n  btnClearClick(){\n    // this.props.dispatch({ type:\"FretboardActions/fretFirstUpdate\", payload:'' })\n    this.props.reset()\n  }\n  selLabelClick( event ){     //reset param to off value\n    let qry = this.props.qry,\n      lbl = event.target,\n      val = lbl.dataset.selected\n    // console.log('last', this.last)\n    if(val === 'true'){\n      if(lbl.dataset.type === 'note'){\n        if(qry.rootType === '') return\n        \n        this.last['rootType'] = qry.rootType\n        this.last['root'] = qry.root\n        if(this.last['rootType'] === 'noteSelect')\n          this.props.stateChange( 'selNoteVal', '' )\n        if(this.last['rootType'] === 'fretRoot')\n          this.props.stateChange( 'fretRoot', null )\n      }else\n      if(lbl.dataset.type === 'chord'){\n        if(qry.chord === null) return\n        this.last['chordName'] = qry.chord.name\n        this.props.stateChange( 'chordName', '' )\n      }else\n      if(lbl.dataset.type === 'scale'){\n        if(qry.scale === null) return\n        this.last['scaleName'] = qry.scale.name\n        this.props.stateChange( 'scaleName', '' )\n      }else\n      if(lbl.dataset.type === 'octave'){\n        this.last['octave'] = qry.octave\n        this.props.stateChange( 'octave', 0 )\n      }else\n      if(lbl.dataset.type === 'ivlName'){\n        this.last['ivlName'] = this.props.ivlName\n        this.props.stateChange( 'ivlName', '' )\n      }\n    }\n    else{   //allow toggling param on and off\n      if(lbl.dataset.type === 'note'){\n        if( !this.last.rootType ) return\n        if(this.last.rootType === 'noteSelect'){\n          if(this.last['root'] !== null)\n            this.props.stateChange( 'selNoteVal', this.last['root'].note )\n        } else\n        if(this.last.rootType === 'fretRoot'){\n          if(this.last['root'] !== null)\n            this.props.stateChange( 'fretRoot', this.last['root'] )\n        }\n      }else\n      if(lbl.dataset.type === 'chord'){\n        if(this.last['chordName'] && this.last['chordName'] !== '')\n          this.props.stateChange( 'chordName', this.last['chordName'] )\n      }else\n      if(lbl.dataset.type === 'scale'){\n        if(this.last['scaleName'] && this.last['scaleName'] !== '')\n          this.props.stateChange( 'scaleName', this.last['scaleName'] )\n      }else\n      if(lbl.dataset.type === 'octave'){\n        if(this.last['octave'] && this.last['octave'] !== '')\n          this.props.stateChange( 'octave', this.last['octave'] )\n      }else\n      if(lbl.dataset.type === 'ivlName'){\n        if(this.last['ivlName'] && this.last['ivlName'] !== '')\n          this.props.stateChange( 'ivlName', this.last['ivlName'] )\n      }\n    }\n  }\n  selNoteChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'selNoteVal', val )\n    //   this.props.dispatch({ type:\"FretboardActions/semisUpdate\", val })\n  }\n  selOctaveChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    if(val === '')\n      this.props.stateChange( 'octave', 0 )\n    else\n      this.props.stateChange( 'octave', Number(val) )\n  }\n  selIntervalChange( event ){\n    let sel = event.target,\n      opt = sel.options[sel.selectedIndex],\n      abr = opt.dataset.abr\n    this.props.stateChange( 'ivlName', abr )\n  }\n  selChordChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'chordName', val )\n  }\n  selScaleChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'scaleName', val )\n  }\n\n  // draw controls\n  drawSelNote(){\n    let qry = this.props.qry,\n      list = [<option key='' ></option>,<option key='999' >All</option>]\n    for(let ii=0; ii < q.notes.list.length; ii++){\n      let note = q.notes.list[ii]\n      list.push(<option key={ii} >{note}</option>)\n    }\n\n    let note = (qry.note === null ?'' :qry.note)\n    return (\n      <div className='dataPnl pnlNote'>\n        <label data-selected={note !== ''} data-type='note' onClick={this.selLabelClick} >Note</label>\n        <select value={note} className='selNote' onChange={this.selNoteChange} >{list}</select>\n      </div>\n    )\n  }\n  drawSelOctave(){\n    let qry = this.props.qry,\n      oct = qry.octave,\n      omin = 0, omax = 0,\n      list = [<option key={999} ></option>]\n\n    omin = q.notes.obj(6, 0).octave\n    omax = q.notes.obj(1, q.fretboard.fretMax).octave\n\n    for(let ii = omax; ii >= omin; ii--){\n      list.push(<option key={ii} >{ii}</option>)\n    }\n    return (\n      <div className='dataPnl pnlOctave'>\n        <label data-selected={oct !== 0} data-type='octave' onClick={this.selLabelClick} >Octave</label>\n        <select value={oct} className='selOctave' onChange={this.selOctaveChange}>\n           {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelScale(){\n    let selected = this.props.scaleName,\n      ii=0, list = [<option key='aaa'></option>]\n    for(let scale of q.scales.list){\n      list.push(<option key={++ii} >{scale.name}</option>)\n    }\n    return (\n      <div className='dataPnl pnlScale'>\n        <label data-selected={selected !== ''} data-type='scale' onClick={this.selLabelClick} >Scale</label>\n        <select value={selected} className='selScale' onChange={this.selScaleChange} >\n          {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelChord(){\n    let ii = 0,\n      selected = this.props.chordName, \n      datastate = '',\n      list = [<option key='aaa'></option>]\n    for(let chd of q.chords.list){\n      list.push(<option key={++ii} >{chd.name}</option>)\n    }\n    if(selected !== '') datastate = 'chord'\n    return (\n      <div className='dataPnl pnlChord'>\n        <label data-selected={selected !== ''} data-type='chord' onClick={this.selLabelClick} >Chord</label>\n        <select value={selected} className='selChord' onChange={this.selChordChange} \n         data-state={datastate}>\n          {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelInterval(){\n    let qry = this.props.qry,\n      list = [<option key='aaa' ></option>],\n      ii = 0, selected = '' , datastate = ''\n    for(let ivl of q.intervals.list){\n      if(ivl.semis === 0) continue\n      if(ivl.semis === 12) continue\n      // if(ivl.abr === last) continue  should be unique\n      let html = `${ivl.name} (${ivl.abr}, ${ivl.semis})`\n      list.push(<option key={++ii} data-abr={ivl.abr} >{html}</option>)\n      if(qry.ivl !== null && selected === '' && qry.ivl.abr === ivl.abr)\n        selected = html\n      // last = ivl.abr\n    }\n    if(selected !== '') datastate = 'interval'\n    return (\n      <div className='dataPnl pnlInterval' >\n        <label data-selected={selected !== ''} onClick={this.selLabelClick} \n          data-type='ivlName' >Interval</label>\n        <select value={selected} className='selInterval' title='Intervals sorted by semis-tones'\n          data-state={datastate} onChange={this.selIntervalChange} \n        >\n          {list}\n        </select>      \n      </div>\n    )\n  }  \n\n  render(){\n    // console.log('queryPnl.render()', this.props)\n    let qry = this.props.qry\n    let qryBtnClass = (qry.collapsed ?'qryBtnSmall' :'qryBtn')\n    let qryDisplayClass = (qry.collapsed ?'queryPnlHide' :'queryPnlShow')\n    let qryDisplay = (qry.collapsed ?'dn' :'up')\n    let qryDisplayTtl = (qry.collapsed ?'Show Query panel' :'Hide Query panel')\n    let qryDisplayWdth = (qry.collapsed ?'1.5em' :'2em')\n\n    let selNote = null\n    let selOct = null\n    let selInt = null\n    let selScale = null\n    let selChord = null\n    if(qry.rootType !== 'fretSelect') { //optimization\n      selNote = this.drawSelNote()\n      selOct = this.drawSelOctave()\n      selInt = this.drawSelInterval()\n      selScale = this.drawSelScale()\n      selChord = this.drawSelChord()\n    }\n\n    return (\n      <div className={'queryPnl '+qryDisplayClass} >\n        <table className='tbQuery' ><tbody><tr>\n        <td className='qryBtnsLeft'>\n           <ArrowButton upOrDn={qryDisplay} width={qryDisplayWdth} title={qryDisplayTtl} onChange={this.btnCollapseClick}/>\n        </td><td className='qryContent'>\n          <div className='queryControls' data-roottype={qry.rootType}>\n            {selNote}\n            {selOct}\n            {selScale}\n            {selChord}\n            {selInt}\n          </div>\n          <InfoPnl \n            qry={qry} \n            selNoteVal={this.props.selNoteVal}\n            fretSelectFind={this.props.fretSelectFind}\n            stateChange={this.props.stateChange}\n           />    \n        </td><td className='qryBtnsRight'>\n            <div className={qryBtnClass +' qryBtnClear'} onClick={this.btnClearClick} title='Reset query controls'>&#8635;</div>\n            <div className={qryBtnClass +' qryBtnDupe'} onClick={this.btnDupeClick} title='Duplicate fretboard' >&#10010;</div>\n            { qry.fbid === 0 ?null\n              :<div className={qryBtnClass +' qryBtnDel'} onClick={this.btnDelClick} title='Remove this fretboard' >&#10000;</div>\n            }\n        </td></tr></tbody></table>\n      </div>\n    )\n  }\n}\n\nexport default QueryPnl\n","/*\nFretboard.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - top level container for fretboard controls of GuitrJoe app\n  - store shared state for FretPnl.js and QueryPnl.js\n\n*/\n\nimport React from 'react';\n\nimport FretPnl from \"./FretPnl\";\nimport QueryPnl from \"./QueryPnl\";\nimport q from \"./guitar_lib.js\";\nimport './Fretboard.css';\n\nclass Fretboard extends React.Component{\n\n  constructor (props) {\n    console.log('Fretboard.constructor()', props)\n    super(props)\n    this.qry = null\n    //keep state private to isolate from children\n    this.state = {\n\t\t\tfbid:(props.fbid ?props.fbid :0),\n\t\t\t\n      collapsed:(props.collapsed ?props.collapsed :false),\n      fretFirst:(props.fretFirst ?props.fretFirst :0),\n      fretLast:(props.fretLast ?props.fretLast :q.fretboard.fretMax),\n      fretFilter:(props.fretFilter ?props.fretFilter :[]),      //csv of fretN, if found then disable fret\n      strgFilter:(props.strgFilter ?props.strgFilter :[]),    //csv of strN, if found then hide notes\n      noteFilter:(props.noteFilter ?props.noteFilter :[]),    //notes on fetboard where button.data-selected=2; set by clicking infoPnl note\n      \n      fretBtnStyle:(props.fretBtnStyle ?props.fretBtnStyle :'NoteFirst'),    //one of: NoteFirst, IvlFirst, NoteTab, NoteAbc\n      rootType:(props.rootType ?props.rootType :''),    //one of: ['', fretRoot, fretSelect, noteSelect]\n\n      fretRoot:(props.fretRoot ?props.fretRoot :null),          //note object, set when fret clicked\n      selNoteVal:(props.selNoteVal ?props.selNoteVal :''),   //string, contains note selected in selNote control\n      octave:(props.octave ?props.octave :0), \n\n      fretSelect:(props.fretSelect ?props.fretSelect :[]),    //when rootType=fretSelect, list of frets and related data; set in fretPnl.fretClick()\n      fretSelectMatch:(props.fretSelectMatch ?props.fretSelectMatch :null),    //user selects a chord or scale to view: {type, name}\n      fretSelectMatchDisplay:(props.fretSelectMatchDisplay ?props.fretSelectMatchDisplay :'Show'),    //Show or Hide\n\n      scaleName:(props.scaleName ?props.scaleName :''),\n      scaleTriadDisplay:(props.scaleTriadDisplay ?props.scaleTriadDisplay :'Show'),    // Show or Hide\n      scaleTriadSelected:(props.scaleTriadSelected ?props.scaleTriadSelected :null),    //null or degree of selected triad\n      \n      chordName:(props.chordName ?props.chordName :''),\n      chordInvrDisplay:(props.chordInvrDisplay ?props.chordInvrDisplay :'Show'),    //Show or Hide\n      chordInvrSelected:(props.chordInvrSelected ?props.chordInvrSelected :null),    //user selected inversion position to display\n\n      ivlName:(props.ivlName ?props.ivlName :''), \n    }\n    this.duplicate = this.duplicate.bind(this)\n    this.remove = this.remove.bind(this)\n    this.reset = this.reset.bind(this)\n    this.stateChange = this.stateChange.bind(this)\n    this.strgFiltered = this.strgFiltered.bind(this)\n    this.makeQuery = this.makeQuery.bind(this)\n    this.fretSelectFind = this.fretSelectFind.bind(this)\n    this.inversionNoteByTab = this.inversionNoteByTab.bind(this)\n  }  \n  reset(){\n    this.setState({ collapsed:false })\n    this.setState({ fretSelect:[] })\n    this.setState({ fretSelectMatch:null })\n    this.setState({ fretSelectMatchDisplay:'Show' })\n    this.setState({ fretFilter:[] })\n    this.setState({ noteFilter:[] })\n    this.setState({ strgFilter:[] })\n    this.setState({ scaleName:'' })\n    this.setState({ scaleTriadDisplay:'Show' })\n    this.setState({ scaleTriadSelected:null })\n    this.setState({ chordName:'' })\n    this.setState({ chordInvrSelected:null })\n    this.setState({ chordInvrDisplay:'Show' })\n    this.setState({ rootType:'' })\n    this.setState({ ivlName:'' })\n    this.setState({ fretRoot:null })\n    this.setState({ selNoteVal:'' })\n    this.setState({ octave:0 })\n    this.setState({ fretBtnStyle:'NoteFirst' })\n  }\n  strgFiltered( strN ){\n    strN = Number(strN)\n    return ( this.state.strgFilter.indexOf( strN ) >= 0 )\n  }\n  remove(){\n    this.props.remove( this )\n  }\n  duplicate(){\n    this.props.duplicate( this )\n  }\n\n  inversionNoteByTab( tab ){\n    if(this.state.chordInvrSelected === null) return null\n    for(let nobj of this.qry.chordInvrNotes){\n      if(nobj.tab === tab) return nobj \n    } \n    return null\n  }\n  fretSelectFind( objOrTab ){\n    let list = this.state.fretSelect,\n      fnd = -1\n\n    if(list.length === 0 || objOrTab === null) return fnd  //empty list\n\n    let  tab = (typeof objOrTab === 'string' ?objOrTab :objOrTab.tab)    //find in list\n    for(let ii = 0; ii < list.length; ii++){\n      if(tab === list[ii].tab){\n        fnd = ii\n        break\n      }\n    }\n    return fnd\n  }\n  stateChange( key, val){\n    // if(key === 'rootType')   //only manually set below; can be prop instead of state\n    //   this.setState({ rootType:val })\n    // else\n    if(key === 'collapsed'){\n      if(val === true){\n        this.setState({ fretSelectMatchDisplay: 'Hide' })\n        this.setState({ scaleTriadDisplay: 'Hide' })\n        this.setState({ chordInvrDisplay: 'Hide' })\n      }\n      else{\n        this.setState({ fretSelectMatchDisplay: 'Show' })\n        this.setState({ scaleTriadDisplay: 'Show' })\n        this.setState({ chordInvrDisplay: 'Show' })\n      }\n      this.setState({ collapsed:val })\n    }else\n    if(key === 'noteFilter'){\n\n      if(val === 'clear'){  //empty list\n        this.setState({ noteFilter:[] })\n      }\n      else {    //default operation\n        let list = this.state.noteFilter.slice()\n        let idx = list.indexOf( val )\n   \n        if(idx < 0) list.push( val )\n        else list.splice( idx, 1 )\n        \n        this.setState({ noteFilter:list })\n      }\n    }else\n    if(key === 'fretBtnStyle'){\n      this.setState({ fretBtnStyle:val })\n    }else\n    if(key === 'fretFilter'){\n      let list = this.state.fretFilter.slice()\n      let idx = list.indexOf( val )\n \n      if(idx < 0) list.push( val )\n      else list.splice( idx, 1 )\n\n      this.setState({ fretFilter:list })\n    }else\n    if(key === 'fretRoot'){\n      this.setState({ fretRoot:val })\n\n      if(val === null)\n         this.setState({ rootType:'' })\n      else\n        this.setState({ rootType:'fretRoot' })\n      this.setState({ selNoteVal:'' })\n      this.setState({ fretSelect:[] })\n      // this.setState({ fretSelectMatch:null })\n    }else\n    if(key === 'selNoteVal'){\n      this.setState({ selNoteVal:val })\n\n      if(val === '')\n        this.setState({ rootType:'' })\n      else\n        this.setState({ rootType:'noteSelect' })\n      this.setState({ fretRoot:null })\n      this.setState({ fretSelect:[] })\n      // this.setState({ fretSelectMatch:null })\n    }else\n    if(key === 'fretSelect'){\n\n      if(val === null){   //disable fretSelect mode\n        this.setState({ fretSelect:[] })\n        // this.setState({ fretSelectMatch:null })\n        this.setState({ rootType:'' })\n        this.setState({ fretRoot:null })\n        this.setState({ selNoteVal:'' })\n        return\n      }\n\n      if(Array.isArray(val) === false)  //process as array due to React state handling\n        val = [val]\n\n      let list = this.state.fretSelect.slice(),\n        idx = null, root=null\n\n      for(let nobj of val){\n        idx = this.fretSelectFind( nobj )\n        if(idx < 0) {\n          if(list.length === 0){\n            nobj.ivl = q.intervals.byName( 'P1' )\n            list.push( nobj )\n          }\n          else{\n            if(root === null) root = list[0]\n            let semis = (nobj.semis -root.semis) % 12\n            if(semis < 12) semis = 12 +semis\n            nobj.ivl = q.intervals.bySemis( semis, true )\n            list.push( nobj )\n          }\n        }else \n          list.splice( idx, 1 )\n      }\n      list.sort(function (a, b) {\n        return a.ivl.semis - b.ivl.semis\n      })\n\n      this.setState({ fretSelect:list })\n      if(this.state.rootType !== 'fretSelect'){   //set rootType to fretSelect\n        this.setState({ rootType:'fretSelect' })\n        this.setState({ fretRoot:null })\n        this.setState({ selNoteVal:'' })\n      }\n    }else\n    if(key === 'fretSelectMatch'){\n      this.setState({ fretSelectMatch:val })\n    }else\n    if(key === 'fretSelectMatchDisplay'){\n      // for now. no other items displayed with fretSelectMatch\n      //this.setState({ fretSelectMatchDisplay:val })\n      if(val === 'Show')\n        this.stateChange( 'collapsed', false)\n      else\n        this.stateChange( 'collapsed', true)\n    }else\n    if(key === 'strgFilter'){\n      val = Number( val )\n      let list = this.state.strgFilter.slice()\n      let idx = list.indexOf( val )\n \n      if(idx < 0) list.push( val )\n      else list.splice( idx, 1 )\n\n      this.setState({ strgFilter:list })\n    }else\n    if(key === 'fretFirst')\n      this.setState({ fretFirst:val })\n    else\n    if(key === 'fretLast')\n      this.setState({ fretLast:val })\n    else\n    if(key === 'octave')\n      this.setState({ octave:val })\n    else\n    if(key === 'scaleName'){\n      this.setState({ scaleName:val })\n    }else\n    if(key === 'scaleTriadSelected'){\n      if(val !== null) val = Number(val)\n      if(this.state.scaleTriadSelected === val)\n        this.setState({ scaleTriadSelected: null })\n      else\n        this.setState({ scaleTriadSelected: val })\n    }else\n    if(key === 'scaleTriadDisplay'){\n      this.setState({ scaleTriadDisplay:val })\n    }else\n    if(key === 'chordName'){\n      this.setState({ chordName:val })\n    }else\n    if(key === 'chordInvrSelected'){\n     if(this.state.chordInvrSelected === val)\n       val = null\n     this.setState({ chordInvrSelected:val })\n    }else\n    if(key === 'chordInvrDisplay'){\n     this.setState({ chordInvrDisplay:val })\n    }else\n    if(key === 'ivlName'){\n      this.setState({ ivlName:val })\n    }else\n    if(key === 'semis')\n      this.setState({ semis:val })\n  }\n  makeQuery(){\n    let qry = {\n      fbid:this.state.fbid,\n\n      collapsed: this.state.collapsed,\n      fretBtnStyle: this.state.fretBtnStyle,\n      fretFilter: this.state.fretFilter,\n      noteFilter: this.state.noteFilter,\n\n      rootType: this.state.rootType,\n      root: null,\n      note: (this.state.rootType === 'fretRoot' \n              ? this.state.fretRoot.notes[0] \n              : this.state.selNoteVal ), \n      octave: this.state.octave,\n      \n      scale: null,\n      scaleTriadDisplay:this.state.scaleTriadDisplay,\n      scaleTriadIvls:null,\n      scaleTriads:null,\n      scaleTriadSelected:this.state.scaleTriadSelected,\n      \n      chord:null,\n      chordInvrDisplay:this.state.chordInvrDisplay,\n      chordInvrSelected:this.state.chordInvrSelected,\n      chordInvrNotes:null,\n      inversions:null,\n\n      ivl: null,\n\n      fretSelect: this.state.fretSelect,\n      fretSelectMatch: this.state.fretSelectMatch,\n      fretSelectMatchDisplay: this.state.fretSelectMatchDisplay,\n    }\n    if(qry.rootType === 'fretSelect'){\n      qry.root = this.state.fretSelect[0]    //note object, set in FretPnl.fretClick()\n  \n      if(qry.fretSelectMatch != null){\n        if(qry.fretSelectMatch.type === 'chord')\n          qry.fretSelectMatch.obj = q.chords.obj( qry.fretSelectMatch.note, qry.fretSelectMatch.abr )\n        else\n        if(qry.fretSelectMatch.type === 'scale')\n          qry.fretSelectMatch.obj = q.scales.obj( qry.fretSelectMatch.note, qry.fretSelectMatch.abr )\n      }\n    } \n    else{\n      if(qry.rootType === 'fretRoot')\n        qry.root = this.state.fretRoot    //note object, set in FretPnl.fretClick()\n      if(qry.rootType === 'noteSelect' && qry.note !== '' && qry.note !== 'All')\n        qry.root = q.notes.objByNote( qry.note )    //note object\n\n\n      if(this.state.scaleName !== '' && qry.root){\n        qry.scale = q.scales.obj( qry.note, this.state.scaleName )\n        qry.scaleTriads = q.scales.degreeTriads( qry.note, this.state.scaleName )\n        if(qry.scaleTriadSelected != null)\n          qry.scaleTriadIvls = qry.scaleTriads.list[ qry.scaleTriadSelected -1 ].ivls\n      }\n      if(this.state.chordName !== '' && qry.root){\n        qry.chord = q.chords.obj( qry.note, this.state.chordName )\n        qry.inversions = q.chords.inversions(qry.root.note, qry.chord.abr, qry.root.octave )\n        if(qry.chordInvrSelected !== null){\n          qry.chordInvrNotes = q.chords.inversionNotes(  qry.inversions, qry.chordInvrSelected )\n        }\n      }\n      if(this.state.ivlName !== '' && qry.root){\n        qry.ivl = q.intervals.byName( this.state.ivlName )    //this.state.ivlName == abr\n        qry.ivl.note = q.notes.calc( qry.note, qry.ivl )\n        // qry.ivl.notes = q.notes.bySemis( qry.root.semis +qry.ivl.semis )\n      }\n    }\n    this.qry = qry\n    return qry\n  }\n  render(){\n    let qry = this.makeQuery()\n    console.log('Fretboard.render()', this.props, this.state, qry)\n    // ivlName={this.state.ivlName}\n    return(\n      <div className='fretboard' id={'Fretboard'+qry.fbid}>\n        <FretPnl\n          collapsed={this.state.collapsed}\n          fretFirst={this.state.fretFirst}\n          fretLast={this.state.fretLast}\n\n          selNoteVal={this.state.selNoteVal} \n\n          qry={qry}\n          stateChange={this.stateChange}\n          strgFiltered={this.strgFiltered}\n          fretSelectFind={this.fretSelectFind}\n          inversionNoteByTab={this.inversionNoteByTab}\n        />\n        <QueryPnl \n          collapsed={this.state.collapsed}\n          fretFirst={this.state.fretFirst}\n          fretLast={this.state.fretLast}\n\n          selNoteVal={this.state.selNoteVal} \n          chordName={this.state.chordName}\n          scaleName={this.state.scaleName}\n          ivlName={this.state.ivlName}\n\n          duplicate={this.duplicate}\n          qry={qry}\n          remove={this.remove}\n          reset={this.reset} \n          stateChange={this.stateChange}\n          strgFiltered={this.strgFiltered} \n         />\n      </div>\n    )\n  }\n}\n\nexport default Fretboard;\n","/*\n  About Dialog\n  - for GuitarJoe by Chris DeFreitas\n\n  requires:\n    Dialog.css\n*/\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport './Dialog.css';\n\nconst About = () => (  \n  <Popup\n    trigger={<button className=\"btnInfo\">About</button>}\n    modal\n    nested\n  >\n    {close => (\n      <div className=\"modal\">\n        <div className=\"header\"> About GuitarJoe <hr className='hrLine' /> </div>\n        <div className=\"content\">\nImportant: <br />\n&nbsp;- Everything is clickable...please explore<br />\n&nbsp;- use your browser's zoom controls to enlarge/shrink the controls\n<br /><br />\nGuitarJoe is a free web application, no ads, no logins, no tracking.  \nThe goal was to create a tool that would make guitar theory accessible while practicing.\nI am not anything close to a musician, so\nI was going crazy taking notes and diagraming chords, scales and intervals: I needed a tool\nto facilitate my understanding so I could focus on the guitar instead of managing scraps of information.\nThis application has successfully reduced my hair loss--I hope it has the same effect on you!\n<br /><br />\nAbout Chord Inversions<br />\nThe guitar provides many combinations for inversions.  The app tryies to display the ideal inversion:  \nThe bass note is highlighted, then the remaining notes are selected in order, on higher strings.  \nUnfortunately, this \nresults in certain inversions having no selections on the fretboard, such as CMaj7 third position.  \n<br /><br />\n&nbsp;- Tested to work in Chrome(Windows), Firefox(Windows, Linux), and Safari(iPad, iPhone)<br />\n&nbsp;- Review documentation, updates and references in the <a href='https://github.com/ChrisDeFreitas/guitarjoe/' target='_new'>GitHub Repository</a> <br />\n&nbsp;- Send comments and bugs to <a href='mailto:ChrisDeFreitas777@gmail.com?subject=GuitarJoe:'>ChrisDeFreitas777@gmail.com</a>\n<br /><br />\nThanks to<br />\n&nbsp;- Application hosted on <a href='https://github.com/ChrisDeFreitas/guitarjoe' target='_new'>Github</a>  <br />\n&nbsp;- Background image from <a href='https://www.flickr.com/photos/webtreatsetc/with/4514047664/' target='_new'>WebTreats ETC</a> <br />\n&nbsp;- Built with the <a href='https://reactjs.org/' target='_new'>React</a> Javascript library <br />\n&nbsp;- Fuggles font by Robert Leuschke on <a href='https://fonts.google.com/?query=Robert+Leuschke/' target='_new'>Google Fonts</a> <br />\n&nbsp;- Guitar icon by monkik from the <a href='https://thenounproject.com/term/guitar/2588464/' target='_new'>Noun Project</a> <br />\n&nbsp;- Popup control from <a href='https://react-popup.elazizi.com/' target='_new'>reactjs-popup</a> <br />\n&nbsp;- <a href='https://github.com/rigobauer/react-abcjs'>react-abcjs</a>, a React component that renders notes on music staffs <br />\n<br />\nCreated by Chris DeFreitas, BC Canada<br />\n        </div>\n        <div className=\"actions\">\n          <button\n            className=\"button\"\n            onClick={() => {\n              console.log('modal closed ');\n              close();\n            }}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    )}\n  </Popup>\n)\n\nexport default About","/*\n  App.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - entrypoint for GuitrJoe app\n\n*/\nimport React, { useState } from 'react';\n\nimport './App.css';\n// import './Bgnd.css';\n// import Bgnd from \"./Bgnd.js\";\nimport Fretboard from \"./Fretboard\"\nimport About from \"./AboutDlg\"\nimport { ReactComponent as Logo } from './resources/logo.svg'\n\n\nfunction App(){\n\n  const [fbs, setFbs] = useState( [{id:0, state:true}] )  //one cell for each fretboard instance\n  const [newid, setNewId] = useState( null )\t\t// assigned in duplicate()\n  \n  function indexOfFbid( fbid ){\n    for(let ii=0; ii < fbs.length; ii++){\n      if(fbs[ii].id === fbid)\n        return ii\n    }\n    return false\n  }\n  function duplicate( fretboard ){\n    let fbid = fretboard.props.fbid,\n      list = fbs.slice(),\n      nid = list.length,\n      obj = {id:nid, state:fretboard.state},\n      idx = indexOfFbid( fbid )\n      \n    if(idx === false)\n      throw new Error(`App.duplicate() error, fbid=[${fbid}] not found.`)\n      \n    list.splice( (idx +1), 0, obj)\t\t\n    setFbs( list )\n    setNewId( nid )\n    // console.log('App.duplicate', list)\n  }\n  function remove( fretboard ){\n    let fbid = fretboard.props.fbid,\n      list = fbs.slice(),\n      idx = indexOfFbid( fbid )\n     \n    if(idx === false)\n      throw new Error(`App.remove() error, fbid=[${fbid}] not found.`)\n\n    list[ idx ].state = false\n    setNewId( null )\n    setFbs( list )\n    // console.log('App.remove()', fbid, list)\n  }\n\n  let list = [], fbCount=fbs.length\n  for(let ii=0; ii < fbCount; ii++){\n    let el = null,\n      id = fbs[ii].id,       //use in .key to help react\n      state = fbs[ii].state  //one of: true, state object, false(a deleted fretboard)\n    if(id === newid){   //create new fretboard\n      el = <Fretboard key={id} fbid={id} duplicate={duplicate} remove={remove} \n\t\t\t\tcollapsed={state.collapsed}\n\t\t\t\tfretFirst={state.fretFirst}\n\t\t\t\tfretLast={state.fretLast}\n\t\t\t\tfretBtnText={state.fretBtnText}\n\t\t\t\t\n        fretFilter={state.fretFilter}\n\t\t\t\tstrgFltrList={state.strgFltrList}\n        noteFilter={state.noteFilter}\n        \n        fretSelect={state.fretSelect}\n        fretSelectMatch={state.fretSelectMatch}\n\n\t\t\t\trootType={state.rootType}\n\t\t\t\tfretRoot={state.fretRoot}\n\t\t\t\tselNoteVal={state.selNoteVal} \n\t\t\t\toctave={state.octave} \n\t\t\t\tscaleName={state.scaleName}\n\t\t\t\tchordName={state.chordName}\n\t\t\n        ivlName={state.ivlName}\n      />\n    }else{\n      if(state !== false) //existing fretboard; magic of react does not overwrite old data\n        el = <Fretboard key={id} fbid={id} duplicate={duplicate} remove={remove} />\n    }\n    if(el != null)\n      list.push( el )\n  }\n\n  return (\n    <div className=\"App\">\n\t\t\t<header className=\"App-header header\">\n        <Logo className=\"Logo\" alt=\"Logo\" />\n        GuitarJoe v0.1.6 <About />\n      </header>\n\t\t\t{list}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <App />\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals( console.log );\n"],"sourceRoot":""}