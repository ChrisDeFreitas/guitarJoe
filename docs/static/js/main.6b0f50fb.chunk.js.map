{"version":3,"sources":["guitar_lib.js","react-abcjs.js","FretButton.jsx","FretPnl.jsx","InfoPnl.jsx","resources/logo.svg","QueryPnl.jsx","Fretboard.js","AboutDlg.js","App.js","index.js"],"names":["q","chords","list","name","abr","intervals","byName","str","chord","Object","assign","obj","root","chordName","ivls","preferFlats","indexOf","note","iname","ivl","notes","calc","push","type","fullName","fullAbbrev","inversions","octave","robj","toUpperCase","objByNote","Number","cobj","maxinversions","length","result","max","positions","rivls","cnt","pos","idx","ioctave","ridx","semis","inversionNotes","invrObj","invrPos","undefined","local_invrToNobj","invr","strgn","parent","rootfret","nobj","strg","fretboard","fret","byNote","fretMax","num","maxInversions","tmp","inversion","fnd","forEach","strings","tabLetter","fretMin","fretMinSet","nn","init","fretMaxSet","ii","strgN","fretInRange","strgnum","tab","bySemis","objBySemis","objByTab","ltr","substr","tabByFret","strN","nm","returnFirst","alpha","ivlOrName","rprefix","rsuffix","iprefix","newlet","newsfx","local_inc","find","fobj","match","nobjList","nidx","slice","comparisons","iidx","splice","toAbc","noteLength","acc","Math","floor","scales","short","scaleName","scale","ivlAbr","shortName","abbrevName","octaveNum","Abcjs","uniqueNumber","Date","now","random","abcNotation","parserParams","engraverParams","renderParams","abcjsObj","renderAbc","this","props","renderAbcNotation","style","width","id","PureComponent","defaultProps","responsive","viewportHorizontal","FretButton","qry","buttonClick","event","btn","target","nodeName","parentNode","stopPropagation","rootType","dataset","state","stateChange","fretSelect","fretSelectFind","selected","btnStyleChange","fretBtnStyle","btnState","btnStyle","fsmatch","fretSelectMatch","noteFilter","btncaption","key","minPadding","paddingtop","paddingbottom","paddingleft","paddingright","staffwidth","textboxpadding","className","onClick","FretPnl","fretClick","bind","fretFltrClick","strgFltrClick","cell","strn","isNaN","console","log","fretfilter","clientY","getBoundingClientRect","top","offsetHeight","strgFiltered","document","querySelector","fbid","currentTarget","fso","inv","inversionNoteByTab","selNoteVal","fretSelectMatchFind","ivlFind","chordFind","scaleFind","rootFind","noteFind","octaveFind","trArray","first","fretFirst","last","fretLast","ss","row","frets","strgFltr","col","fretFltr","fretFilter","btnStrFltr","cls","collapsed","onMouseDown","stringdiv","buttonFind","React","Component","InfoPnl","_g","fsChordClick","fsScaleClick","infoNoteClick","invrLabelClick","html","lastkey","noblist","filter","a","lastname","iobj","ob","title","drawFretSelectMatches","invrs","inversionPos","QueryPnl","btnDupeClick","btnDelClick","selLabelClick","selChordChange","btnClearClick","btnCollapseClick","selIntervalChange","selNoteChange","selOctaveChange","selScaleChange","remove","duplicate","val","reset","lbl","ivlName","sel","options","selectedIndex","text","value","onChange","omin","oct","datastate","chd","selNote","selOct","selInt","selScale","selChord","drawSelNote","drawSelOctave","drawSelInterval","drawSelScale","drawSelChord","infoPnl","arrow","Fretboard","strgFilter","fretRoot","makeQuery","setState","objOrTab","Array","isArray","sort","b","About","trigger","modal","nested","close","href","_excluded","_extends","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlns","viewBox","x","y","ref","fill","stroke","strokeWidth","d","points","height","ForwardRef","App","useState","fbs","setFbs","newid","setNewId","indexOfFbid","nid","Error","fbCount","el","fretBtnText","strgFltrList","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b0f50fb.chunk.js","sourcesContent":["/*\n  //♭ &flat; alt+?\n  \n  GuitarJoe's guitar logic\n  by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  \n   Note:\n    - note refers to what we usually call a note: C#\n    - note object: { strgnum:int, fret:int, note:'C#', semis:49, ... }\n    - note.semis is unique\n    - fret is an integer\n    - fobj is a fret object: frets.obj() => { strg:{}, fret:int, tab:'e12' }\n    - ivl is an interval object: intervals.list[n]\n    - assume: exception handling performed by caller\n\n  Todo:\n    - check for code consistency\n    - (when needed) update notes.calc() for ##/bb -- see comments in function\n  \n */\n\nvar q = {\n\n  chords: {\n    //verified against: https://www.omnicalculator.com/other/chord\n    list:[\n      {\n        name:'Major triad', abr:'maj',\n        intervals:[ 'P1', 'M3', 'P5' ]\n      },{\n        name:'Minor triad', abr:'min',\n        intervals:[ 'P1', 'm3', 'P5' ]\n      },{\n        name:'Augmented triad', abr:'aug',\n        intervals:[ 'P1', 'M3', 'A5' ]\n      },{\n        name:'Diminished triad', abr:'dim',\n        intervals:[ 'P1', 'm3', 'd5' ]\n      },{\n        name:'Dominant seventh', abr:'7',\n        intervals:[ 'P1', 'M3', 'P5', 'm7' ]\n      },{\n        name:'Major seventh', abr:'maj7',\n        intervals:[ 'P1', 'M3', 'P5', 'M7' ]\n      },{\n        name:'Minor seventh', abr:'min7',\n        intervals:[ 'P1', 'm3', 'P5', 'm7' ]\n      },{\n        name:'Major sixth', abr:'maj6',\n        intervals:[ 'P1', 'M3', 'P5', 'M6' ]\n      },{\n        name:'Minor sixth', abr:'min6',\n        intervals:[ 'P1', 'm3', 'P5', 'M6' ]\n      },{\n        name:'Suspended second', abr:'sus2',\n        intervals:[ 'P1', 'M2', 'P5' ]\n      },{\n        name:'Suspended fourth', abr:'sus4',\n        intervals:[ 'P1', 'P4', 'P5' ]\n      }\n    ],\n    byName( str ){\n      for(let chord of q.chords.list){\n        if(chord.abr === str || chord.name === str)\n          return Object.assign({}, chord )\n      }\n      return null\n    },\n    obj( root, chordName ){  //return chord with notes based on root\n      let ivls = [],\n        chord = q.chords.byName( chordName )\n      if(chord === null) return null\n\n      if(typeof root === 'string')\n        root = q.intervals.byName( root )   //object returned to caller\n      if(root === null) return null\n\n      let preferFlats = ( \n          chord.name.indexOf('Minor') >= 0  \n        ||chord.name.indexOf('Diminished') >= 0 \n        || root.note.indexOf('♭') >= 0)\n      for(let iname of chord.intervals){\n        let ivl = q.intervals.byName( iname )\n        let note = q.notes.calc( root, ivl, preferFlats )\n        ivls.push( Object.assign({}, ivl, { note:note } ))\n      }\n\n      let obj = Object.assign({}, chord, {\n        type:'chord',\n        fullName: root.note +' '+chord.name,\n        fullAbbrev: root.note +chord.abr,\n        root: Object.assign({}, root),\n        ivls:ivls\n       })\n\n      return obj\n    },\n    inversions( note, chord, octave = 0 ){   // return an inversion object for given note and scale\n      let robj = null\n      if( typeof note === 'object' ){\n        robj = note\n        note = robj.note\n      }else{\n        note = note.toUpperCase()\n        robj = q.notes.objByNote( note )\n      }\n      if(octave === null) octave = 0\n      robj.octave = Number(octave)\n      let cobj = null\n      if( typeof chord === 'object' ){\n        cobj = chord\n        chord = cobj.abr\n      }else\n        cobj = q.chords.obj(note, chord)\n\n      let maxinversions = cobj.ivls.length\n      let result = { root:robj.note, chord:chord, octave:octave, max:maxinversions, positions:{} }\n      let rivls = cobj.ivls\n      let positions = ['Root','First','Second','Third','Fourth','Fifth']\n\n\n      for( let cnt = 1; cnt <= maxinversions; cnt++){\n        let pos = positions[ cnt -1 ]\n        result.positions[ pos ] = {}\n        let obj = result.positions[ pos ]\n\n        for( let idx = 1; idx <= maxinversions; idx++ ){\n          let ioctave = robj.octave\n          let ridx = idx +(cnt -2) \n          if(ridx >= maxinversions) {\n            ridx -= maxinversions\n            ioctave++\n          }\n          // console.log({idx:idx, ridx:ridx})\n          obj[idx] = Object.assign({}, rivls[ ridx ], { \n            octave:ioctave,\n            semis:q.semis.calc( rivls[ ridx ].note, ioctave )\n          })\n        }\n      }\n      // console.log( result.positions )\n      return result\n    },\n    inversionNotes( invrObj, invrPos ){ //return note objects for all fretboard locations of given inversion\n\n      if( invrObj.positions[invrPos] === undefined )\n        return null\n\n      function local_invrToNobj( invr, strgn, parent = null, rootfret = null ){\n        let nobj = null\n        let strg = q.fretboard.strg( strgn )\n        let note = invr.note\n        let fret = ( q.intervals.byNote( note ).semis  -q.intervals.byNote( strg.note ).semis )\n        if(fret < 0) fret += 12\n        \n        if(rootfret != null) fret = rootfret +12  //for root position: find multiple notes on string\n        \n        while( fret <= q.fretboard.fretMax ){\n          //  console.log('fret'+fret+':', {strg:strg.note, invr:note, fret:fret} )\n          if(fret <= q.fretboard.fretMax){\n            nobj = q.notes.obj( strg.num, fret, note )\n            // console.log('  search:', {iOctave:invr.octave, nOctave:nobj.octave, nobjFret:nobj.fret, parentFret:parentFret })\n            if( parent === null || (nobj.fret >= parent.fret-3 && nobj.fret <= parent.fret+3 ))  //verify proximity of frets\n            //don't verify octaves, leave it for the user to inspect\n            // && ( [0,1].indexOf(invr.octave) >= 0 || nobj.octave === invr.octave ))  //octave == 0||1 means note selected from QueryPnl.selNote\n              break;\n            else{   //keep searching string\n              fret += 12\n              nobj = null\n            }\n          }\n        }\n        return nobj\n      }\n\n      let chord = invrObj.root +invrObj.chord\n      let maxInversions = invrObj.max\n      let inversions = invrObj.positions[invrPos]\n\n      let tmp = []  //temporary store for notes found\n      let list = []     //returned with all notes found\n      for(let strgn = 6; strgn >= maxInversions; strgn--){   //because of inversion logic, rootnote can never be on upper strings\n\n        let rootfret = null\n        while( rootfret === null || rootfret < q.fretboard.fretMax){  //allow searching for root note multiple times\n          //calc fret position of root note\n          let invr = inversions[1]\n          let nobj = local_invrToNobj( invr, strgn, null, rootfret )\n          if(nobj === null) break\n          tmp[0] = nobj\n          tmp[0].invr = {chord:chord, inversion:invrPos, abr:invr.abr, num:1}\n          rootfret = nobj.fret    //\n\n          //calc note n\n          let fnd = true\n          for(let num = 2; num <= maxInversions; num++){\n            let parent = nobj\n            invr = inversions[ num ]\n            nobj = local_invrToNobj( invr, strgn -(num -1), parent, null )\n            if(nobj === null) {\n              fnd = false\n              break\n            }\n            tmp[ num -1 ] = nobj\n            tmp[ num -1 ].invr = {chord:chord, inversion:invrPos, abr:invr.abr, num:num}\n          }\n          if(fnd === false) continue\n\n          tmp.forEach( nobj => list.push( nobj ) )\n        }\n      }\n      if(list.length === 0) return null\n      return list\n    }\n\n  },\n\n  fretboard: {\n    strings: [\n      {num:1, note:'E', octave:4, semis:0, tabLetter:'e' },\n      {num:2, note:'B', octave:3, semis:0, tabLetter:'B' },\n      {num:3, note:'G', octave:3, semis:0, tabLetter:'G' },\n      {num:4, note:'D', octave:3, semis:0, tabLetter:'D' },\n      {num:5, note:'A', octave:2, semis:0, tabLetter:'A' },\n      {num:6, note:'E', octave:2, semis:0, tabLetter:'E' }\n    ],\n\n    fretMin:1,\n    fretMax:14,\n    fretMinSet( nn ){   //not used as yet\n      q.fretboard.fretMin = nn\n      q.fretboard.init()\n    },\n    fretMaxSet( nn ){   //not used as yet\n      q.fretboard.fretMax = nn\n      q.fretboard.init()\n    },\n\n    init(){\n      for(let ii = 0; ii <= q.fretboard.strings.length -1; ii++){\n        let strg = q.fretboard.strings[ii]\n        q.fretboard.strings[ii].semis = q.semis.calc(strg.note, strg.octave)\n      }\n    },\n    strg( strgN ){  \n      return Object.assign({}, q.fretboard.strings[ strgN -1 ])\n    },\n    fretInRange(nobj, root, num = 3){\n      //assume: root is a notes.obj()\n      let max = (num <= 5 ?5 :num)\n      if((root.fret <= 1 && nobj.fret <= max)\n      || (root.fret > 1 && nobj.fret >= (root.fret -num)\n         && nobj.fret <= (root.fret +num)) )\n        return true\n      return null\n    },\n    obj( strg, fret ){\n      if( typeof strg === 'number')\n        strg = q.fretboard.strg( strg )\n      let semis = strg.semis +Number(fret)\n      return {\n        fret:fret, \n        // strg:Object.assign( {}, strg ), \n        strgnum:strg.num, \n        tab:(strg.tabLetter +fret),\n        semis: semis,\n        notes: q.notes.bySemis(semis)\n      }\n    },\n    objBySemis( semis ){\n      let fret = null,\n        fretMax = q.fretboard.fretMax\n      for(let strg of q.fretboard.strings){\n        if(semis >= strg.semis && semis <= (strg.semis +fretMax)){\n          fret = ( semis -strg.semis )\n          return q.fretboard.obj( strg, fret )\n        }\n      }\n      return null\n    },\n    objByTab( tab ){\n      let ltr = tab.substr(0,1),\n        fret = Number(tab.substr(1))\n      for( let strg of q.fretboard.strings ){\n        if(strg.tabLetter === ltr){\n          return q.fretboard.obj( strg, fret )\n        }\n      }\n      return null\n    },\n    tabByFret( strN, fret ){  // return example: 'e12'\n      strN = Number( strN )\n      for( let strg of q.fretboard.strings ){\n        if(strg.num === strN){\n          return ( strg.tabLetter +fret )\n        }\n      }\n      return null\n    },\n  },\n\n  intervals:{\n    list:[\n      //rules:\n      // 1. order by semitones\n      // 2. prefer perfect, major, minor first\n      // 3. prefer minor over diminished\n      // 4. prefer augmented last\n      // 5. removed (♭♭, TT) because added complexity not relevant to most uses\n      // \n      {name:'Perfect unison', abr:'P1',  semis:0, note:'C' },\n      //{name:'Diminished second', abr:'d2', semis:0, note:'D♭♭' },\n      \n      {name:'Minor second', abr:'m2', semis:1, note:'D♭' },\n      {name:'Augmented unison', abr:'A1', semis:1, note:'C#' },\n      \n      {name:'Major second', abr:'M2', semis:2, note:'D' },\n      // {name:'Diminished third', abr:'d3', semis:2, note:'E♭♭' },\n      \n      {name:'Minor third', abr:'m3', semis:3, note:'E♭' },\n      {name:'Augmented second', abr:'A2', semis:3, note:'D#' },\n      \n      {name:'Major third', abr:'M3', semis:4, note:'E' },\n      {name:'Diminished fourth', abr:'d4', semis:4, note:'F♭' },\n\n      {name:'Perfect fourth', abr:'P4', semis:5, note:'F'},\n      {name:'Augmented third', abr:'A3', semis:5, note:'E#'},\n      \n      {name:'Diminished fifth', abr:'d5', semis:6, note:'G♭' },\n      {name:'Augmented fourth', abr:'A4', semis:6, note:'F#' },\n      // {name:'Tritone', abr:'TT', semis:6, note:'TT' },\n      \n      {name:'Perfect fifth', abr:'P5', semis:7, note:'G' },\n      // {name:'Diminished sixth', abr:'d6', semis:7, note:'A♭♭' },\n      \n      {name:'Minor sixth', abr:'m6', semis:8, note:'A♭' },\n      {name:'Augmented fifth', abr:'A5', semis:8, note:'G#' },\n      \n      {name:'Major sixth', abr:'M6', semis:9, note:'A' },\n      // {name:'Diminished seventh', abr:'d7', semis:9, note:'B♭♭' },\n      \n      {name:'Minor seventh', abr:'m7', semis:10, note:'B♭' },\n      {name:'Augmented sixth', abr:'A6', semis:10, note:'A#' },\n      \n      {name:'Major seventh', abr:'M7', semis:11, note:'B' },\n      {name:'Diminished octave', abr:'d8', semis:11, note:'C♭' },\n      \n      {name:'Perfect octave', abr:'P8', semis:12, note:'C' },\n      {name:'Augmented seventh', abr:'A7', semis:12, note:'B#' },\n    ],\n  \n    byNote( note ){\n      note = note.toUpperCase()\n      for(let ivl of q.intervals.list){\n        if(ivl.note === note)\n          return Object.assign({}, ivl)\n      }\n      return null\n    },\n    byName( nm ){\n      let note = nm.toUpperCase()\n      for(let ivl of q.intervals.list){\n        if(ivl.abr === nm || ivl.note === note || ivl.name === nm)\n          return Object.assign({}, ivl)\n      }\n      return null\n    },\n    bySemis( semis, returnFirst = false ){   //return intervals where semis match\n      semis = semis % 12\n      let list = []\n      for(let ivl of q.intervals.list){\n        if(ivl.semis > semis) break    //shortcircuit, intervals ordered by semis\n        if(ivl.semis === semis){\n          let obj = Object.assign({}, ivl)\n          if(returnFirst === true) return obj\n          list.push( obj )\n        }\n      }\n      return list\n    }\n  },\n\n  notes:{\n    list:['C','C#','D♭','D','D#','E♭','E','F','F#','G♭','G','G#','A♭','A','A#','B♭','B'],\n    alpha:['C','D','E','F','G','A','B'],\n\n    bySemis( semis, returnFirst = false ){\n      let list = []\n      semis = Number(semis) % 12\n      for(let ivl of q.intervals.list ){\n        if(ivl.semis === semis){\n          if(returnFirst === true) return ivl.note\n          list.push( ivl.note )\n        }\n        if(ivl.semis > semis) break //intervals ordered by semis\n      }\n      return list\n    },\n    calc( root, ivlOrName, preferFlats = false){  //iterate by semitones to get new note with correct #/b\n      // assume: preferFlats === true: return only flats\n\n      // to handle ##/bb:\n      // 1. pre-loop: resolve to standard note, get new root interval, proceed as normal: C## => D\n      // 2. post loop(???): if ivl requires ##/bb, manually resolve based on new note: D => C##\n\n      if(typeof root === 'object') root = root.note\n      let rprefix = root.substr(0,1)\n      let rsuffix = root.substr(1,2)\n      // console.log('root='+root, 'rprefix='+rprefix, 'rsuffix='+rsuffix)\n\n      let ivl = (typeof ivlOrName === 'object' ?ivlOrName : q.intervals.byName(ivlOrName))\n      let iprefix = ivl.abr.substr(0,1)    // A as in A1\n      // console.log('ivl.abr='+ivl.abr, 'iprefix='+iprefix )\n\n      // test: display matching intervals\n      // let rivl = q.intervals.byName( root )\n      // let list = q.intervals.bySemis( rivl.semis +ivl.semis )\n      // console.log( 'ivl.semis='+ivl.semis, '\\nlist=', list  )\n\n      //assume: no ## or bb used\n      let max = ivl.semis, idx = 0    //idx = q.notes.alpha.indexOf( ltr ) ::: test\n      let newlet = rprefix, newsfx = rsuffix\n      function local_inc( ltr ){\n        idx = q.notes.alpha.indexOf( ltr ) // this can probably be refactored out: notes.alpha[idx % 7] always === newlet; lookup not required\n        idx++\n        return q.notes.alpha[ idx % 7]\n      }\n      for(let ii = 0; ii < max; ii++){\n        // console.log('root='+root, 'newlet='+newlet+newsfx)\n        if(newlet === 'B' && newsfx === ''){ \n          newlet = 'C'; \n        }else\n        if(newlet === 'E' && newsfx === ''){ \n           newlet = 'F'; \n        }else\n        if(newsfx === '♭'){\n          newsfx = ''\n        }else\n        if(newsfx === '#'){\n          newsfx = ''\n          newlet = local_inc( newlet )\n        } \n        else  //newsfx === ''\n        if(iprefix === 'm' || iprefix === 'd'  || preferFlats === true){\n          newsfx = '♭'\n          newlet = local_inc( newlet )\n        }\n        else\n          newsfx = '#'\n      }\n      // console.log('root='+root, 'newlet='+newlet+newsfx)\n      return newlet+newsfx\n    },\n\n    find( strgN, note ){ //return null or list of note objects on string\n      let result = []\n      let strg = q.fretboard.strg( strgN )\n      let max = strg.semis +q.fretboard.fretMax\n      let semis = strg.semis\n      while(semis <= max){\n        let notes = q.notes.bySemis( semis )\n        if(notes.indexOf( note) >= 0){\n          let nobj = q.notes.obj(strg, semis -strg.semis, note)\n          result.push( nobj )\n          semis += 12\n        }\n        else\n          ++semis\n      }\n\n      if(result.length === 0) return null\n      return result\n    },\n    obj( strg, fret, note = null  ){\n      // console.log(111, fret, strg.num)\n      if(typeof strg === 'number')\n        strg = q.fretboard.strg( strg )\n      if(fret < 0) return null\n      let semis = strg.semis +fret\n      if(semis > (strg.semis +q.fretboard.fretMax)) return null\n\n      let octave = q.octave(semis),\n          list = q.notes.bySemis( semis )\n      return {\n        fret: fret,\n        note: (note === null ?list[0] :note),\n        notes: list,\n        octave: octave,\n        semis: semis,\n        // strg: strg, \n        strgnum: strg.num, \n        tab: strg.tabLetter +fret\n      }\n    },\n    objByNote( note /*, octave = 0 */ ){\n      let ivl = q.intervals.byNote( note ),\n          semis = ivl.semis /* +(octave * 12) */,\n          list = q.notes.bySemis( semis )\n          //, fobj = q.fretboard.objBySemis( semis )\n      return {\n        fret: null, // fobj.fret,    //null because input is not specific to a fret\n        note:note,\n        notes:list,\n        octave:null,  //octave,\n        semis:semis,\n        // strg: null, // fobj.strg,\n        strgnum: null, // fobj.strg.num,\n        tab: null // fobj.tab,\n      }\n    },\n    objByTab( tab ){\n      let fobj = q.fretboard.objByTab( tab )\n      return q.notes.obj( fobj.strg, fobj.fret )\n    },\n\n    match( ivls, nobjList ){    //return true/false if notes in nobjList contained within ivls\n      //used to match scales and chords to user selected frets\n      //assume: ivls is a list of intervals.list[n]\n      //assume: nobjList is a list of notes.obj()\n      //assume: no duplicate items allowed\n      //assume: ivls.length > nobjList.length \n      //assume: there may be ivls[n] between matched items: c,e matches c,d,e\n      //assume: matches may occur across head/tail boundaries: e,c matches c,d,e\n      //generally this is a pattern matching algorithm between two lists\n      if(nobjList.length > ivls.length) return false\n\n      let list = nobjList.slice()   //to support rotating list\n      let fnd, nidx\n\n      //break on first match of all items in nobjList\n      for(let comparisons = 1; comparisons <= list.length; comparisons++){ //max comparisons = original pattern +(list.length -1) rotations \n\n        fnd = false; nidx = 0    //reset search params\n        for(let iidx = 0; iidx < ivls.length; iidx++){    //iterate ivls\n          if(list[nidx].notes.indexOf( ivls[iidx].note ) >= 0){ //increment when list item found; allows for gaps in range\n            if(++nidx === list.length){   //point to next list item\n              // console.log( 'found:', comparisons, list, ivls )\n              fnd = true; break   \n            } \n          }\n        }\n\n        if(fnd === true) break\n        list.push( list.splice(0,1)[0] ) //rotate list by moving head to tail\n      }\n\n      return fnd\n    },\n\n    toAbc( nobj, noteLength = 8 ){\n      let result = ''\n      \n      let acc = nobj.note.substr(1)\n      if(acc === '#') result = '^'\n      else\n      if(acc === '♭') result = '_'\n      else\n      if(acc === '##') result = '^^'\n      else\n      if(acc === '♭♭') result = '__'\n\n      result += nobj.note.substr(0,1)\n       \n      if(nobj.octave === 1) result += ',,'\n      else\n      if(nobj.octave === 2) result += ','\n      else\n      //if(nobj.octave === 3) result = result\n      //else\n      if(nobj.octave === 4) result += \"'\"\n      else\n      if(nobj.octave === 5) result += \"''\"\n      else\n      if(nobj.octave === 6) result += \"''\"\n      else\n      if(nobj.octave === 7) result += \"'''\"\n\n      return result +noteLength\n    }\n  },\n\n  octave( semis ){\n    return Math.floor( semis / 12 )\n  },\n\n  scales:{\n    list:[\n      // tested with: https://www.omnicalculator.com/other/music-scale\n      //            https://www.scales-chords.com/scalenav.php\n      // rules:\n      //   keep accidentals of the same type -- all flat or sharp\n      { name:'Major', abr:'M', short:'Major',\n        // list:[ 'C', 'D', 'E', 'F', 'G', 'A', 'B'],\n        intervals:['P1','M2','M3','P4','P5','M6','M7']\n      },\n      { name:'Natural minor', abr:'m', short:'Minor', \n        // list:[ 'C', 'D', 'D#', 'F', 'G', 'A', 'A#'],\n        intervals:['P1','M2','m3','P4','P5','m6','m7']\n      },\n      { name:'Pentatonic major', abr:'P', short:'Pen.Maj', \n        // list:[ 'C', 'D', 'E', 'G', 'A'],\n        intervals:['P1','M2','M3','P5','M6']\n      },\n      { name:'Pentatonic minor', abr:'p', short:'Pen.min',\n        // list:[ 'C', 'D#', 'F', 'G', 'A#'],\n        intervals:['P1','m3','P4','P5','m7']\n      },\n      { name:'Blues heptatonic', abr:'B7', short:'Blues7',\n        intervals:['P1','M2','m3','P4','d5','M6','m7']\n      },\n      { name:'Blues hexatonic', abr:'B6', short:'Blues6',\n        // 1, ♭3, 4, ♭5, 5, ♭7\n        intervals:['P1','m3','P4','d5','P5','m7']\n      },\n      { name:'Akebono I', abr:'Ak1', short:'Akebono1',\n        intervals:['P1','M2','m3','P5','M6']   // https://ianring.com/musictheory/scales/653 {0,2,3,7,9}\n      },\n      { name:'Akebono II', abr:'Ak2', short:'Akebono2',\n        intervals:['P1','m2','M3','P5','m6']\n        // https://pianoencyclopedia.com/scales/akebono-ii/C-akebono-ii.html:  C, bD, E, G, bA \n        // also: https://ianring.com/musictheory/scales/419\n        // also: https://www.flutopedia.com/csc_5tone_12tet.htm\n      },\n      // { name:'Chromatic', abr:'Ch', short:'Chromatic',\n      //   intervals:['P1','m2','M2','m3','M3','P4','d5','P5','m6','M6','m7','M7']\n      // },\n      { name:'Double harmonic', abr:'DH', short:'Dbl.Hrm',\n        // minor second, major third, perfect fourth and fifth, minor sixth, major seventh -- https://en.wikipedia.org/wiki/Double_harmonic_scale\n        intervals:['P1','m2','M3','P4','P5','m6','M7']\n      },\n      { name:'Gypsy minor', abr:'Gm', short:'Gypsy',\n        // step pattern is W, H, +, H, H, +, H -- https://en.wikipedia.org/wiki/Hungarian_minor_scale\n        intervals:['P1','M2','m3','d5','P5','m6','M7']\n      },\n      { name:'Hungarian major', abr:'HM', short:'Hungarian',\n        // semitones: 3, 1, 2, 1, 2, 1, 2 -- https://en.wikipedia.org/wiki/Hungarian_major_scale\n        intervals:['P1','m3','M3','d5','P5','M6','m7']\n      },\n      { name:'Phrygian dominant', abr:'Pd', short:'Phrygian',\n        //1 – ♭2 – 3 – 4 – 5 – ♭6 – ♭7 – 1  https://en.wikipedia.org/wiki/Phrygian_dominant_scale\n        intervals:['P1','m2','M3','P4','P5','m6','m7']\n      },\n      { name:'Pygmy', abr:'Py', short:'Pygmy',\n        intervals:['P1','M2','m3','P5','m7']\n        // https://ianring.com/musictheory/scales/397  {0,2,3,7,8}\n        // also: https://alchetron.com/Pygmy-music#Pygmy-scale\n      }\n    ],\n    byName( scaleName ){\n      for(let scale of q.scales.list){\n        if(scale.name === scaleName || scale.short === scaleName || scale.abr === scaleName)\n          return Object.assign({}, scale)\n      }\n      return null\n    },\n    obj( root, scaleName ){  //return scale, root and scale intervals\n      let ivls = []\n\n      if(typeof root === 'string')        //else interval object\n        root = q.intervals.byName( root )\n      if(root === null) return null\n\n      let scale = q.scales.byName( scaleName )\n      if(scale === null) return null\n\n      let preferFlats = ( scaleName.indexOf('minor') >= 0 || root.note.indexOf('♭') >= 0 )\n\n      for(let ivlAbr of scale.intervals){   //generate intervals for scale built on root\n        let ivl = q.intervals.byName( ivlAbr )\n        let note = q.notes.calc( root, ivl, preferFlats )\n        ivl = Object.assign( {}, ivl, {\n          abr: ivlAbr,    //abbreviation may differ from one assigned to scale\n          note:note,\n        })\n        ivls.push( ivl )\n      }\n\n      let obj = Object.assign( {}, scale, {\n        type:'scale',\n        fullName: root.note +' '+scale.name,\n        shortName: root.note +' '+scale.short,\n        abbrevName: root.note +scale.abr,\n        root: Object.assign({}, root),\n        ivls: ivls \n      })\n      return obj\n    }\n  },\n\n  semis:{\n    calc(note, octaveNum){   //return number of semitones\n        //assume: ocatveNum range: 0 to infinity\n        //assume: Middle C (C4) == (C,4) == (48 +0) == 48\n        //assume:            C0 == (C,0) == ( 0 +0) ==  0\n        //assume: A440     (A4) == (A,4) == (48 +9) == 57\n        let semis = (octaveNum *12)\n        semis += q.intervals.byName( note ).semis\n        return semis\n    },\n  },\n}\n\n\nq.fretboard.init()\nexport default q","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport abcjsObj from 'abcjs'\n\nclass Abcjs extends PureComponent {\n  uniqueNumber = Date.now() + Math.random()\n\n  renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams) {\n    // const res = abcjsObj.renderAbc(\n    abcjsObj.renderAbc(\n      'abcjs-result-' + this.uniqueNumber,\n      abcNotation,\n      parserParams,\n      engraverParams,\n      renderParams\n    )\n    \n//    return res\n  }\n\n  componentDidMount() {\n    const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n    this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n  }\n\n  componentDidUpdate() {\n    const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n    this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%' }}>\n        <div id={'abcjs-result-' + this.uniqueNumber} style={{ width: '100%' }} />\n      </div>\n    )\n  }\n}\n\nAbcjs.propTypes = {\n  abcNotation: PropTypes.string,\n  parserParams: PropTypes.object,\n  engraverParams: PropTypes.object,\n  renderParams: PropTypes.object,\n}\n\nAbcjs.defaultProps = {\n  abcNotation: '',\n  parserParams: {},\n  engraverParams: { responsive: 'resize' },\n  renderParams: { viewportHorizontal: true },\n}\n\nexport default Abcjs\n","/*\n  FretButton.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by FrePnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FretButton.css';\nimport q from \"./guitar_lib.js\";\nimport Abcjs from \"./react-abcjs\"\n\n// sample:\n// <button className='fretButton'>\n//   <span className=spanNote >C\n//     <sub className='subOctave' >octave</sub>\n//   </span>\n//   <sub className='subInterval' >interval</sub>\n// </button>\n\n\nfunction FretButton( props ){\n  // console.log('FretButton', props)\n\n  let {root, nobj, qry} = props\n\n  function buttonClick(event){\n    let btn = event.target\n    if(btn.nodeName !== 'BUTTON'){ \n      btn = btn.parentNode      //span\n      if(btn.nodeName !== 'BUTTON') \n        btn = btn.parentNode    //span span\n    }\n    if(btn.nodeName !== 'BUTTON') return\n    event.stopPropagation()\n\n    if(['fretRoot','selNote'].indexOf( qry.rootType ) >= 0  \n    && ['fretRoot','selNote'].indexOf( btn.dataset.state ) >= 0\n    && qry.scale === null && qry.chord === null && qry.ivl === null){    //nothing to do, turn off fretRoot state\n\t    props.stateChange( 'fretRoot', null )\n    } else\n    if(qry.rootType === 'fretSelect' && btn.dataset.state === 'fretSelect'\n    && btn.dataset.tab === qry.fretSelect[0].tab){ //hide button\n        // console.log('buttonClick(): stop fretSelect')\n    \t\tprops.stateChange( 'fretSelect', null )\n        return\n    } else\n    if(qry.rootType === 'fretSelect' && props.fretSelectFind( btn.dataset.tab ) >= 0){ //this is a selected fret\n      if(qry.fretSelect.length === 2 )    //one selected fret after this hidden, change to fretRoot\n\t\t    props.stateChange( 'fretRoot', qry.fretSelect[0] )\n      else    //more than two frets selected, deselect this button\n     \t\tprops.stateChange( 'fretSelect', btn.dataset.tab)\n    }\n    else{   //toggle button selected state\n      let selected = Number( btn.dataset.selected )\n      if(selected === 0)\n        btn.dataset.selected = 1\n      else\n      if(selected === 1)\n        btn.dataset.selected = 0\n    }\n  }\n  function btnStyleChange(event){   //toggle formatting of fret button captions\n    // console.log('fretBtnStyleChange', event)\n    event.stopPropagation()\n    \n   if(qry.note === 'All'){\n      if(qry.fretBtnStyle === 'NoteTab')\n   \t  \tprops.stateChange( 'fretBtnStyle', 'NoteAbc' )\n      else\n        props.stateChange( 'fretBtnStyle', 'NoteTab' )\n    }\n    else\n    if(props.qry.fretBtnStyle === 'NoteFirst')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlFirst' )\n    else\n    if(props.qry.fretBtnStyle === 'IvlFirst')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlAbc' )\n    else\n    if(props.qry.fretBtnStyle === 'IvlAbc')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlTab' )\n    else\n   \t\tprops.stateChange( 'fretBtnStyle', 'NoteFirst' )\n  }\n\n  let btnState = '', \n    btnStyle = qry.fretBtnStyle,\n    ivl = nobj.ivl, \n    selected = 0\n\n  //assign format for root note button\n  if(root === 'ALL'){   //user selected All Notes\n    if(qry.octave !== 0 && qry.octave !== nobj.octave)\n      return null      \n    if( ['NoteAbc','NoteTab'].indexOf( qry.fretBtnStyle ) < 0 )\n      btnStyle = 'NoteAbc'\n  }else\n  if(qry.rootType === 'fretRoot'){\n    if(nobj.notes.indexOf( root.note ) >= 0  &&  nobj.semis === root.semis){\n      if(qry.chord === null)\n        btnState = qry.rootType\n    }\n  }else\n  if(qry.rootType === 'selNote'){\n    if(root.notes.indexOf( nobj.note ) >= 0){\n      if(qry.chord === null)\n        btnState = qry.rootType\n    }\n  }else\n  if(qry.rootType === 'fretSelect'){\n    // if(nobj.ivl.abr === 'P1' && nobj.tab === qry.fretSelect[0].tab){\n    if(nobj.tab === qry.fretSelect[0].tab){\n      btnState = qry.rootType\n    }else\n    if(nobj.fsmatch){\n      btnState = 'fretSelectMatch'\n      if(nobj.notes.indexOf( qry.fretSelectMatch.obj.ivls[0].note ) >= 0) //obj = scale || chord\n        btnState += 1   //fretSelectMatch1 == root note of chord or scale\n    }\n  }\n\n  //button.dataset.state used to apply CSS\n  if(btnState === '' && nobj.state)\n    btnState = nobj.state\n  if(nobj.state === 'invr' || nobj.state === 'invr1' )  //displaying an inversion; override root state\n    btnState = nobj.state\n  if(qry.noteFilter.indexOf( nobj.note ) >= 0)   // allow overriding roottype because user selected\n    btnState = 'noteFilter'\n\n  //format button caption\n  let btncaption = [], key=0\n  let renderParams = {    //for AbcJs\n    minPadding:5,   //doesn't work\n    paddingtop:0,\n    paddingbottom:0,\n    paddingleft:0,\n    paddingright:0,\n    //responsive: \"resize\",\n    scale:(nobj.octave <= 2 || nobj.octave >= 5 ?0.3 :0.4),\n    staffwidth:18,\n    textboxpadding:0,\n  }\n\n  let note = nobj.note\n  if( note.indexOf('♭') >= 1 )    //safari does not render ♭ properly\n    note = <span className='btnFlatNote'>{note}</span>\n  else\n    note = <span>{note}</span>\n  \n  if(btnStyle === 'IvlFirst'){\n    if(nobj.ivl){\n      btncaption.push(\n        <span key={++key} className='spanIvl' onClick={buttonClick} >\n          <span key={++key} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n          {ivl.abr.substr(1)}\n        </span>\n      )\n    }\n    btncaption.push(\n      <sub key={++key} className='subNote' onClick={btnStyleChange}>{nobj.note}\n          <sub key={++key} className='subOctave' >{nobj.octave}</sub>\n      </sub>\n    )\n  }else\n  if(btnStyle === 'IvlAbc'){\n    btncaption.push(\n      <span key={++key} className='spanIvl' onClick={buttonClick} >\n        <span key={++key} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={++key} className='ivlabc abc' onClick={btnStyleChange}\n         ><Abcjs key={++key} \n        abcNotation={'K:clef=none\\n y' +q.notes.toAbc( nobj )}\n        renderParams={renderParams} parserParams={{}} engraverParams={{}}\n      /></sub>\n    )\n  } else\n  if(btnStyle === 'IvlTab'){\n    btncaption.push(\n      <span key={++key} className='spanIvl' onClick={buttonClick} >\n        <span key={++key} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={++key} className='ivltab tab' onClick={btnStyleChange}\n        >{nobj.tab}</sub>\n    )\n  }else\n  if(btnStyle === 'NoteTab'){      \n    btncaption.push(\n      <span key={++key} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={++key} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    btncaption.push(\n      <sub key={++key} className='notetab tab' onClick={btnStyleChange}\n        >{nobj.tab}</sub>\n    )\n  }else\n  if(btnStyle === 'NoteAbc'){\n    btncaption.push(\n      <span key={++key} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={++key} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    btncaption.push(\n      <sub key={++key} className='abc' onClick={btnStyleChange}\n         ><Abcjs key={++key} \n        abcNotation={'K:clef=none\\n y' +q.notes.toAbc( nobj )}\n        renderParams={renderParams} parserParams={{}} engraverParams={{}}\n      /></sub>\n    )\n  } \n  else {  // (btnStyle === 'NoteFirst')\n    btncaption.push(\n      <span key={++key} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={++key} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    if(nobj.ivl){\n      btncaption.push(\n        <sub key={++key} className='subInterval' onClick={btnStyleChange} >{ivl.abr}</sub>\n      )\n    }\n  }\n \n  return (\n    <button key={++key} className='fretButton'  onClick={buttonClick}\n      data-strn={nobj.strgnum} data-fret={nobj.fret}  data-tab={nobj.tab} \n      data-state={btnState} data-selected={selected}\n    >\n      {btncaption}\n    </button>\n  )  \n}\n\nFretButton.propTypes = {\n  root: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  nobj: PropTypes.object,\n  qry:  PropTypes.object,\n  fretSelectFind: PropTypes.func,\n  stateChange: PropTypes.func,\n}\n\nexport default FretButton\n","/*\n  FretPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - manage activation of fretboard controls for GuitarJoe app\n\n*/\n\nimport React from 'react'\nimport './FretPnl.css';\nimport FretButton from './FretButton.jsx';\nimport q from \"./guitar_lib.js\";\n\nclass FretPnl extends React.Component{\n\n  constructor (props) {\n    super(props)\n    this.fretClick = this.fretClick.bind(this)\n    this.fretFltrClick = this.fretFltrClick.bind(this)\n    this.strgFltrClick = this.strgFltrClick.bind(this)\n  }\n\n  fretClick( event ){\n    let qry = this.props.qry,\n      cell = event.target,\n      strN = Number(cell.dataset.strn), \n      fret = Number(cell.dataset.fret)\n\n    if( isNaN(strN) ){\n      console.log('FretPnl.fretClick() error, bad caller:', cell)\n      return \n    }\n    event.stopPropagation()\n    if(cell.dataset.fretfilter === \"true\")\n      return\n\n    if(strN === 7){\n      strN = 6\n    }else\n    if(strN !== 1 && cell.nodeName === 'TD'){ //calc string to use\n      let  cy = event.clientY,\n        abs = cell.getBoundingClientRect(),\n        top = abs.top,\n        mid = top +(cell.offsetHeight  /2)\n\n      if(cy < mid) strN--\n    }\n\n    if(this.props.strgFiltered( strN ) === true)\n      return\n\n    // console.log('fretPnl.fretClick:', strN, fret, cell.className)\n    let note = q.notes.obj( strN, fret )\n    let btn = document.querySelector( '#Fretboard' +qry.fbid +' .fretButton[data-tab=' +note.tab +']')\n    if(btn !== null){\n      event.target = btn\n      this.buttonClick( event )\n      return\n    } else\n    if(['','selNote'].indexOf(qry.rootType) >= 0){\n\t\t  this.props.stateChange( 'fretRoot', note )\n    }else\n    if(qry.rootType === 'fretRoot'){\n\t\t  this.props.stateChange( 'fretSelect', [qry.root, note] )\n    }else\n    if(qry.rootType === 'fretSelect'){\n\t    this.props.stateChange( 'fretSelect', note )\n    }\n  }\n  fretFltrClick( event ){ //toggle state for frets\n    let //qry = this.props.qry,\n      btn = event.currentTarget,\n      fret = Number( btn.dataset.fret )\n\n    event.stopPropagation()\n    // console.log( 'fretFltrClick:', fret, qry.fretFilter )\n    this.props.stateChange( 'fretFilter', fret )\n  }\n  strgFltrClick( event ){\n    let btn = event.currentTarget,\n      strN = btn.dataset.strn\n    this.props.stateChange( 'strgFilter', strN )\n    event.stopPropagation()\n  }  \n  \n  rootFind( nobj ){    //select fret = selected fret\n    let qry = this.props.qry\n    if(qry.rootType !== 'fretRoot') return null\n\n    if(nobj.tab === qry.root.tab){\n      return <FretButton \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    }\n    return null\n  }\n  noteFind( nobj ){    //select all frets with note = selNoteVal\n    let qry = this.props.qry\n    if(qry.rootType !== 'selNote') return null\n\n    let idx = nobj.notes.indexOf(qry.note)\n    if(qry.note === '' ||  idx >= 0){\n      if(qry.octave === 0 || qry.octave === nobj.octave){\n        if(qry.note !== '')\n          nobj.note = qry.note\n        // return qq.button( nobj, qry.root  )\n        return <FretButton \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n  }  }\n    return null\n  }\n  fretSelectFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.rootType !== 'fretSelect') return null\n    if(qry.fretSelect.length === 0) return null\n\n    for(let fso of qry.fretSelect){\n      if(nobj.tab === fso.tab){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = fso.ivl\n          nobj.note = fso.note\n          // return qq.button( nobj, qry.root )\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  fretSelectMatchFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.rootType !== 'fretSelect') return null\n    if(qry.fretSelectMatch === null) return null\n\n    for(let ivl of qry.fretSelectMatch.obj.ivls){\n      if(nobj.notes.indexOf( ivl.note ) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          if(this.props.fretSelectFind( nobj.tab ) < 0)\n            nobj.fsmatch = true\n          // return qq.button( nobj, qry.root )\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  octaveFind( nobj ){  //find notes for selected octave\n    let qry = this.props.qry\n    if(qry.note !== '') return\n\n    if(qry.octave === nobj.octave){\n      nobj.ivl = qry.ivl\n      return <FretButton \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    }\n    return null\n  }\n  scaleFind( nobj ){\n    let qry = this.props.qry\n    if(qry.scale === null) return null\n\n    if(qry.rootType === 'fretRoot'){    //exclude frets\n      if(q.fretboard.fretInRange(nobj, qry.root) !== true)\n        return null\n    }\n    for(let ivl of qry.scale.ivls){\n      if( nobj.notes.indexOf(ivl.note) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          // return qq.button( nobj, qry.root )\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  chordFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.chord === null) return null\n    if(qry.inversionNotes !== null){    //inversion format take precedence\n      let inv = this.props.inversionNoteByTab( nobj.tab )\n      if(inv !== null){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.note = inv.note\n          nobj.ivl = inv.invr\n          nobj.state = 'invr' +(inv.invr.num === 1 ?1 :'')\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    if(qry.rootType === 'fretRoot'){    //exclude frets out of range\n      if(q.fretboard.fretInRange(nobj, qry.root) !== true)\n        return null\n    }\n    for(let ivl of qry.chord.ivls){\n      if( nobj.notes.indexOf(ivl.note) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          nobj.state = 'chord' +(ivl.abr === 'P1' ?'1' :'')\n          return <FretButton \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  ivlFind( nobj ){     //select frets matching interval\n    let qry = this.props.qry\n    if(qry.ivl === null) return null\n    \n    let btn = null\n    if( (qry.rootType === 'fretRoot' && nobj.tab === qry.root.tab)\n    ||  (qry.rootType === 'selNote' && nobj.notes.indexOf(qry.note) >= 0) ){ //this is the root note object\n      btn = 'root'\n    } else\n    if(qry.rootType === 'fretRoot' && q.fretboard.fretInRange(nobj, qry.root, 4) === true){\n      if( nobj.notes.indexOf(qry.ivl.note) >= 0 )\n        btn = true\n    }else\n    if(qry.rootType === 'selNote' && nobj.notes.indexOf(qry.ivl.note) >= 0){\n      btn = true\n    }\n\n    if(btn === 'root'){\n      nobj.ivl = q.intervals.byName('P1')\n      nobj.note = qry.note\n      // btn = qq.button( nobj, qry.root  )\n    }else\n    if(btn === true){\n      if(qry.octave === 0 || qry.octave === nobj.octave){\n        nobj.ivl = qry.ivl\n        nobj.note = qry.ivl.note\n        nobj.state = 'interval'   //new, allow for color coding of intervals\n        // btn =  qq.button( nobj, qry.root  )\n      }\n      else\n        btn = null\n    }\n    if(btn != null)\n      return <FretButton \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    return null\n  }\n\n  buttonFind( nobj ){\n    let qry = this.props.qry\n    let btn = null\n    // all modes respect selOctave filter\n\n    //All notes mode\n    if(qry.rootType === 'selNote' && this.props.selNoteVal === 'All')\n      btn = <FretButton \n              root={'ALL'} nobj={nobj}  qry={qry} \n              fretSelectFind={this.props.fretSelectFind} \n              stateChange={this.props.stateChange} \n            />\n\n    //fretSelect mode\n    if(btn === null) btn = this.fretSelectMatchFind( nobj )\n    if(btn === null) btn = this.fretSelectFind( nobj )\n\n    // fretRoot and selNote mode\n    if(btn === null) btn = this.ivlFind( nobj )\n    if(btn === null) btn = this.chordFind( nobj )\n    if(btn === null) btn = this.scaleFind( nobj )\n    if(btn === null){\n      if(qry.rootType === 'fretRoot')\n        btn = this.rootFind( nobj )  //only select the fret clicked\n      else\n      if(qry.rootType === 'selNote')\n        btn = this.noteFind( nobj )  //select all frets with note = selNoteVal\n    }\n    if(btn === null) btn = this.octaveFind( nobj )\n    return btn\n  }\n\n  render(){\n    // console.log('fretPnl.render()', this.props)\n    let qry = this.props.qry\n\n    //make table's tr and td\n    let trArray = [],\n      fretMax = q.fretboard.fretMax,    \n      first = this.props.fretFirst,\n      last = this.props.fretLast,\n      ss = ''\n    for (let row = 1; row <= 9; row++) {\n      let frets = []\n      let strN = row -1\n      let strgFltr = this.props.strgFiltered( strN )\n\n      for (let col = 0; col <= fretMax +1; col++) {\n        let tab = '',\n          fretFltr = (qry.fretFilter.indexOf( col ) >= 0)\n\n        let btnStrFltr = null    //create string filter button for fret0 and fretMax\n        if(col === 0 && strN >= 1 && strN <= 6){\n          btnStrFltr=(<div onClick={this.strgFltrClick} data-strn={strN}\n            className={'btnFilter btnStrgFltr btnStrgFltr'+strN}\n           ><div>&diams;</div></div>\n          )\n        }\n\n        if(row === 1){  //top border, fret filter disabled because may not be needed\n          let cls = (col === (fretMax +1) ?'borderRight tdBorder'+col :'tdBorder'+col)\n          let ss = (col === first || col === (fretMax +1) ?' ' :col)\n          if(ss === col && qry.collapsed === true){\n            if([5,7,9,12].indexOf(col) >= 0)\n              ss = <div data-fret={col} className='collapsed' >&nbsp;</div>\n            else\n              ss = ''\n          }\n          frets.push( <td key={col} \n            data-fret={col} data-fretfilter={fretFltr}\n            onMouseDown={this.fretFltrClick} className={cls}>{ss}</td> \n          )\n        }else\n        if(row === 9){  //bottom frame\n\n          if(col === (fretMax +1))    //right bottom corner frame\n            frets.push( <td key={col} className={'borderRight tdBottom col'+col}></td> )\n          else {      //bottom fret frame\n            frets.push(<td key={col} className={'tdBottom col'+col}></td>)\n           }\n\n        }else{   // generate frets with right and left borders\n\n          if(col === fretMax +1){   // right border\n            frets.push( <td key={col} data-strn={strN} data-col={col} className={'borderRight col'+col}></td> )\n          } \n          else{ //fretboard cells\n            let btn = null, stringdiv = null, nobj = null\n\n            if(strN >= 1 && strN <= 6)\n              stringdiv = <div className='stringdiv' onClick={this.fretClick} data-strn={strN} data-fret={col} ></div>\n\n            //process fret button\n            if( strN <= 6\n             && fretFltr === false    //no filter applied to fret\n             && strgFltr === false    //no filter applied to string\n             && col >= first \n             && col <= last){         //filter by fretboard range\n              nobj = q.notes.obj( strN, col )\n              tab = nobj.tab\n              btn = this.buttonFind( nobj )\n            }\n            frets.push(<td key={col} className={'fret fret'+col} onClick={this.fretClick} \n              data-strn={strN} data-fret={col} data-tab={tab} data-fretfilter={fretFltr} >\n              {btnStrFltr}\n              {btn}\n              {stringdiv}\n              <div className='fretbar' onClick={this.fretClick} data-strn={strN} data-fret={col} ></div>\n            </td>)\n           }\n        }\n      }\n\n      if(row === 1) \n        ss = 'frame frameTop'\n      else\n      if(row === 8) \n        ss = 'borderBottom'\n      else\n      if(row === 9) \n        ss = 'frame frameBottom'\n      else{\n        ss = 'strg strg' +(row -1)\n      }\n      trArray.push( <tr key={row} className={ss} data-fltr={strgFltr}>{frets}</tr> )\n    }\n    return (\n      <div className='fretPnlContainer'>\n        <table className='fretPnl'><tbody>\n          {trArray}\n        </tbody></table>\n      </div>\n    )\n  }\n}\n\nexport default FretPnl\n","/*\n  InfoPnl.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by QueryPnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport q from \"./guitar_lib.js\";\n\n\nfunction InfoPnl( props ){\n  let {qry} = props\n\n  function fsChordClick( event ){\n    let btn = event.target\n    // console.log('fsChordClick', btn.dataset.note, btn.dataset.abr)\n\n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else{   //default operation\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === btn.dataset.note && qry.fretSelectMatch.abr === btn.dataset.abr)    //turn off selected match\n        props.stateChange( 'fretSelectMatch', null )\n      else\n        props.stateChange( 'fretSelectMatch', {type:'chord', note:btn.dataset.note, abr:btn.dataset.abr} )\n    }\n  }\n  function fsScaleClick( event ){\n    let btn = event.target\n    // console.log('fsScaleClick', btn.dataset.note, btn.dataset.abr)\n\n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )   //turn off selected match\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else{   //default operation\n      if(qry.fretSelectMatch != null \n      && qry.fretSelectMatch.note === btn.dataset.note && qry.fretSelectMatch.abr === btn.dataset.abr)\n        props.stateChange( 'fretSelectMatch', null )   //turn off selected match\n      else\n        props.stateChange( 'fretSelectMatch', {type:'scale', note:btn.dataset.note, abr:btn.dataset.abr} )\n    }\n  }\n  function infoNoteClick(event){\n    event.stopPropagation()\n\n    let btn = event.target   \n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else {   //default operation\n      if(btn.className !== 'ivl')\n        btn = btn.parentNode\n      \n      let note = btn.dataset.note     \n      if(typeof note === 'string')\n        props.stateChange( 'noteFilter', note )\n        // props.stateChange( 'noteFilter', note, btn.className )\n    }\n  }\n  function invrLabelClick(event){\n    event.stopPropagation()\n    let btn = event.target   \n    props.stateChange( 'inversionPos', btn.dataset.invr )\n  }\n  function drawFretSelectMatches( html, key ){    //push matching chords and scales onto html[]\n    let selected = 0\n    \n    if(qry.fretSelect.length < 2) return null  \n\n    let noblist = qry.fretSelect.slice()\n    let last = null\n    noblist = noblist.filter(function(a){   //filter duplicate notes\n      if(last != null && last.notes.indexOf( a.note ) >= 0) return null\n      last = a\n      return a\n    })\n\n    //test chords for matching notes\n    let list = []\n    let lastkey = key\n    let lastname = null\n    last = null\n    for(let chord of q.chords.list){    \n\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        let ivls = q.chords.obj( iobj.note, chord.name).ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true)\n         list.push( {note:iobj.note, chord:chord} )\n      }\n    }\n\n    for(let ob of list){    //write matching chords\n      let chord = ob.chord\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={fsChordClick}\n        >Matching chords:&nbsp;</span> )\n      }\n\n      selected = 0\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === chord.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== chord.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = chord.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={fsChordClick} title={ob.note +' ' +chord.name}\n        data-note={ob.note} data-abr={chord.abr} data-selected={selected} \n        >&#8200;{ob.note}&#8239;{chord.abr}&#8200;</span> \n      )\n    }\n\n    //test scales for matching notes\n    list = []\n    lastkey = key\n    lastname = null\n    last = null\n    // for(let scale of q.scales.list){   ==> disabled because most scales are not necessary for this use\n    for(let scaleName of ['Major','Minor','Pen.Maj','Pen.min','Blues7','Blues6' /*,'Dbl.Hrm'*/]){\n      //can optimize by caching related minor scales when major found: \n      // Major:Nat.min; Pent Maj:Pen.min,Blues7,Blues6; Dbl.Hrm:Gypsy\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        // let ivls = q.scales.obj( iobj.note, scale.name).ivls    \n        let scale = q.scales.obj( iobj.note, scaleName )\n        let ivls = scale.ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true) \n         list.push( {note:iobj.note, scale:scale} )\n      }\n    }\n\n    for(let ob of list){    //write matching scales\n      selected = 0\n      let scale = ob.scale\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={fsScaleClick}\n        >Matching scales:&nbsp;</span> )\n      }\n\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === scale.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== scale.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = scale.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={fsScaleClick} title={ob.note +' ' +scale.name}\n        data-note={ob.note} data-abr={scale.abr} data-selected={selected} \n        > &#8200;{ob.note}&#8239;{scale.short}&#8200;</span> \n      )\n    }\n\n    return key\n  }\n\n  let  selected = 0, html = [], key=0, lastkey=null\n\n  if(qry.rootType === 'fretSelect'){    \n      html.push( <span key={++key} className='propName'\n         data-selected='label' onClick={infoNoteClick}\n        >Fret select:&nbsp;</span> )\n\n      let last = null\n      qry.fretSelect.forEach( nobj => {\n        if(last && last.note === nobj.note) return\n\n        if(qry.noteFilter.indexOf( nobj.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        html.push( <span key={++key} className='ivl'\n          onClick={infoNoteClick} data-note={nobj.note} data-selected={selected}\n        >&nbsp;{nobj.note} <sub>{nobj.ivl.abr}</sub> </span> )\n        last = nobj\n      })\n\n      if(qry.fretSelectMatch === null){    //no selected chord or scale to draw\n        if(qry.collapsed !== true){\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={infoNoteClick}\n          > &nbsp;</span> )\n        }\n      }\n      else{    //draw user select chord or scale match\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n         html.push( <span key={++key} className='propName'\n         data-selected='label' onClick={infoNoteClick}\n        >Selected, {qry.fretSelectMatch.obj.fullName}:&nbsp;</span> )\n\n        for(let ivl of qry.fretSelectMatch.obj.ivls){   \n          if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n          else selected = 0\n\n          html.push( <span key={++key} className='ivl' onClick={infoNoteClick}\n            data-note={ivl.note} data-selected={selected}\n          >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> </span> )\n        }\n      }\n\n    if(qry.collapsed !== true){\n      key = drawFretSelectMatches( html, key )\n    }\n  } else\n  if(qry.rootType === 'selNote' && props.selNoteVal === 'All'){    //special case\n    html.push( <span key={++key} className='propName'\n       data-selected='label' onClick={infoNoteClick}\n      >{'All Notes'}</span> )\n\n    if(qry.octave !== 0){\n      html.push( <span key={++key} className='ivl'>{': Octave '}{qry.octave} </span> )\n    }\n  }\n  else{   //draw scale, chord and interval labels and notes\n    lastkey = key\n    if(qry.scale !== null){\n      // html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n      html.push( <span key={++key} className='propName'\n         data-selected='label' onClick={infoNoteClick}\n        >{qry.root.note +' ' +qry.scale.name +':'}</span> )\n      qry.scale.ivls.forEach( ivl => {\n        if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        html.push( <span key={++key} className='ivl'\n          onClick={infoNoteClick} data-note={ivl.note} data-selected={selected}\n        >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> </span> )\n      })\n    }\n    if(qry.chord !== null){\n      if(lastkey !== key)\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n      html.push( <span key={++key} className='propName'\n         data-selected='label' onClick={infoNoteClick}\n        >{qry.root.note \n        +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n        +' ' +qry.chord.name +':'}</span> )\n\n      qry.chord.ivls.forEach( ivl => {\n        if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n\n        html.push( <span key={++key} className='ivl'\n          onClick={infoNoteClick} data-note={ivl.note} data-selected={selected}\n         >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> </span> )\n      })\n\n      if(qry.inversions !== null){    //draw inversions for major chords\n        let invrs = qry.inversions\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n        html.push( <span key={++key} className='propName'\n         data-selected='label' onClick={infoNoteClick}\n        >{invrs.root \n         +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n         +qry.chord.abr +' Inversions:'}</span> )\n\n        for(let pos in invrs.positions){\n          let obj = invrs.positions[ pos ]\n          selected = (qry.inversionPos === pos ?'invr' :'')\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          html.push( <span key={++key} className='ivl' onClick={invrLabelClick}\n            data-selected={selected} data-invr={pos}\n            > {pos +' Position: '}</span> )\n          for(let num in obj){\n            let ivl = obj[num]\n            // let octave = ivl.octave\n            let octave = ([0,1].indexOf(ivl.octave) >= 0 ?'' :ivl.octave)\n            if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            html.push( <span key={++key} className='ivl'\n              onClick={infoNoteClick} data-note={ivl.note} data-selected={selected}\n             >&nbsp;{ivl.note +octave} <sub>{ivl.abr}</sub> </span> )\n          }\n        }\n      }\n\n    }\n    if(qry.ivl !== null){\n      if(qry.noteFilter.indexOf( qry.ivl.note ) >= 0) selected = 'noteFilter'\n      else selected = 0\n      \n      if(lastkey !== key)\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n      html.push( <span key={++key} className='propName'\n       data-selected='label' onClick={infoNoteClick}\n      >{qry.note \n        +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n        +' + ' \n        +qry.ivl.name +':'\n       }</span> )\n  \n      html.push( <span key={++key} className='ivl' onClick={infoNoteClick}\n        data-note={qry.ivl.note} data-selected={selected}\n      >&nbsp;{qry.ivl.note}<sub>{qry.ivl.abr}</sub></span> )\n    }\n  }\n  \n  if(html.length === 0) return null\n  return (\n    <div className='infoPnl'>\n       <div className='infoDiv'>\n         {html}\n       </div>\n    </div>\n  )      \n}\n \n InfoPnl.propTypes = {\n  qry: PropTypes.object,\n  selNoteVal: PropTypes.string,\n  fretSelectFind: PropTypes.func,\n  stateChange: PropTypes.func,\n}\n\nexport default InfoPnl\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    x: \"0px\",\n    y: \"0px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#ffffff\",\n    stroke: \"#0006\",\n    strokeWidth: \"1px\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,23v-4a2,2,0,1,0,0,4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48,24V18.038L47.967,18H32.033L32,18.038V25a7.979,7.979,0,0,0,3.556,6.648l.124.078a8.078,8.078,0,0,0,8.762-.076A7.982,7.982,0,0,0,48,25ZM35.5,22A1.5,1.5,0,1,1,37,20.5,1.5,1.5,0,0,1,35.5,22Zm3.361,6H37V26h1.861a7.445,7.445,0,0,0,3.635-.864L43.5,26.864A9.353,9.353,0,0,1,38.861,28ZM44.5,22A1.5,1.5,0,1,1,46,20.5,1.5,1.5,0,0,1,44.5,22Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"17.279 13 18 10.838 18 4 13 4 13 10.838 13.721 13 17.279 13\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17,35.226V15H14V35.226A5.657,5.657,0,0,1,17,35.226Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50,19v4a2,2,0,0,0,0-4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48,11.41v-.021q0-.66-.034-1.324c0-.022,0-.043,0-.065H32.038c0,.022,0,.044,0,.066-.022.441-.033.883-.034,1.323V12H48Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31,16H49a3.006,3.006,0,0,0,2.829-2H28.171A3.006,3.006,0,0,0,31,16Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.613,6.793A3.329,3.329,0,0,0,44.32,4a3.357,3.357,0,0,0-2.781,1.489,1.853,1.853,0,0,1-3.076,0A3.359,3.359,0,0,0,35.68,4a3.33,3.33,0,0,0-3.292,2.79c-.067.4-.1.806-.154,1.21H47.766C47.716,7.6,47.679,7.19,47.613,6.793Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40,35a9.941,9.941,0,0,1-4-.847V36.17a2,2,0,0,1-1.637,1.963l-1.188.224.383,1.576a6.629,6.629,0,0,0,12.884,0l.383-1.576-1.19-.224A2,2,0,0,1,44,36.17V34.147A9.946,9.946,0,0,1,40,35Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18,57V56H11a1,1,0,0,1-1-1V51a1,1,0,0,1,1-1h7V45.4a5.495,5.495,0,0,1-6-9.131V29.151a5.078,5.078,0,0,0-3.991,4.606,4.891,4.891,0,0,0,.041.926,12.5,12.5,0,0,1-2.032,9.29A9.98,9.98,0,0,0,4,50.3,10.262,10.262,0,0,0,14.35,60h2.3a10.328,10.328,0,0,0,1.8-.161A4.013,4.013,0,0,1,18,58Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.7,58H20a1.958,1.958,0,0,0,.814,1.608A2.01,2.01,0,0,0,22,60h4a1.006,1.006,0,0,1-.555-.168Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"28 60 28.017 59.998 26 60 28 60\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"53.303 51 60 51 60 49 56.303 49 53.303 51\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.941,43.492c-.005-.031-.013-.062-.018-.093a3.991,3.991,0,0,0-.142-.523c-.025-.069-.05-.137-.078-.2a3.814,3.814,0,0,0-.239-.509h0a3.982,3.982,0,0,0-.377-.54c-.014-.018-.03-.034-.045-.051a4.006,4.006,0,0,0-.914-.786c-.06-.038-.12-.075-.18-.108a3.871,3.871,0,0,0-.511-.245l-.041-.017a4.017,4.017,0,0,0-.67-.186l-7.941-1.466-.4,1.643a8.629,8.629,0,0,1-16.772,0l-.4-1.643-7.941,1.466a3.962,3.962,0,0,0-1.248.461c-.044.025-.087.051-.132.079a3.953,3.953,0,0,0-.388.277c-.063.051-.125.1-.184.156-.1.09-.191.186-.28.284-.059.065-.118.13-.173.2a4,4,0,0,0-.576,1c-.025.062-.049.125-.071.189a3.913,3.913,0,0,0-.158.583v0a4.035,4.035,0,0,0-.063.708V47h4a1.006,1.006,0,0,1,.555.168L30.3,51H49.7l5.748-3.832A1.006,1.006,0,0,1,56,47h4V44.162A4.012,4.012,0,0,0,59.941,43.492Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,53a1.006,1.006,0,0,1-.555-.168L23.7,49H20v7h3a1.006,1.006,0,0,1,.555.168L26.3,58H32l20.1,2.005L58,60a2,2,0,0,0,2-2V53H30Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.448,37.594a3.542,3.542,0,0,0-3.893,0,3.492,3.492,0,1,0,4.619,5.133l.012-.059a.716.716,0,0,1,.023-.1c.028-.1.077-.2.11-.293.042-.127.089-.251.14-.374.038-.092.06-.184.1-.277.079-.164.158-.311.238-.451l0-.01c.053-.093.109-.174.163-.257A3.571,3.571,0,0,0,19,40.5,3.469,3.469,0,0,0,17.448,37.594Z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 12,\n    y: 52,\n    width: 6,\n    height: 2\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.134,38.906c.094-.051.18-.119.276-.164l.447-.192a3.5,3.5,0,0,1,.549-.175,3.424,3.424,0,0,1,.462-.11,15.6,15.6,0,0,1,.081-3.578,4.84,4.84,0,0,0,.042-.926A5.079,5.079,0,0,0,19,29.151v7.113a5.445,5.445,0,0,1,1.815,2.825C20.919,39.024,21.025,38.965,21.134,38.906Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.97fcb56e.svg\";\nexport { ForwardRef as ReactComponent };","/*\n  QueryPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - manage query controls for GuitarJoe app\n\n*/\nimport React from 'react'\nimport InfoPnl from \"./InfoPnl\"\nimport q from \"./guitar_lib.js\"\n\n\nclass QueryPnl extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.btnDupeClick = this.btnDupeClick.bind(this)\n    this.btnDelClick = this.btnDelClick.bind(this)\n\n    this.last = {}    //store last query params before reset via label.click\n    this.selLabelClick = this.selLabelClick.bind(this)\n    this.selChordChange = this.selChordChange.bind(this)\n    this.btnClearClick = this.btnClearClick.bind(this)\n    this.btnCollapseClick = this.btnCollapseClick.bind(this)\n    this.selIntervalChange = this.selIntervalChange.bind(this)\n    this.selNoteChange = this.selNoteChange.bind(this)\n    this.selOctaveChange = this.selOctaveChange.bind(this)\n    this.selScaleChange = this.selScaleChange.bind(this)\n  }\n\n  //event handlers\n  btnDelClick(){\n    this.props.remove()\n  }\n  btnDupeClick(){\n    this.props.duplicate()\n  }\n  btnCollapseClick(){\n    let val = !this.props.qry.collapsed\n    this.props.stateChange( 'collapsed', val )\n  }\n  btnClearClick(){\n    // this.props.dispatch({ type:\"FretboardActions/fretFirstUpdate\", payload:'' })\n    this.props.reset()\n  }\n  selLabelClick( event ){     //reset param to off value\n    let qry = this.props.qry,\n      lbl = event.target,\n      val = lbl.dataset.selected\n    // console.log('last', this.last)\n    if(val === 'true'){\n      if(lbl.dataset.type === 'note'){\n        if(qry.rootType === '') return\n        \n        this.last['rootType'] = qry.rootType\n        this.last['root'] = qry.root\n        if(this.last['rootType'] === 'selNote')\n          this.props.stateChange( 'selNoteVal', '' )\n        if(this.last['rootType'] === 'fretRoot')\n          this.props.stateChange( 'fretRoot', null )\n      }else\n      if(lbl.dataset.type === 'chord'){\n        if(qry.chord === null) return\n        this.last['chordName'] = qry.chord.name\n        this.props.stateChange( 'chordName', '' )\n      }else\n      if(lbl.dataset.type === 'scale'){\n        if(qry.scale === null) return\n        this.last['scaleName'] = qry.scale.name\n        this.props.stateChange( 'scaleName', '' )\n      }else\n      if(lbl.dataset.type === 'octave'){\n        this.last['octave'] = qry.octave\n        this.props.stateChange( 'octave', 0 )\n      }else\n      if(lbl.dataset.type === 'ivlName'){\n        this.last['ivlName'] = this.props.ivlName\n        this.props.stateChange( 'ivlName', '' )\n      }\n    }\n    else{   //allow toggling param on and off\n      if(lbl.dataset.type === 'note'){\n        if( !this.last.rootType ) return\n        if(this.last.rootType === 'selNote'){\n          if(this.last['root'] !== null)\n            this.props.stateChange( 'selNoteVal', this.last['root'].note )\n        } else\n        if(this.last.rootType === 'fretRoot'){\n          if(this.last['root'] !== null)\n            this.props.stateChange( 'fretRoot', this.last['root'] )\n        }\n      }else\n      if(lbl.dataset.type === 'chord'){\n        if(this.last['chordName'] && this.last['chordName'] !== '')\n          this.props.stateChange( 'chordName', this.last['chordName'] )\n      }else\n      if(lbl.dataset.type === 'scale'){\n        if(this.last['scaleName'] && this.last['scaleName'] !== '')\n          this.props.stateChange( 'scaleName', this.last['scaleName'] )\n      }else\n      if(lbl.dataset.type === 'octave'){\n        if(this.last['octave'] && this.last['octave'] !== '')\n          this.props.stateChange( 'octave', this.last['octave'] )\n      }else\n      if(lbl.dataset.type === 'ivlName'){\n        if(this.last['ivlName'] && this.last['ivlName'] !== '')\n          this.props.stateChange( 'ivlName', this.last['ivlName'] )\n      }\n    }\n  }\n  selNoteChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'selNoteVal', val )\n    //   this.props.dispatch({ type:\"FretboardActions/semisUpdate\", val })\n  }\n  selOctaveChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    if(val === '')\n      this.props.stateChange( 'octave', 0 )\n    else\n      this.props.stateChange( 'octave', Number(val) )\n  }\n  selIntervalChange( event ){\n    let sel = event.target,\n      opt = sel.options[sel.selectedIndex],\n      abr = opt.dataset.abr\n    this.props.stateChange( 'ivlName', abr )\n  }\n  selChordChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'chordName', val )\n  }\n  selScaleChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'scaleName', val )\n  }\n\n  // draw controls\n  drawSelNote(){\n    let qry = this.props.qry,\n      list = [<option key='' ></option>,<option key='999' >All</option>]\n    for(let ii=0; ii < q.notes.list.length; ii++){\n      let note = q.notes.list[ii]\n      list.push(<option key={ii} >{note}</option>)\n    }\n\n    let note = (qry.note === null ?'' :qry.note)\n    return (\n      <div className='dataPnl pnlNote'>\n        <label data-selected={note !== ''} data-type='note' onClick={this.selLabelClick} >Note</label>\n        <select value={note} className='selNote' onChange={this.selNoteChange} >{list}</select>\n      </div>\n    )\n  }\n  drawSelOctave(){\n    let qry = this.props.qry,\n      oct = qry.octave,\n      omin = 0, omax = 0,\n      list = [<option key={999} ></option>]\n\n    omin = q.notes.obj(6, 0).octave\n    omax = q.notes.obj(1, q.fretboard.fretMax).octave\n\n    for(let ii = omax; ii >= omin; ii--){\n      list.push(<option key={ii} >{ii}</option>)\n    }\n    return (\n      <div className='dataPnl pnlOctave'>\n        <label data-selected={oct !== 0} data-type='octave' onClick={this.selLabelClick} >Octave</label>\n        <select value={oct} className='selOctave' onChange={this.selOctaveChange}>\n           {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelScale(){\n    let selected = this.props.scaleName,\n      ii=0, list = [<option key='aaa'></option>]\n    for(let scale of q.scales.list){\n      list.push(<option key={++ii} >{scale.name}</option>)\n    }\n    return (\n      <div className='dataPnl pnlScale'>\n        <label data-selected={selected !== ''} data-type='scale' onClick={this.selLabelClick} >Scale</label>\n        <select value={selected} className='selScale' onChange={this.selScaleChange} >\n          {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelChord(){\n    let ii = 0,\n      selected = this.props.chordName, \n      datastate = '',\n      list = [<option key='aaa'></option>]\n    for(let chd of q.chords.list){\n      list.push(<option key={++ii} >{chd.name}</option>)\n    }\n    if(selected !== '') datastate = 'chord'\n    return (\n      <div className='dataPnl pnlChord'>\n        <label data-selected={selected !== ''} data-type='chord' onClick={this.selLabelClick} >Chord</label>\n        <select value={selected} className='selChord' onChange={this.selChordChange} \n         data-state={datastate}>\n          {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelInterval(){\n    let qry = this.props.qry,\n      list = [<option key='aaa' ></option>],\n      ii = 0, selected = '' , datastate = ''\n    for(let ivl of q.intervals.list){\n      if(ivl.semis === 0) continue\n      if(ivl.semis === 12) continue\n      // if(ivl.abr === last) continue  should be unique\n      let html = `${ivl.name} (${ivl.abr}, ${ivl.semis})`\n      list.push(<option key={++ii} data-abr={ivl.abr} >{html}</option>)\n      if(qry.ivl !== null && selected === '' && qry.ivl.abr === ivl.abr)\n        selected = html\n      // last = ivl.abr\n    }\n    if(selected !== '') datastate = 'interval'\n    return (\n      <div className='dataPnl pnlInterval' >\n        <label data-selected={selected !== ''} onClick={this.selLabelClick} \n          data-type='ivlName' >Interval</label>\n        <select value={selected} className='selInterval' title='Intervals sorted by semis-tones'\n          data-state={datastate} onChange={this.selIntervalChange} \n        >\n          {list}\n        </select>      \n      </div>\n    )\n  }  \n  /*\n  drawFretSelectMatches( html, key ){    //push matching chords and scales onto html[]\n    let qry = this.props.qry, selected = 0\n    \n    if(qry.fretSelect.length < 2) return null  \n\n    let noblist = qry.fretSelect.slice()\n    let last = null\n    noblist = noblist.filter(function(a){   //filter duplicate notes\n      if(last != null && last.notes.indexOf( a.note ) >= 0) return null\n      last = a\n      return a\n    })\n\n    //test chords for matching notes\n    let list = []\n    let lastkey = key\n    let lastname = null\n    last = null\n    for(let chord of q.chords.list){    \n\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        let ivls = q.chords.obj( iobj.note, chord.name).ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true)\n         list.push( {note:iobj.note, chord:chord} )\n      }\n    }\n\n    for(let ob of list){    //write matching chords\n      let chord = ob.chord\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={this.fsChordClick}\n        >Matching chords:&nbsp;</span> )\n      }\n\n      selected = 0\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === chord.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== chord.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = chord.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={this.fsChordClick} title={ob.note +' ' +chord.name}\n        data-note={ob.note} data-abr={chord.abr} data-selected={selected} \n        >&#8200;{ob.note}&#8239;{chord.abr}&#8200;</span> \n      )\n    }\n\n    //test scales for matching notes\n    list = []\n    lastkey = key\n    lastname = null\n    last = null\n    // for(let scale of q.scales.list){   ==> disabled because most scales are not necessary for this use\n    for(let scaleName of ['Major','Minor','Pen.Maj','Pen.min','Blues7','Blues6' ]){\n      //can optimize by caching related minor scales when major found: \n      // Major:Nat.min; Pent Maj:Pen.min,Blues7,Blues6; Dbl.Hrm:Gypsy\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        // let ivls = q.scales.obj( iobj.note, scale.name).ivls    \n        let scale = q.scales.obj( iobj.note, scaleName )\n        let ivls = scale.ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true) \n         list.push( {note:iobj.note, scale:scale} )\n      }\n    }\n\n    for(let ob of list){    //write matching scales\n      selected = 0\n      let scale = ob.scale\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={this.fsScaleClick}\n        >Matching scales:&nbsp;</span> )\n      }\n\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === scale.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== scale.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = scale.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={this.fsScaleClick} title={ob.note +' ' +scale.name}\n        data-note={ob.note} data-abr={scale.abr} data-selected={selected} \n        > &#8200;{ob.note}&#8239;{scale.short}&#8200;</span> \n      )\n    }\n\n    return key\n  }\n*\n  drawInfo( collapsed ){\n    let qry = this.props.qry,  selected = 0\n    let html = [], key=0, lastkey=null\n\n    if(qry.rootType === 'fretSelect'){    \n\n        // console.log('qry.fretSelect', qry.fretSelect)\n\n        html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={this.infoNoteClick}\n          >Fret select:&nbsp;</span> )\n        let last = null\n        qry.fretSelect.forEach( nobj => {\n          if(last && last.note === nobj.note) return\n\n          if(qry.noteFilter.indexOf( nobj.note ) >= 0) selected = 'noteFilter'\n          else selected = 0\n          \n          html.push( <span key={++key} className='ivl'\n            onClick={this.infoNoteClick} data-note={nobj.note} data-selected={selected}\n          >&nbsp;{nobj.note} <sub>{nobj.ivl.abr}</sub> </span> )\n          last = nobj\n        })\n\n        if(qry.fretSelectMatch === null){    //no selected chord or scale to draw\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={this.infoNoteClick}\n          > &nbsp;</span> )\n        }\n        else{    //draw user select chord or scale match\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n           html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={this.infoNoteClick}\n          >Selected, {qry.fretSelectMatch.obj.fullName}:&nbsp;</span> )\n\n          for(let ivl of qry.fretSelectMatch.obj.ivls){   \n            if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            html.push( <span key={++key} className='ivl' onClick={this.infoNoteClick}\n              data-note={ivl.note} data-selected={selected}\n            >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> </span> )\n          }\n        }\n\n      if(collapsed !== 'qryCollapsed'){\n        key = this.drawFretSelectMatches( html, key )\n      }\n    } else\n    if(qry.rootType === 'selNote' && this.props.selNoteVal === 'All'){    //special case\n      html.push( <span key={++key} className='propName'\n         data-selected='label' onClick={this.infoNoteClick}\n        >{'All Notes'}</span> )\n      if(qry.octave !== 0){\n        html.push( <span key={++key} className='ivl'>{': Octave '}{qry.octave} </span> )\n      }\n    }\n    else{   //draw scale, chord and interval labels and notes\n      lastkey = key\n      if(qry.scale !== null){\n        // html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={this.infoNoteClick}\n          >{qry.root.note +' ' +qry.scale.name +':'}</span> )\n        qry.scale.ivls.forEach( ivl => {\n          if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n          else selected = 0\n          \n          html.push( <span key={++key} className='ivl'\n            onClick={this.infoNoteClick} data-note={ivl.note} data-selected={selected}\n          >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> </span> )\n        })\n      }\n      if(qry.chord !== null){\n        if(lastkey !== key)\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n        html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={this.infoNoteClick}\n          >{qry.root.note \n          +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n          +' ' +qry.chord.name +':'}</span> )\n\n        qry.chord.ivls.forEach( ivl => {\n          if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n          else selected = 0\n\n          html.push( <span key={++key} className='ivl'\n            onClick={this.infoNoteClick} data-note={ivl.note} data-selected={selected}\n           >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> </span> )\n        })\n\n        if(qry.inversions !== null){    //draw inversions for major chords\n          let invrs = qry.inversions\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n          html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={this.infoNoteClick}\n          >{invrs.root \n           +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n           +qry.chord.abr +' Inversions:'}</span> )\n\n          for(let pos in invrs.positions){\n            let obj = invrs.positions[ pos ]\n            selected = (qry.inversionPos === pos ?'invr' :'')\n            html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n            html.push( <span key={++key} className='ivl' onClick={this.invrLabelClick}\n              data-selected={selected} data-invr={pos}\n              > {pos +' Position: '}</span> )\n            for(let num in obj){\n              let ivl = obj[num]\n              // let octave = ivl.octave\n              let octave = ([0,1].indexOf(ivl.octave) >= 0 ?'' :ivl.octave)\n              if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n              else selected = 0\n\n              html.push( <span key={++key} className='ivl'\n                onClick={this.infoNoteClick} data-note={ivl.note} data-selected={selected}\n               >&nbsp;{ivl.note +octave} <sub>{ivl.abr}</sub> </span> )\n            }\n          }\n        }\n\n      }\n      if(qry.ivl !== null){\n        if(qry.noteFilter.indexOf( qry.ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        if(lastkey !== key)\n          html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n           data-selected='label' onClick={this.infoNoteClick}\n          >{qry.note \n            +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n            +' + ' \n            +qry.ivl.name +':'\n           }</span> )\n        html.push( <span key={++key} className='ivl'\n          onClick={this.infoNoteClick} data-note={qry.ivl.note} data-selected={selected}\n        >&nbsp;{qry.ivl.note} <sub>{qry.ivl.abr}</sub> </span> )\n      }\n    }\n    \n    if(html.length === 0) return null\n        // {arrow}\n    return (\n      <div className='infoPnl'>\n         <div className='infoDiv'>\n           {html}\n         </div>\n      </div>\n    )      \n  }\n */\n  render(){\n    // console.log('queryPnl.render()', this.props)\n    let qry = this.props.qry\n    let collapsed = (qry.collapsed ?'qryCollapsed' :'qryExpanded')\n\n    let selNote = null\n    let selOct = null\n    let selInt = null\n    let selScale = null\n    let selChord = null\n    if(qry.rootType !== 'fretSelect') { //optimization\n      selNote = this.drawSelNote()\n      selOct = this.drawSelOctave()\n      selInt = this.drawSelInterval()\n      selScale = this.drawSelScale()\n      selChord = this.drawSelChord()\n    }\n    // let infoPnl = this.drawInfo( collapsed )\n    let infoPnl = <InfoPnl \n                    qry={qry} \n                    selNoteVal={this.props.selNoteVal}\n                    fretSelectFind={this.props.fretSelectFind}\n                    stateChange={this.props.stateChange}\n                   />\n\n    let arrow = null\n    if(qry.collapsed === true)\n      arrow = (\n        <div className='qryBtn qryBtnExpand' onClick={this.btnCollapseClick} title=\"Show query panel\" > \n          <div>&#10148;</div>\n        </div>\n      )\n    else\n      arrow = (\n        <div className='qryBtn qryBtnCollapse' onClick={this.btnCollapseClick}\n            title=\"Hide query panel\" >\n          <div>&#10148;</div>\n        </div>\n      )\n\n    return (\n      <div className={'queryPnl '+collapsed} >\n    <table className='tbQuery' ><tbody><tr>\n    <td className='qryBtnsLeft'>\n        {arrow}\n    </td><td className='qryContent'>\n        <div className='queryControls' data-roottype={qry.rootType}>\n          {selNote}\n          {selOct}\n          {selScale}\n          {selChord}\n          {selInt}\n        </div>\n        {infoPnl}\n    </td><td className='qryBtnsRight'>\n        <div className='qryBtn qryBtnClear' onClick={this.btnClearClick} title='Reset query controls'>&#8635;</div>\n        <div className='qryBtn qryBtnDupe' onClick={this.btnDupeClick} title='Duplicate fretboard' >&#10010;</div>\n        { qry.fbid === 0 ?null\n          :<div className='qryBtn qryBtnDel' onClick={this.btnDelClick} title='Remove this fretboard' >&#10000;</div>\n        }\n    </td></tr></tbody></table>\n      </div>\n    )\n  }\n}\n\nexport default QueryPnl\n","/*\nFretboard.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - top level container for fretboard controls of GuitrJoe app\n  - store shared state for FretPnl.js and QueryPnl.js\n\n*/\n\nimport React from 'react';\n\nimport FretPnl from \"./FretPnl\";\nimport QueryPnl from \"./QueryPnl\";\nimport q from \"./guitar_lib.js\";\nimport './Fretboard.css';\n\nclass Fretboard extends React.Component{\n\n  constructor (props) {\n    console.log('Fretboard.constructor()', props)\n    super(props)\n    this.qry = null\n    //keep state private to control children\n    this.state = {\n\t\t\tfbid:(props.fbid ?props.fbid :0),\n\t\t\t\n      collapsed:(props.collapsed ?props.collapsed :false),\n      fretFirst:(props.fretFirst ?props.fretFirst :0),\n      fretLast:(props.fretLast ?props.fretLast :q.fretboard.fretMax),\n      fretBtnStyle:(props.fretBtnStyle ?props.fretBtnStyle :'NoteFirst'),    //one of: NoteFirst, IvlFirst, NoteTab, NoteAbc\n      fretFilter:(props.fretFilter ?props.fretFilter :[]),      //csv of fretN, if found then disable fret\n      strgFilter:(props.strgFilter ?props.strgFilter :[]),    //csv of strN, if found then hide notes\n      noteFilter:(props.noteFilter ?props.noteFilter :[]),    //notes on fetboard where button.data-selected=2; set by clicking infoPnl note\n      fretSelect:(props.fretSelect ?props.fretSelect :[]),    //when rootType=fretSelect, list of frets and related data; set in fretPnl.fretClick()\n      fretSelectMatch:(props.fretSelectMatch ?props.fretSelectMatch :null),    //user selects a chord or scale to view: {type, name}\n\n      rootType:(props.rootType ?props.rootType :''),    //one of: ['', fretRoot, fretSelect, selNote]\n      fretRoot:(props.fretRoot ?props.fretRoot :null),          //note object, set when fret clicked\n      selNoteVal:(props.selNoteVal ?props.selNoteVal :''),   //string, contains note selected in selNote\n      octave:(props.octave ?props.octave :0), \n      scaleName:(props.scaleName ?props.scaleName :''),\n      chordName:(props.chordName ?props.chordName :''),\n      ivlName:(props.ivlName ?props.ivlName :''), \n      \n      inversionPos:(props.inversionPos ?props.inversionPos :null),    //user selected inversion position to display (maj or maj7 selected)\n    }\n    this.duplicate = this.duplicate.bind(this)\n    this.remove = this.remove.bind(this)\n    this.reset = this.reset.bind(this)\n    this.stateChange = this.stateChange.bind(this)\n    this.strgFiltered = this.strgFiltered.bind(this)\n    this.makeQuery = this.makeQuery.bind(this)\n    this.fretSelectFind = this.fretSelectFind.bind(this)\n    this.inversionNoteByTab = this.inversionNoteByTab.bind(this)\n  }  \n  reset(){\n    this.setState({ collapsed:false })\n    this.setState({ fretSelectMatch:null })\n    this.setState({ fretSelect:[] })\n    this.setState({ noteFilter:[] })\n    this.setState({ strgFilter:[] })\n    this.setState({ fretFilter:[] })\n    this.setState({ scaleName:'' })\n    this.setState({ chordName:'' })\n    this.setState({ inversionPos:null })\n    this.setState({ rootType:'' })\n    this.setState({ ivlName:'' })\n    this.setState({ fretRoot:null })\n    this.setState({ selNoteVal:'' })\n    this.setState({ octave:0 })\n    this.setState({ fretBtnStyle:'NoteFirst' })\n  }\n  strgFiltered( strN ){\n    strN = Number(strN)\n    return ( this.state.strgFilter.indexOf( strN ) >= 0 )\n  }\n  remove(){\n    this.props.remove( this )\n  }\n  duplicate(){\n    this.props.duplicate( this )\n  }\n\n  inversionNoteByTab( tab ){\n    if(this.state.inversionPos === null) return null\n    for(let nobj of this.qry.inversionNotes){\n      if(nobj.tab === tab) return nobj \n    } \n    return null\n  }\n  fretSelectFind( objOrTab ){\n    let list = this.state.fretSelect,\n      fnd = -1\n\n    if(list.length === 0 || objOrTab === null) return fnd  //empty list\n\n    let  tab = (typeof objOrTab === 'string' ?objOrTab :objOrTab.tab)    //find in list\n    for(let ii = 0; ii < list.length; ii++){\n      if(tab === list[ii].tab){\n        fnd = ii\n        break\n      }\n    }\n    return fnd\n  }\n  stateChange( key, val){\n    // if(key === 'rootType')   //only manually set below; can be prop instead of state\n    //   this.setState({ rootType:val })\n    // else\n    if(key === 'collapsed'){\n      this.setState({ collapsed:val })\n    }else\n    if(key === 'noteFilter'){\n\n      if(val === 'clear'){  //empty list\n        this.setState({ noteFilter:[] })\n      }\n      else {    //default operation\n        let list = this.state.noteFilter.slice()\n        let idx = list.indexOf( val )\n   \n        if(idx < 0) list.push( val )\n        else list.splice( idx, 1 )\n        \n        this.setState({ noteFilter:list })\n      }\n    }else\n    if(key === 'fretBtnStyle'){\n      this.setState({ fretBtnStyle:val })\n    }else\n    if(key === 'fretFilter'){\n      let list = this.state.fretFilter.slice()\n      let idx = list.indexOf( val )\n \n      if(idx < 0) list.push( val )\n      else list.splice( idx, 1 )\n\n      this.setState({ fretFilter:list })\n    }else\n    if(key === 'fretRoot'){\n      this.setState({ fretRoot:val })\n\n      if(val === null)\n         this.setState({ rootType:'' })\n      else\n        this.setState({ rootType:'fretRoot' })\n      this.setState({ selNoteVal:'' })\n      this.setState({ fretSelect:[] })\n      // this.setState({ fretSelectMatch:null })\n    }else\n    if(key === 'selNoteVal'){\n      this.setState({ selNoteVal:val })\n\n      if(val === '')\n        this.setState({ rootType:'' })\n      else\n        this.setState({ rootType:'selNote' })\n      this.setState({ fretRoot:null })\n      this.setState({ fretSelect:[] })\n      // this.setState({ fretSelectMatch:null })\n    }else\n    if(key === 'fretSelect'){\n\n      if(val === null){   //disable fretSelect mode\n        this.setState({ fretSelect:[] })\n        // this.setState({ fretSelectMatch:null })\n        this.setState({ rootType:'' })\n        this.setState({ fretRoot:null })\n        this.setState({ selNoteVal:'' })\n        return\n      }\n\n      if(Array.isArray(val) === false)  //process as array due to React state handling\n        val = [val]\n\n      let list = this.state.fretSelect.slice(),\n        idx = null, root=null\n\n      for(let nobj of val){\n        idx = this.fretSelectFind( nobj )\n        if(idx < 0) {\n          if(list.length === 0){\n            nobj.ivl = q.intervals.byName( 'P1' )\n            list.push( nobj )\n          }\n          else{\n            if(root === null) root = list[0]\n            let semis = (nobj.semis -root.semis) % 12\n            if(semis < 12) semis = 12 +semis\n            nobj.ivl = q.intervals.bySemis( semis, true )\n            list.push( nobj )\n          }\n        }else \n          list.splice( idx, 1 )\n      }\n      list.sort(function (a, b) {\n        return a.ivl.semis - b.ivl.semis\n      })\n\n      this.setState({ fretSelect:list })\n      if(this.state.rootType !== 'fretSelect'){   //set rootType to fretSelect\n        this.setState({ rootType:'fretSelect' })\n        this.setState({ fretRoot:null })\n        this.setState({ selNoteVal:'' })\n      }\n    }else\n    if(key === 'fretSelectMatch'){\n      this.setState({ fretSelectMatch:val })\n    }else\n    if(key === 'strgFilter'){\n      val = Number( val )\n      let list = this.state.strgFilter.slice()\n      let idx = list.indexOf( val )\n \n      if(idx < 0) list.push( val )\n      else list.splice( idx, 1 )\n\n      this.setState({ strgFilter:list })\n    }else\n    if(key === 'fretFirst')\n      this.setState({ fretFirst:val })\n    else\n    if(key === 'fretLast')\n      this.setState({ fretLast:val })\n    else\n    if(key === 'octave')\n      this.setState({ octave:val })\n    else\n    if(key === 'scaleName'){\n      this.setState({ scaleName:val })\n    }else\n    if(key === 'chordName'){\n      this.setState({ chordName:val })\n    }else\n    if(key === 'inversionPos'){\n     if(this.state.inversionPos === val)\n       val = null\n     this.setState({ inversionPos:val })\n    }else\n    if(key === 'ivlName'){\n      this.setState({ ivlName:val })\n    }else\n    if(key === 'semis')\n      this.setState({ semis:val })\n  }\n  makeQuery(){\n    let qry = {\n      fbid:this.state.fbid,\n      rootType: this.state.rootType,\n      root: null,\n      note: (this.state.rootType === 'fretRoot' \n              ? this.state.fretRoot.notes[0] \n              : this.state.selNoteVal ), \n      octave: this.state.octave,\n      scale: null,\n      chord:null,\n      inversions:null,\n      inversionPos:this.state.inversionPos,\n      inversionNotes:null,\n      ivl: null,\n\n      collapsed: this.state.collapsed,\n      fretBtnStyle: this.state.fretBtnStyle,\n      fretFilter: this.state.fretFilter,\n      noteFilter: this.state.noteFilter,\n      fretSelect: this.state.fretSelect,\n      fretSelectMatch: this.state.fretSelectMatch,\n    }\n    if(qry.rootType === 'fretRoot')\n      qry.root = this.state.fretRoot    //note object, set in FretPnl.fretClick()\n    if(qry.rootType === 'selNote' && qry.note !== '' && qry.note !== 'All')\n      qry.root = q.notes.objByNote( qry.note )    //note object\n    if(qry.rootType === 'fretSelect')\n      qry.root = this.state.fretSelect[0]    //note object, set in FretPnl.fretClick()\n  \n   // if(qry.note === 'All'){\n      //qry.fretBtnStyle = 'NoteAbc'\n   // }\n  \n    if(qry.fretSelectMatch != null){\n      if(qry.fretSelectMatch.type === 'chord')\n        qry.fretSelectMatch.obj = q.chords.obj( qry.fretSelectMatch.note, qry.fretSelectMatch.abr )\n      else\n      if(qry.fretSelectMatch.type === 'scale')\n        qry.fretSelectMatch.obj = q.scales.obj( qry.fretSelectMatch.note, qry.fretSelectMatch.abr )\n    }\n\n    if(this.state.scaleName !== '' && qry.root)\n      qry.scale = q.scales.obj( qry.note, this.state.scaleName )\n    if(this.state.chordName !== '' && qry.root){\n      qry.chord = q.chords.obj( qry.note, this.state.chordName )\n      qry.inversions = q.chords.inversions(qry.root.note, qry.chord.abr, qry.root.octave )\n      if(qry.inversionPos !== null){\n        qry.inversionNotes = q.chords.inversionNotes(  qry.inversions, qry.inversionPos )\n      }\n    }\n    if(this.state.ivlName !== '' && qry.root){\n      qry.ivl = q.intervals.byName( this.state.ivlName )    //this.props.ivlName == abr\n      qry.ivl.note = q.notes.calc( qry.note, qry.ivl )\n      // qry.ivl.notes = q.notes.bySemis( qry.root.semis +qry.ivl.semis )\n    }\n    this.qry = qry\n    return qry\n  }\n  render(){\n    let qry = this.makeQuery()\n    console.log('Fretboard.render()', this.props, this.state, qry)\n    // ivlName={this.state.ivlName}\n    return(\n      <div className='fretboard' id={'Fretboard'+qry.fbid}>\n        <FretPnl\n          collapsed={this.state.collapsed}\n          fretFirst={this.state.fretFirst}\n          fretLast={this.state.fretLast}\n\n          selNoteVal={this.state.selNoteVal} \n\n          qry={qry}\n          stateChange={this.stateChange}\n          strgFiltered={this.strgFiltered}\n          fretSelectFind={this.fretSelectFind}\n          inversionNoteByTab={this.inversionNoteByTab}\n        />\n        <QueryPnl \n          collapsed={this.state.collapsed}\n          fretFirst={this.state.fretFirst}\n          fretLast={this.state.fretLast}\n\n          selNoteVal={this.state.selNoteVal} \n          chordName={this.state.chordName}\n          scaleName={this.state.scaleName}\n          ivlName={this.state.ivlName}\n\n          duplicate={this.duplicate}\n          qry={qry}\n          remove={this.remove}\n          reset={this.reset} \n          stateChange={this.stateChange}\n          strgFiltered={this.strgFiltered} \n         />\n      </div>\n    )\n  }\n}\n\nexport default Fretboard;\n","/*\n  About Dialog\n  - for GuitarJoe by Chris DeFreitas\n\n  requires:\n    Dialog.css\n*/\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport './Dialog.css';\n\nconst About = () => (  \n  <Popup\n    trigger={<button className=\"btnInfo\">About</button>}\n    modal\n    nested\n  >\n    {close => (\n      <div className=\"modal\">\n        <div className=\"header\"> About GuitarJoe </div>\n        <div className=\"content\">\nImportant: <br />\n&nbsp;- Everything is clickable...please explore<br />\n&nbsp;- use your browser's zoom controls to enlarge/shrink the controls\n<br /><br />\nGuitarJoe is a free web application, no ads, no logins, no tracking.  \nThe goal was to create a tool that would make guitar theory accessible while practicing.\nI am not anything close to a musician, so\nI was going crazy taking notes and diagraming chords, scales and intervals: I needed a tool\nto facilitate my understanding so I could focus on the guitar instead of managing scraps of information.\nThis application has successfully reduced my hair loss--I hope it has the same effect on you!\n<br /><br />\nAt this point it is a proof of concept as I wrangle technologies and concepts.  \nI am an IT guy who is (obviously) not musically gifted, so there is a lot of research behind the functionality.\nMy aim is to keep the app freely available to support those learning guitar; a warm thanks for those who have supported my various journeys.\n<br /><br />\n&nbsp;- Tested to work in Chrome(Windows), Firefox(Windows, Linux), and Safari(iPad, iPhone)<br />\n&nbsp;- Review documentation, updates and references in the <a href='https://github.com/ChrisDeFreitas/guitarjoe/' target='_new'>GitHub Repository</a> <br />\n&nbsp;- Send comments and bugs to <a href='mailto:ChrisDeFreitas777@gmail.com?subject=GuitarJoe:'>ChrisDeFreitas777@gmail.com</a>\n<br /><br />\nThanks to<br />\n&nbsp;- Application hosted on <a href='https://github.com/ChrisDeFreitas/guitarjoe' target='_new'>Github</a>  <br />\n&nbsp;- Background image from <a href='https://www.flickr.com/photos/webtreatsetc/with/4514047664/' target='_new'>WebTreats ETC</a> <br />\n&nbsp;- Built with the <a href='https://reactjs.org/' target='_new'>React</a> Javascript library <br />\n&nbsp;- Chords verified using <a href='https://www.omnicalculator.com/other/chord' target='_new'>Omni Chord Calculator</a><br />\n&nbsp;- <a href='https://chir.ag/projects/name-that-color/'>Name that Color</a> by Chirag Meta\n&nbsp;- Fuggles font by Robert Leuschke on <a href='https://fonts.google.com/?query=Robert+Leuschke/' target='_new'>Google Fonts</a> <br />\n&nbsp;- Guitar icon by monkik from the <a href='https://thenounproject.com/term/guitar/2588464/' target='_new'>Noun Project</a> <br />\n&nbsp;- Intervals verified using <a href='https://www.omnicalculator.com/other/music-interval' target='_new'>Omni Music Interval Calculator</a><br />\n&nbsp;- Music theory from <a href='https://www.wikipedia.org/' target='_new'>Wikipedia</a><br />\n&nbsp;- Popup control from <a href='https://react-popup.elazizi.com/' target='_new'>reactjs-popup</a> <br />\n&nbsp;- Scales researched with <a href='https://ianring.com/musictheory/scales' target='_new'>A Study of Scales</a> at <a href='https://ianring.com/musictheory/'>The Exciting Universe Of Music Theory</a><br />\n&nbsp;- Scales researched with <a href='https://www.scales-chords.com/scalenav.php' target='_new'>ScaleChords' Musical Scale Navigator</a><br />\n<br />\nCreated by Chris DeFreitas, BC Canada<br />\n        </div>\n        <div className=\"actions\">\n          <button\n            className=\"button\"\n            onClick={() => {\n              console.log('modal closed ');\n              close();\n            }}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    )}\n  </Popup>\n)\n\nexport default About","/*\n  App.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - entrypoint for GuitrJoe app\n\n*/\nimport React, { useState } from 'react';\n\nimport './App.css';\n// import './Bgnd.css';\n// import Bgnd from \"./Bgnd.js\";\nimport Fretboard from \"./Fretboard.js\"\nimport About from \"./AboutDlg.js\"\nimport { ReactComponent as Logo } from './resources/logo.svg'\n\n\nfunction App(){\n\n  const [fbs, setFbs] = useState( [{id:0, state:true}] )  //one cell for each fretboard instance\n  const [newid, setNewId] = useState( null )\t\t// assigned in duplicate()\n  \n  function indexOfFbid( fbid ){\n    for(let ii=0; ii < fbs.length; ii++){\n      if(fbs[ii].id === fbid)\n        return ii\n    }\n    return false\n  }\n  function duplicate( fretboard ){\n    let fbid = fretboard.props.fbid,\n      list = fbs.slice(),\n      nid = list.length,\n      obj = {id:nid, state:fretboard.state},\n      idx = indexOfFbid( fbid )\n      \n    if(idx === false)\n      throw new Error(`App.duplicate() error, fbid=[${fbid}] not found.`)\n      \n    list.splice( (idx +1), 0, obj)\t\t\n    setFbs( list )\n    setNewId( nid )\n    // console.log('App.duplicate', list)\n  }\n  function remove( fretboard ){\n    let fbid = fretboard.props.fbid,\n      list = fbs.slice(),\n      idx = indexOfFbid( fbid )\n     \n    if(idx === false)\n      throw new Error(`App.remove() error, fbid=[${fbid}] not found.`)\n\n    list[ idx ].state = false\n    setNewId( null )\n    setFbs( list )\n    // console.log('App.remove()', fbid, list)\n  }\n\n  let list = [], fbCount=fbs.length\n  for(let ii=0; ii < fbCount; ii++){\n    let el = null,\n      id = fbs[ii].id,       //use in .key to help react\n      state = fbs[ii].state  //one of: true, state object, false(a deleted fretboard)\n    if(id === newid){   //create new fretboard\n      el = <Fretboard key={id} fbid={id} duplicate={duplicate} remove={remove} \n\t\t\t\tcollapsed={state.collapsed}\n\t\t\t\tfretFirst={state.fretFirst}\n\t\t\t\tfretLast={state.fretLast}\n\t\t\t\tfretBtnText={state.fretBtnText}\n\t\t\t\tfretFilter={state.fretFilter}\n\t\t\t\tstrgFltrList={state.strgFltrList}\n        noteFilter={state.noteFilter}\n        fretSelect={state.fretSelect}\n        fretSelectMatch={state.fretSelectMatch}\n\t\t\t\trootType={state.rootType}\n\t\t\t\tfretRoot={state.fretRoot}\n\t\t\t\tselNoteVal={state.selNoteVal} \n\t\t\t\toctave={state.octave} \n\t\t\t\tscaleName={state.scaleName}\n\t\t\t\tchordName={state.chordName}\n\t\t\t\tivlName={state.ivlName}\n      />\n    }else{\n      if(state !== false) //existing fretboard; magic of react does not overwrite old data\n        el = <Fretboard key={id} fbid={id} duplicate={duplicate} remove={remove} />\n    }\n    if(el != null)\n      list.push( el )\n  }\n\n  return (\n    <div className=\"App\">\n\t\t\t<header className=\"App-header header\">\n        <Logo className=\"Logo\" alt=\"Logo\" />\n        GuitarJoe v0.1.5 <About />\n      </header>\n\t\t\t{list}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <App />\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals( console.log );\n"],"sourceRoot":""}