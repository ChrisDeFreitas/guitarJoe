{"version":3,"sources":["Fret.jsx","guitar_lib.js","controls/react-abcjs.js","FretButton.jsx","FretPnl.jsx","controls/ArrowButton.jsx","controls/ArrowPnl.jsx","InfoPnl.jsx","controls/HelpData.js","controls/HelpManager.jsx","resources/logo.svg","QueryPnl.jsx","Fretboard.jsx","AboutDlg.jsx","App.jsx","index.jsx"],"names":["Fret","props","keyii","key","first","fretFirst","last","fretLast","strg","fret","click","onClick","fretFiltered","btnStrFltr","className","strgFltrClick","title","fretbar","stringdiv","content","defaultProps","q","chords","list","name","abr","intervals","byName","str","chord","findByIvls","ivls","length","fnd","ii","inversions","note","chordName","octave","robj","toUpperCase","notes","byNote","Number","cobj","obj","maxinversions","result","root","max","positions","rivls","s0","semis","idx","s1","cnt","pos","inc","ridx","ioctave","num","interval","calc","isemis","iobj","bySemis","inversionLog","invrObj","includeSemis","caption","data","undefined","console","log","inversionNotes","invrPos","local_invrToNobj","invr","strgn","parent","rootfret","nobj","fretboard","fretMax","maxInversions","tmp","inversion","forEach","push","preferFlats","indexOf","iname","ivl","type","fullName","fullAbbrev","shapes","chordAbr","string","strings","E","A","D","G","B","e","shapeByName","bar","find","shapesByChord","filter","shape","shapeTabs","roots","min","fretMin","ltr","tab","byTab","shapeAbr","tabLetter","fretMinSet","nn","init","fretMaxSet","strgN","fretInRange","strgnum","substr","tabByFret","strN","degName","nm","returnFirst","findNote","alpha","ivlOrName","rprefix","rsuffix","iprefix","newlet","newsfx","local_inc","fobj","match","nobjList","nidx","slice","comparisons","iidx","splice","toAbc","noteLength","acc","Math","floor","scales","short","degreeTriads","scale","sobj","degrees","rootivl","semis0","deg","triad","degree","degreeName","scaleName","ivlAbr","shortName","abbrevName","octaveNum","Abcjs","uniqueNumber","Date","now","random","abcNotation","parserParams","engraverParams","renderParams","abcjsObj","renderAbc","this","renderAbcNotation","style","width","id","PureComponent","responsive","viewportHorizontal","FretButton","qry","buttonClick","event","btn","target","nodeName","parentNode","stopPropagation","rootType","dataset","state","stateChange","fretSelect","fretSelectFind","selected","btnStyleChange","fretBtnStyle","btnState","btnStyle","fsmatch","fretSelectMatch","noteFilter","btncaption","minPadding","paddingtop","paddingbottom","paddingleft","paddingright","staffwidth","textboxpadding","FretPnl","fretClick","bind","fretFltrClick","cell","strn","isNaN","fretfilter","clientY","getBoundingClientRect","top","offsetHeight","strgFiltered","document","querySelector","fbid","currentTarget","fso","scaleTriadIvls","chordShapeData","strlet","chordInvrNotes","inv","inversionNoteByTab","selNoteVal","fretSelectMatchFind","ivlFind","chordFind","scaleTriadFind","scaleFind","rootFind","noteFind","octaveFind","trArray","ss","row","frets","strgFltr","col","fretFltr","fretFilter","cls","clickfunc","ssClassName","collapsed","buttonFind","React","Component","ArrowButton","uord","upOrDn","toLowerCase","dstyle","height","astyle","fontSize","newud","onChange","motion","div","animate","variants","up","transform","left","dn","transition","ease","duration","ArrowPnl","keyidx","isOpen","initial","firstRender","closeCallback","open","opacity","margin","collapse","close","onAnimationComplete","arrowWidth","arrowTitle","val","items","InfoPnl","chordShapeClick","fsChordClick","fsScaleClick","infoItemClick","invrLabelClick","triadLabelClick","scaletriad","arrowFunc","closeCB","html","lastkey","htmlCaption","htmlItems","noblist","a","lastname","ob","drawFretSelectMatches","fretSelectMatchDisplay","scaleTriads","scaleTriadSelected","scaleTriadDisplay","scaleInfoNew","scaleInfoClose","chordShape","invrs","pobj","chordInvrSelected","chordInvrDisplay","chordInfoNew","chordInfoClose","helpData","default","Modes","link","QuickTips","related","Fretboard","QueryPanel","InfoPanel","HelpManager","_g","useState","setIsOpen","topicClicked","setTopicChanged","subtopic","setSubtopic","crumbs","setCrumbs","topicClick","topicSelect","topic","useEffect","el","scrollIntoView","menu","itm","map","unshift","ctrl","hostname","hash","closed","children","QueryPnl","helpManagerOpen","btnDupeClick","btnHelpClick","btnDelClick","selLabelClick","selChordChange","btnClearClick","btnCollapseClick","selIntervalChange","selNoteChange","selOctaveChange","selScaleChange","reset","remove","duplicate","forceUpdate","helpManager","lbl","ivlName","sel","options","selectedIndex","text","trim","value","omin","oct","datastate","chd","qryBtnClass","arrowUord","selNote","selOct","selInt","selScale","selChord","drawSelNote","drawSelOctave","drawSelInterval","drawSelScale","drawSelChord","borderWidth","whileTap","damping","strgFilter","fretRoot","makeQuery","setState","objOrTab","Array","isArray","sort","b","About","trigger","modal","nested","href","_excluded","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlns","viewBox","x","y","ref","fill","stroke","strokeWidth","d","points","ForwardRef","App","fbs","setFbs","newid","setNewId","indexOfFbid","nid","Error","fbCount","useRef","current","useFirstRender","fretBtnText","strgFltrList","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.283eb756.chunk.js","sourcesContent":["/*\n Fret.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - called by FretPnl.jsx to draw a fret for GuitarJoe app\n  - consolidates fret drawing functionality by handling HTML formulation, no content or event handling\n  - fretboard is built from TD elements\n\n*/\nimport React  from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Fret( props ){\n\n  let keyii = 0\n  function key(){ return 'Fret' +(++keyii) }\n\n  let first = props.fretFirst\n  let last = props.fretLast\n  let strg = props.strg\n  let fret = props.fret\n  let click = props.onClick\n\n  if(props.fretFiltered === true && strg >= 1){ //no onClick for filtered frets\n    click = null\n  } \n\n  let btnStrFltr = null    //string filter image for fret0\n  if(fret === 0 && strg >= 1 && strg <= 6){\n    // <div>&diams;</div>\n    btnStrFltr=(\n     <div key={key()} className={'btnStrgFltr btnStrgFltr'+strg} onClick={props.strgFltrClick} data-strn={strg} data-fret={fret} \n      title='Click to enable/disable this string'>\n      <div>&nbsp;</div>\n     </div>\n    )\n  }\n\n  let fretbar = null      // fret bar image\n  if( strg > 0 && strg < 8\n  && fret >= first && fret <= last )\n    fretbar = <div key={key()} className='fretbar' onClick={click} data-strn={strg} data-fret={fret} ></div>\n\n  let stringdiv = null    //string image\n  if(strg >= 1 && strg <= 6)\n    stringdiv = <div key={key()} className='stringdiv' onClick={click} data-strn={strg} data-fret={fret} ></div>\n\n  return(\n    <td key={key()} \n      data-strn={strg} \n      data-fret={fret} \n      data-fretfilter={props.fretFiltered}\n      className={props.className} \n      onClick={click} \n     >\n       {btnStrFltr}\n       {props.content}\n       {fretbar}\n       {stringdiv}\n     </td>\n  )\n\n}\n\nFret.propTypes = {\n  fretFirst: PropTypes.number,\n  fretLast: PropTypes.number,\n  fretFiltered: PropTypes.bool,\n\n  strg: PropTypes.number,\n  fret: PropTypes.number,\n  \n  className: PropTypes.string,\n  content: PropTypes.object,\n  onClick: PropTypes.func,\n  strgFltrClick: PropTypes.func,\n}\nFret.defaultProps = {\n  fretFirst: 0,\n  fretLast: 14,\n  fretFiltered: false,\n\n  strg: 0,\n  fret: 0,\n\n  className: '',\n  content: null,\n  onClick: null,\n  strgFltrClick: null,\n}\n\nexport default Fret\n\n\n","/*\n  ♭ &flat; alt+?\n  \n  GuitarJoe's guitar theory logic\n  by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  \n   Note:\n    - all objects returned are newly constructed, so they may by modified by the caller\n    - note refers to what we usually call a note: C#\n    - note object, nobj: { strgnum:int, fret:int, note:'C#', semis:49, ... }\n    - note.semis is unique: number of semitones, Middle C = 48\n    - fret is an integer\n    - fret object, fobj: { strg:{}, fret:int, tab:'e12' }\n    - ivl is an interval object: intervals.list[n]\n    - ivls is a list of interval objects\n    - chord is an object: chords.list[n]\n    - assume: exception handling performed by caller\n\n  Todo:\n    - (when needed) update notes.calc() for ##/bb -- see comments in function\n*/\nvar q = {\n\n  chords: {\n    list:[   //verified against: https://www.omnicalculator.com/other/chord\n      {\n        name:'Major triad', abr:'maj',\n        intervals:[ 'P1', 'M3', 'P5' ]\n      },{\n        name:'Minor triad', abr:'min',\n        intervals:[ 'P1', 'm3', 'P5' ]\n      },{\n        name:'Augmented triad', abr:'aug',\n        intervals:[ 'P1', 'M3', 'A5' ]\n      },{\n        name:'Diminished triad', abr:'dim',\n        intervals:[ 'P1', 'm3', 'd5' ]\n      },{\n        name:'Dominant seventh', abr:'7',\n        intervals:[ 'P1', 'M3', 'P5', 'm7' ]\n      },{\n        name:'Major seventh', abr:'maj7',\n        intervals:[ 'P1', 'M3', 'P5', 'M7' ]\n      },{\n        name:'Minor seventh', abr:'min7',\n        intervals:[ 'P1', 'm3', 'P5', 'm7' ]\n      },{\n        name:'Major sixth', abr:'maj6',\n        intervals:[ 'P1', 'M3', 'P5', 'M6' ]\n      },{\n        name:'Minor sixth', abr:'min6',\n        intervals:[ 'P1', 'm3', 'P5', 'M6' ]\n      },{\n        name:'Suspended second', abr:'sus2',\n        intervals:[ 'P1', 'M2', 'P5' ]\n      },{\n        name:'Suspended fourth', abr:'sus4',\n        intervals:[ 'P1', 'P4', 'P5' ]\n      }\n    ],\n    byName( str ){\n      for(let chord of q.chords.list){\n        if(chord.abr === str || chord.name === str)\n          return { ...chord }\n      }\n      return null\n    },\n    findByIvls( ivls ){    //find a chord by matching interval.abr\n      // return null or one of q.chords.list[]\n      for( let chord of q.chords.list ){\n        if(chord.intervals.length !== ivls.length) \n          continue\n\n        let fnd = true\n        for( let ii = 0; ii < chord.intervals.length; ii++ ){\n           if(ivls[ii].abr !== chord.intervals[ii]){\n             fnd = false\n             break\n           }\n        }\n        if( fnd === true )    // all ivls match\n          return { ...chord }\n      }\n      return null\n    },\n    inversions( note, chordName, octave = 0 ){   // return an inversion object for given note and scale\n      let robj = null\n      if( typeof note === 'object' ){\n        robj = note\n        note = robj.note\n      }else{\n        note = note.toUpperCase()\n        robj = q.notes.byNote( note )\n      }\n      if(octave === null) octave = 0\n      robj.octave = Number(octave)\n      let cobj = null\n      if( typeof chordName === 'object' ){\n        cobj = chordName\n        chordName = cobj.abr\n      }else\n        cobj = q.chords.obj(note, chordName)\n\n      let maxinversions = cobj.ivls.length\n      let result = { root:robj.note, chord:chordName, octave:octave, max:maxinversions, positions:[] }\n      let rivls = cobj.ivls\n      let positions = ['Root','First','Second','Third','Fourth','Fifth']\n\n      rivls[0].octave = robj.octave   // set correct octaves\n      let s0 = q.intervals.byNote( rivls[0].note ).semis     \n      for( let idx = 1; idx < maxinversions; idx++ ){\n        let s1 = q.intervals.byNote( rivls[idx].note ).semis\n        rivls[idx].octave = (s0 < s1 ?robj.octave :robj.octave +1)\n      }\n     \n      for( let cnt = 1; cnt <= maxinversions; cnt++){\n        let pos = positions[ cnt -1 ]\n        let obj = result.positions[ pos ] = []\n\n        for( let idx = 1; idx <= maxinversions; idx++ ){\n          let inc = 0\n          let ridx = idx +(cnt -2) \n          if(ridx >= maxinversions) {\n            ridx -= maxinversions\n            inc = 1\n          }\n          let ioctave = ( rivls[ ridx ].octave +inc )\n                    \n          obj[idx] ={ \n            num: (ridx +1),\n            note: rivls[ ridx ].note,\n            octave: ioctave,\n            interval: null,\n            abr:null,\n            semis: q.semis.calc( rivls[ ridx ].note, ioctave ),\n            // chordNote: rivls[ ridx ],\n          }\n          let isemis = (idx === 1 ?0 : obj[idx].semis -obj[1].semis)\n          let iobj = q.intervals.bySemis(isemis, true)\n          obj[idx].interval = (isemis === 0 ?'Root' :iobj.name )\n          obj[idx].abr = iobj.abr\n          // console.log( obj[idx] )\n        }\n      }\n\n      return result\n    },\n    inversionLog( invrObj, includeSemis = false ){    // write to console\n      let caption = invrObj.root +invrObj.octave +' ' +invrObj.chord +' inversions:\\n'\n      let data = ''\n      for( let pos in invrObj.positions){\n        data += ' ' +pos +': '\n        for( let obj of invrObj.positions[pos] ){\n          if(obj === undefined) continue    //positions[pos][0] === null\n          data += obj.interval +' - ' +obj.note +obj.octave\n                + ( includeSemis === false ?' ' :'(' +obj.semis +') ' )\n        }\n        data += '\\n'       \n      }\n      console.log( caption, data)\n    },\n    inversionNotes( invrObj, invrPos ){ //return note objects for inversion\n      //assume: inversion root is always the bass note \n      //assume: notes returned must be on continguous strings\n      //assume: notes must exist within a range of frets from the bass note\n      //note: only return notes when all notes of inversion found\n      //note: some inversions will not have results because of these rules\n\n      if( invrObj.positions[invrPos] === undefined )\n        return null\n\n      function local_invrToNobj( invr, strgn, parent = null, rootfret = null ){\n        let nobj = null\n        let strg = q.fretboard.strg( strgn )\n        let note = invr.note\n        let fret = ( q.intervals.byNote( note ).semis  -q.intervals.byNote( strg.note ).semis )\n        if(fret < 0) fret += 12\n        \n        if(rootfret != null) fret = rootfret +12  //for root position: find multiple notes on string\n        \n        while( fret <= q.fretboard.fretMax ){\n          //  console.log('fret'+fret+':', {strg:strg.note, invr:note, fret:fret} )\n          if(fret <= q.fretboard.fretMax){\n            nobj = q.notes.obj( strg.num, fret, note )\n            // console.log('  search:', {iOctave:invr.octave, nOctave:nobj.octave, nobjFret:nobj.fret, parentFret:parentFret })\n            if( parent === null || (nobj.fret >= parent.fret-3 && nobj.fret <= parent.fret+3 ))  //verify proximity of frets\n            //don't verify octaves, leave it for the user to inspect\n              break;\n            else{   //keep searching string\n              fret += 12\n              nobj = null\n            }\n          }\n        }\n        return nobj\n      }\n\n      let chord = invrObj.root +invrObj.chord\n      let maxInversions = invrObj.max\n      let inversions = invrObj.positions[invrPos]\n\n      let tmp = []  //temporary store for notes found\n      let list = []     //returned with all notes found\n      for(let strgn = 6; strgn >= maxInversions; strgn--){   //because of inversion logic, root note can never be on upper strings\n\n        let rootfret = null\n        while( rootfret === null || rootfret < q.fretboard.fretMax){  //allow searching for root note multiple times\n          //calc fret position of root note\n          let invr = inversions[1]\n          let nobj = local_invrToNobj( invr, strgn, null, rootfret )\n          if(nobj === null) break\n          tmp[0] = nobj\n          tmp[0].invr = {chord:chord, inversion:invrPos, abr:invr.abr, num:1}\n          rootfret = nobj.fret    //\n\n          //calc note n\n          let fnd = true\n          for(let num = 2; num <= maxInversions; num++){\n            let parent = nobj\n            invr = inversions[ num ]\n            nobj = local_invrToNobj( invr, strgn -(num -1), parent, null )\n            if(nobj === null) {\n              fnd = false\n              break\n            }\n            tmp[ num -1 ] = nobj\n            tmp[ num -1 ].invr = {chord:chord, inversion:invrPos, abr:invr.abr, num:num}\n          }\n          if(fnd === false) continue\n\n          tmp.forEach( nobj => list.push( nobj ) )\n        }\n      }\n      if(list.length === 0) return null\n      return list\n    },\n    obj( root, chordName ){  //return chord object with notes based on root arg\n      let ivls = [],\n        chord = q.chords.byName( chordName )\n      if(chord === null) return null\n\n      if(typeof root === 'string')\n        root = q.intervals.byName( root )   //object returned to caller\n      if(root === null) return null\n\n      let preferFlats = ( \n          chord.name.indexOf('Minor') >= 0  \n        ||chord.name.indexOf('Diminished') >= 0 \n        || root.note.indexOf('♭') >= 0)\n      for(let iname of chord.intervals){\n        let ivl = q.intervals.byName( iname )\n        let note = q.notes.calc( root, ivl, preferFlats )\n        ivls.push({ ...ivl, note:note })\n      }\n\n      let obj = { \n        ...chord, \n        type:'chord',\n        fullName: root.note +' '+chord.name,\n        fullAbbrev: root.note +chord.abr,\n        root: root,\n        ivls:ivls\n      }\n\n      return obj\n    },\n\n    shapes: [   //define patterns for finding barre chords\n      // https://www.guitarplayer.com/lessons/46-chord-shapes-you-must-know-the-ultimate-guide-to-chord-substitutions\n      // https://www.libertyparkmusic.com/guitar-chord-shapes-beginner-to-advanced/\n      // https://www.guitarhabits.com/what-is-the-caged-system-the-keys-to-the-fretboard/\n      // https://appliedguitartheory.com/lessons/minor-caged-system/\n      // https://www.cagedguitarsystem.net/caged-seventh-chords/\n      //\n      // a bar object defines the numerical relationship between the root fret\n      //   and frets on other strings\n      //\n      //rules:      \n      //  strg: root note found on this string, this is a tab string letter\n      //  cnt: number of frets consumed\n      //  list[ string ] === null: string not played\n      //  list[ string ] === integer: add to root fret number to obtain new fret on string\n      //\n      { name:'C Major', abr:'Cmaj', chordAbr:'maj', string:'A', cnt:4,\n        strings:{ E:null, A:0, D:-1, G:-3, B:-2, e:-3 }\n      },\n      { name:'A Major', abr:'Amaj', chordAbr:'maj', string:'A', cnt:3,\n        strings:{ E:null, A:0, D:2, G:2, B:2, e:0 }\n      },\n      { name:'G Major', abr:'Gmaj', chordAbr:'maj', string:'E', cnt:4,\n        strings:{ E:0, A:-1, D:-3, G:-3, B:-3, e:0 }\n      },\n      { name:'E Major', abr:'Emaj', chordAbr:'maj', string:'E', cnt:3,\n        strings:{ E:0, A:2, D:2, G:1, B:0, e:0 }\n      },\n      { name:'D Major', abr:'Dmaj', chordAbr:'maj', string:'D',  cnt:4,\n        strings:{ E:null, A:null, D:0, G:2, B:3, e:2 }\n      },\n      //\n      { name:'C Minor', abr:'Cmin', chordAbr:'min', string:'A', cnt:4,\n        strings:{ E:null, A:0, D:-2, G:-3, B:-2, e:null }\n      },\n      { name:'A Minor', abr:'Amin', chordAbr:'min', string:'A', cnt:3,\n        strings:{ E:null, A:0, D:2, G:2, B:1, e:0 }\n      },\n      { name:'G Minor', abr:'Gmin', chordAbr:'min', string:'E', cnt:4,\n        strings:{ E:0, A:-2, D:-3, G:-3, B:0, e:0 }\n      },\n      { name:'E Minor', abr:'Emin', chordAbr:'min', string:'E', cnt:3,\n        strings:{ E:0, A:2, D:2, G:0, B:0, e:0 }\n      },\n      { name:'D Minor', abr:'Dmin', chordAbr:'min', string:'D',  cnt:4,\n        strings:{ E:null, A:null, D:0, G:2, B:3, e:1 }\n      },\n      //\n      { name:'C Dominant seventh', abr:'C7', chordAbr:'7', string:'A', cnt:3,\n        strings:{ E:null, A:0, D:-1, G:0, B:-2, e:null }\n      },\n      { name:'A Dominant seventh', abr:'A7', chordAbr:'7', string:'A', cnt:3,\n        strings:{ E:null, A:0, D:2, G:0, B:2, e:0 }\n      },\n      { name:'G Dominant seventh', abr:'G7', chordAbr:'7', string:'E', cnt:4,\n        strings:{ E:0, A:-1, D:-3, G:-3, B:-3, e:-2 }\n      },\n      { name:'E Dominant seventh', abr:'E7', chordAbr:'7', string:'E', cnt:3,\n        strings:{ E:0, A:2, D:0, G:1, B:0, e:0 }\n      },\n      { name:'D Dominant seventh', abr:'D7', chordAbr:'7', string:'D',  cnt:4,\n        strings:{ E:null, A:null, D:0, G:2, B:1, e:2 }\n      } \n      /*/\n      { name:'C Suspended fourth', abr:'Csus4', chordAbr:'sus4', string:'A', cnt:4,\n        strings:{ E:null, A:0, D:0, G:-3, B:-2, e:-2 }\n      },\n      /*/\n    ],\n    shapeByName( name ){   // return barre chord object\n      let bar = q.chords.shapes.find( obj => obj.abr === name || obj.name === name )\n      return (bar === undefined ?null :{ ...bar} )\n    },\n    shapesByChord( chordAbr ){   // return list of barre chord objects\n      let list = q.chords.shapes.filter( shape => shape.chordAbr === chordAbr )\n      if(list.length === 0) return null\n\n      for( let ii in list ){\n        list[ii] = { ...list[ii] }\n      }\n      return list\n    },\n    shapeTabs( shape, note ){    //return object wirh name and tabs for note's barre chord\n      if( typeof shape === 'string' )\n        shape = q.chords.shapeByName( shape )\n      if(typeof note === 'object')\n        note = note.note\n      // console.log( 111, shape )\n        \n      //find root string, fret\n      let roots = q.notes.find( shape.string, note )\n      // console.log( 222, shape.string, note, roots )\n      if( roots === null ) \n        return null\n        \n      //calculate notes on remaining strings\n      let chord = q.chords.obj( note, shape.chordAbr )\n      // console.log( 333, chord )\n\n      let min = q.fretboard.fretMin\n      let max = q.fretboard.fretMax\n      let filter = 'right'\n      for( let strg in shape.strings){\n        let fret = shape.strings[ strg ]\n        if(fret != null && fret < 0){\n          filter = 'left'\n          break\n        }\n      }\n      if(filter === 'left') min += (shape.cnt -1)  //frets start at 0 (nut)\n      else max -= (shape.cnt -1)\n      // console.log( 444, shape.cnt, filter, q.fretboard.fretMin, min, q.fretboard.fretMax, max )\n\n      let result = []\n      for( let root of roots){\n        if(root.fret < min || root.fret > max ) continue\n        \n        let strings = { E:null, A:null, D:null, G:null, B:null, e:null }\n        for( let ltr in strings){\n          if( shape.strings[ltr] === null ){\n            strings[ltr] = null\n            continue\n          }\n          let tab = ltr +( root.fret +shape.strings[ltr] ) \n          let note = q.notes.byTab( tab )\n          let ivl = chord.ivls.find( ivl => note.notes.indexOf( ivl.note ) >= 0 )\n          \n          strings[ltr] = { tab:tab, ...ivl }\n        }\n        \n        result.push({\n          chord:( root.note +' ' +chord.name ),\n          abr:( root.note +chord.abr ),\n          shape:( shape.abr +' shape' ),\n          shapeAbr: shape.abr,\n          root: root,\n          type:'shapeTabs',\n          strings:strings\n        })      \n      }\n\n      return result\n    },\n  },\n\n  fretboard: {\n    strings: [\n      {num:1, note:'E', octave:4, semis:0, tabLetter:'e' },\n      {num:2, note:'B', octave:3, semis:0, tabLetter:'B' },\n      {num:3, note:'G', octave:3, semis:0, tabLetter:'G' },\n      {num:4, note:'D', octave:3, semis:0, tabLetter:'D' },\n      {num:5, note:'A', octave:2, semis:0, tabLetter:'A' },\n      {num:6, note:'E', octave:2, semis:0, tabLetter:'E' }\n    ],\n\n    fretMin:0,  //0 = nut\n    fretMax:14,\n    fretMinSet( nn ){   //not used as yet\n      q.fretboard.fretMin = nn\n      q.fretboard.init()\n    },\n    fretMaxSet( nn ){   //not used as yet\n      q.fretboard.fretMax = nn\n      q.fretboard.init()\n    },\n\n    init(){\n      for(let ii = 0; ii <= q.fretboard.strings.length -1; ii++){\n        let strg = q.fretboard.strings[ii]\n        q.fretboard.strings[ii].semis = q.semis.calc(strg.note, strg.octave)\n      }\n    },\n    strg( strgN ){  \n      if( typeof strgN === 'number')\n        return { ...q.fretboard.strings[ strgN -1 ] }\n        \n      //assume tab letter\n      let result = q.fretboard.strings.find(\n        strg => strg.tabLetter === strgN\n      )\n      return ( result === undefined ?null :{ ...result } )\n    },\n    fretInRange(nobj, root, num = 3){\n      //assume: root is a notes.obj()\n      let max = (num <= 5 ?5 :num)\n      if((root.fret <= 1 && nobj.fret <= max)\n      || (root.fret > 1 && nobj.fret >= (root.fret -num)\n         && nobj.fret <= (root.fret +num)) )\n        return true\n      return null\n    },\n    obj( strg, fret ){\n      if( typeof strg === 'number')\n        strg = q.fretboard.strg( strg )\n      let semis = strg.semis +Number(fret)\n      return {\n        fret:fret, \n        // strg:Object.assign( {}, strg ), \n        strgnum:strg.num, \n        tab:(strg.tabLetter +fret),\n        semis: semis,\n        notes: q.notes.bySemis(semis)\n      }\n    },\n    bySemis( semis ){\n      let fret = null,\n        fretMax = q.fretboard.fretMax\n      for(let strg of q.fretboard.strings){\n        if(semis >= strg.semis && semis <= (strg.semis +fretMax)){\n          fret = ( semis -strg.semis )\n          return q.fretboard.obj( strg, fret )\n        }\n      }\n      return null\n    },\n    byTab( tab ){\n      let ltr = tab.substr(0,1),\n        fret = Number(tab.substr(1))\n      for( let strg of q.fretboard.strings ){\n        if(strg.tabLetter === ltr){\n          return q.fretboard.obj( strg, fret )\n        }\n      }\n      return null\n    },\n    tabByFret( strN, fret ){  // return example: 'e12'\n      strN = Number( strN )\n      for( let strg of q.fretboard.strings ){\n        if(strg.num === strN){\n          return ( strg.tabLetter +fret )\n        }\n      }\n      return null\n    },\n  },\n\n  intervals:{\n    list:[\n      //rules:\n      // 1. order by semitones\n      // 2. prefer perfect, major, minor first\n      // 3. prefer minor over diminished\n      // 4. prefer augmented last\n      // 5. removed (♭♭, TT) because added complexity not relevant to most uses\n      // \n      {name:'Perfect unison', abr:'P1',  semis:0, degName:'Tonic', note:'C' },\n      //{name:'Diminished second', abr:'d2', semis:0, note:'D♭♭' },\n      \n      {name:'Minor second', abr:'m2', semis:1, degName:'', note:'D♭' },\n      {name:'Augmented unison', abr:'A1', semis:1, degName:'', note:'C#' },\n      \n      {name:'Major second', abr:'M2', semis:2, degName:'Supertonic', note:'D' },\n      // {name:'Diminished third', abr:'d3', semis:2, note:'E♭♭' },\n      \n      {name:'Minor third', abr:'m3', semis:3, degName:'Mediant', note:'E♭' },\n      {name:'Augmented second', abr:'A2', semis:3, degName:'Mediant', note:'D#' },\n      \n      {name:'Major third', abr:'M3', semis:4, degName:'Mediant', note:'E' },\n      {name:'Diminished fourth', abr:'d4', semis:4, degName:'Mediant', note:'F♭' },\n\n      {name:'Perfect fourth', abr:'P4', semis:5, degName:'Subdominant', note:'F'},\n      {name:'Augmented third', abr:'A3', semis:5, degName:'Subdominant', note:'E#'},\n      \n      {name:'Diminished fifth', abr:'d5', semis:6, degName:'', note:'G♭' },\n      {name:'Augmented fourth', abr:'A4', semis:6, degName:'', note:'F#' },\n      // {name:'Tritone', abr:'TT', semis:6, note:'TT' },\n      \n      {name:'Perfect fifth', abr:'P5', semis:7, degName:'Dominant', note:'G' },\n      // {name:'Diminished sixth', abr:'d6', semis:7, note:'A♭♭' },\n      \n      {name:'Minor sixth', abr:'m6', semis:8, degName:'Submediant', note:'A♭' },\n      {name:'Augmented fifth', abr:'A5', semis:8, degName:'Submediant', note:'G#' },\n      \n      {name:'Major sixth', abr:'M6', semis:9, degName:'Submediant', note:'A' },\n      // {name:'Diminished seventh', abr:'d7', semis:9, note:'B♭♭' },\n      \n      {name:'Minor seventh', abr:'m7', semis:10, degName:'Subtonic', note:'B♭' },\n      {name:'Augmented sixth', abr:'A6', semis:10, degName:'Subtonic', note:'A#' },\n      \n      {name:'Major seventh', abr:'M7', semis:11, degName:'Leading tone', note:'B' },\n      {name:'Diminished octave', abr:'d8', semis:11, degName:'Leading tone', note:'C♭' },\n      \n      {name:'Perfect octave', abr:'P8', semis:12, degName:'Octave', note:'C' },\n      {name:'Augmented seventh', abr:'A7', semis:12, degName:'Octave', note:'B#' },\n    ],\n  \n    byNote( note ){\n      note = note.toUpperCase()\n      for(let ivl of q.intervals.list){\n        if(ivl.note === note)\n          return { ...ivl }\n      }\n      return null\n    },\n    byName( nm ){\n      let note = nm.toUpperCase()\n      for(let ivl of q.intervals.list){\n        if(ivl.abr === nm || ivl.note === note || ivl.name === nm)\n          return { ...ivl }\n      }\n      return null\n    },\n    bySemis( semis, returnFirst = false ){   //return intervals where semis match\n      semis = semis % 12\n      let list = []\n      for(let ivl of q.intervals.list){\n        if(ivl.semis > semis) break    //shortcircuit, intervals ordered by semis\n        if(ivl.semis === semis){\n          let obj = { ...ivl }\n          if(returnFirst === true) return obj\n          list.push( obj )\n        }\n      }\n      return list\n    },\n    findNote( ivls, nobj ){   //return null or ivl containing note\n      if(typeof nobj === 'string')\n        nobj = q.notes.byNote( nobj )\n      \n      let result = ivls.find( ivl => nobj.notes.indexOf( ivl.note ) >= 0 )\n\n      if( typeof result !== 'object') return null\n      return result\n    }\n  },\n\n  notes:{\n    list:['C','C#','D♭','D','D#','E♭','E','F','F#','G♭','G','G#','A♭','A','A#','B♭','B'],\n    alpha:['C','D','E','F','G','A','B'],\n\n    bySemis( semis, returnFirst = false ){\n      let list = []\n      semis = Number(semis) % 12\n      for(let ivl of q.intervals.list ){\n        if(ivl.semis === semis){\n          if(returnFirst === true) return ivl.note\n          list.push( ivl.note )\n        }\n        if(ivl.semis > semis) break //intervals ordered by semis\n      }\n      return list\n    },\n    calc( root, ivlOrName, preferFlats = false){  //iterate by semitones to get new note with correct #/b\n      // assume: preferFlats === true: return only flats\n\n      // to handle ##/bb:\n      // 1. pre-loop: resolve to standard note, get new root interval, proceed as normal: C## => D\n      // 2. post loop(???): if ivl requires ##/bb, manually resolve based on new note: D => C##\n\n      if(typeof root === 'object') root = root.note\n      let rprefix = root.substr(0,1)\n      let rsuffix = root.substr(1,2)\n      // console.log('root='+root, 'rprefix='+rprefix, 'rsuffix='+rsuffix)\n\n      let ivl = (typeof ivlOrName === 'object' ?ivlOrName : q.intervals.byName(ivlOrName))\n      let iprefix = ivl.abr.substr(0,1)    // A as in A1\n      // console.log('ivl.abr='+ivl.abr, 'iprefix='+iprefix )\n\n      // test: display matching intervals\n      // let rivl = q.intervals.byName( root )\n      // let list = q.intervals.bySemis( rivl.semis +ivl.semis )\n      // console.log( 'ivl.semis='+ivl.semis, '\\nlist=', list  )\n\n      //assume: no ## or bb used\n      let max = ivl.semis, idx = 0    //idx = q.notes.alpha.indexOf( ltr ) ::: test\n      let newlet = rprefix, newsfx = rsuffix\n      function local_inc( ltr ){\n        idx = q.notes.alpha.indexOf( ltr ) // this can probably be refactored out: notes.alpha[idx % 7] always === newlet; lookup not required\n        idx++\n        return q.notes.alpha[ idx % 7]\n      }\n      for(let ii = 0; ii < max; ii++){\n        // console.log('root='+root, 'newlet='+newlet+newsfx)\n        if(newlet === 'B' && newsfx === ''){ \n          newlet = 'C'; \n        }else\n        if(newlet === 'E' && newsfx === ''){ \n           newlet = 'F'; \n        }else\n        if(newsfx === '♭'){\n          newsfx = ''\n        }else\n        if(newsfx === '#'){\n          newsfx = ''\n          newlet = local_inc( newlet )\n        } \n        else  //newsfx === ''\n        if(iprefix === 'm' || iprefix === 'd'  || preferFlats === true){\n          newsfx = '♭'\n          newlet = local_inc( newlet )\n        }\n        else\n          newsfx = '#'\n      }\n      // console.log('root='+root, 'newlet='+newlet+newsfx)\n      return newlet+newsfx\n    },\n\n    find( strgN, note ){ // return null or list of note objects on string\n      note = note.toUpperCase()\n      let result = []\n      let strg = q.fretboard.strg( strgN )\n      let max = strg.semis +q.fretboard.fretMax\n      let semis = strg.semis\n      while(semis <= max){\n        let notes = q.notes.bySemis( semis )\n        if(notes.indexOf( note) >= 0){\n          let nobj = q.notes.obj(strg, semis -strg.semis, note)\n          result.push( nobj )\n          semis += 12\n        }\n        else\n          ++semis\n      }\n\n      if(result.length === 0) return null\n      return result\n    },\n    obj( strg, fret, note = null  ){\n      // console.log(111, fret, strg.num)\n      if(typeof strg === 'number')\n        strg = q.fretboard.strg( strg )\n      if(fret < 0) return null\n      let semis = strg.semis +fret\n      if(semis > (strg.semis +q.fretboard.fretMax)) return null\n\n      let octave = q.octave(semis),\n          list = q.notes.bySemis( semis )\n      return {\n        fret: fret,\n        note: (note === null ?list[0] :note),\n        notes: list,\n        octave: octave,\n        semis: semis,\n        // strg: strg, \n        strgnum: strg.num, \n        tab: strg.tabLetter +fret\n      }\n    },\n    byNote( note /*, octave = 0 */ ){   // return note object\n      // assume note is a string\n      let ivl = q.intervals.byNote( note ),\n          semis = ivl.semis /* +(octave * 12) */,\n          list = q.notes.bySemis( semis )\n          //, fobj = q.fretboard.bySemis( semis )\n      return {\n        fret: null, // fobj.fret,    //null because input is not specific to a fret\n        note:note,\n        notes:list,\n        octave:null,  //octave,\n        semis:semis,\n        // strg: null, // fobj.strg,\n        strgnum: null, // fobj.strg.num,\n        tab: null // fobj.tab,\n      }\n    },\n    byTab( tab ){\n      let fobj = q.fretboard.byTab( tab )\n      return q.notes.obj( fobj.strgnum, fobj.fret )\n    },\n\n    match( ivls, nobjList ){    //return true/false if notes in nobjList contained within ivls\n      //used to match scales and chords to user selected frets\n      //assume: ivls is a list of intervals.list[n]\n      //assume: nobjList is a list of notes.obj()\n      //assume: no duplicate items allowed\n      //assume: ivls.length > nobjList.length \n      //assume: there may be ivls[n] between matched items: c,e matches c,d,e\n      //assume: matches may occur across head/tail boundaries: e,c matches c,d,e\n      //generally this is a pattern matching algorithm between two lists\n      if(nobjList.length > ivls.length) return false\n\n      let list = nobjList.slice()   //to support rotating list\n      let fnd, nidx\n\n      //break on first match of all items in nobjList\n      for(let comparisons = 1; comparisons <= list.length; comparisons++){ //max comparisons = original pattern +(list.length -1) rotations \n\n        fnd = false; nidx = 0    //reset search params\n        for(let iidx = 0; iidx < ivls.length; iidx++){    //iterate ivls\n          if(list[nidx].notes.indexOf( ivls[iidx].note ) >= 0){ //increment when list item found; allows for gaps in range\n            if(++nidx === list.length){   //point to next list item\n              // console.log( 'found:', comparisons, list, ivls )\n              fnd = true; break   \n            } \n          }\n        }\n\n        if(fnd === true) break\n        list.push( list.splice(0,1)[0] ) //rotate list by moving head to tail\n      }\n\n      return fnd\n    },\n\n    toAbc( nobj, noteLength = 8 ){\n      let result = ''\n      \n      let acc = nobj.note.substr(1)\n      if(acc === '#') result = '^'\n      else\n      if(acc === '♭') result = '_'\n      else\n      if(acc === '##') result = '^^'\n      else\n      if(acc === '♭♭') result = '__'\n\n      result += nobj.note.substr(0,1)\n       \n      if(nobj.octave === 1) result += ',,'\n      else\n      if(nobj.octave === 2) result += ','\n      else\n      //if(nobj.octave === 3) result = result\n      //else\n      if(nobj.octave === 4) result += \"'\"\n      else\n      if(nobj.octave === 5) result += \"''\"\n      else\n      if(nobj.octave === 6) result += \"''\"\n      else\n      if(nobj.octave === 7) result += \"'''\"\n\n      return result +noteLength\n    }\n  },\n\n  octave( semis ){\n    return Math.floor( semis / 12 )\n  },\n\n  scales:{\n    list:[\n      // tested with: https://www.omnicalculator.com/other/music-scale\n      //            https://www.scales-chords.com/scalenav.php\n      // rules:\n      //   keep accidentals of the same type -- all flat or sharp\n      { name:'Major', abr:'M', short:'Major',\n        // list:[ 'C', 'D', 'E', 'F', 'G', 'A', 'B'],\n        intervals:['P1','M2','M3','P4','P5','M6','M7']\n      },\n      { name:'Natural minor', abr:'m', short:'Minor', \n        // list:[ 'C', 'D', 'D#', 'F', 'G', 'A', 'A#'],\n        intervals:['P1','M2','m3','P4','P5','m6','m7']\n      },\n      { name:'Pentatonic major', abr:'P', short:'Pen.Maj', \n        // list:[ 'C', 'D', 'E', 'G', 'A'],\n        intervals:['P1','M2','M3','P5','M6']\n      },\n      { name:'Pentatonic minor', abr:'p', short:'Pen.min',\n        // list:[ 'C', 'D#', 'F', 'G', 'A#'],\n        intervals:['P1','m3','P4','P5','m7']\n      },\n      { name:'Blues heptatonic', abr:'B7', short:'Blues7',\n        intervals:['P1','M2','m3','P4','d5','M6','m7']\n      },\n      { name:'Blues hexatonic', abr:'B6', short:'Blues6',\n        // 1, ♭3, 4, ♭5, 5, ♭7\n        intervals:['P1','m3','P4','d5','P5','m7']\n      },\n      { name:'Akebono I', abr:'Ak1', short:'Akebono1',\n        intervals:['P1','M2','m3','P5','M6']   // https://ianring.com/musictheory/scales/653 {0,2,3,7,9}\n      },\n      { name:'Akebono II', abr:'Ak2', short:'Akebono2',\n        intervals:['P1','m2','M3','P5','m6']\n        // https://pianoencyclopedia.com/scales/akebono-ii/C-akebono-ii.html:  C, bD, E, G, bA \n        // also: https://ianring.com/musictheory/scales/419\n        // also: https://www.flutopedia.com/csc_5tone_12tet.htm\n      },\n      // { name:'Chromatic', abr:'Ch', short:'Chromatic',\n      //   intervals:['P1','m2','M2','m3','M3','P4','d5','P5','m6','M6','m7','M7']\n      // },\n      { name:'Double harmonic', abr:'DH', short:'Dbl.Hrm',\n        // minor second, major third, perfect fourth and fifth, minor sixth, major seventh -- https://en.wikipedia.org/wiki/Double_harmonic_scale\n        intervals:['P1','m2','M3','P4','P5','m6','M7']\n      },\n      { name:'Gypsy minor', abr:'Gm', short:'Gypsy',\n        // step pattern is W, H, +, H, H, +, H -- https://en.wikipedia.org/wiki/Hungarian_minor_scale\n        intervals:['P1','M2','m3','d5','P5','m6','M7']\n      },\n      { name:'Hungarian major', abr:'HM', short:'Hungarian',\n        // semitones: 3, 1, 2, 1, 2, 1, 2 -- https://en.wikipedia.org/wiki/Hungarian_major_scale\n        intervals:['P1','m3','M3','d5','P5','M6','m7']\n      },\n      { name:'Phrygian dominant', abr:'Pd', short:'Phrygian',\n        //1 – ♭2 – 3 – 4 – 5 – ♭6 – ♭7 – 1  https://en.wikipedia.org/wiki/Phrygian_dominant_scale\n        intervals:['P1','m2','M3','P4','P5','m6','m7']\n      },\n      { name:'Pygmy', abr:'Py', short:'Pygmy',\n        intervals:['P1','M2','m3','P5','m7']\n        // https://ianring.com/musictheory/scales/397  {0,2,3,7,8}\n        // also: https://alchetron.com/Pygmy-music#Pygmy-scale\n      }\n    ],\n    degreeTriads( root, scale ){    //build triads on all scale degrees\n      // return: {type:'Scale Degree Triads', root:root, scale:scale, abr:sobj.abr, list:[]}\n      let sobj = null\n      if(typeof root === 'object') root = root.note\n      if(typeof scale === 'object') sobj = scale\n      else sobj = q.scales.obj(root, scale)\n      if(sobj === null) return null\n\n      let result = {type:'Scale Degree Triads', root:root, scale:scale, abr:sobj.abr, list:[]}\n      const degrees = ['i','ii','iii','iv','v','vi','vii']\n\n      for(let ii = 0; ii < sobj.ivls.length; ii++){    //iterate each scale degree\n        let ivls = []\n        let rootivl = null    //to calc correct semitones for interval\n\n        for(let num = 0; num <= 2; num++ ){   //build triad\n          let iidx = ii +((+2 * num) )\n          if( iidx >= sobj.ivls.length ) iidx -= sobj.ivls.length\n          \n          let ivl = sobj.ivls[ iidx ]\n          ivl = {\n            num:    (num +1),\n            abr:    null,\n            note:   ivl.note, \n            semis0: ivl.semis, \n            semis:  ivl.semis\n          } \n          if(rootivl === null){\n            rootivl = ivl\n            rootivl.semis = 0\n          }\n          else{\n            ivl.semis -= rootivl.semis0\n            if( ivl.semis < 0 ) ivl.semis += 12\n          }\n          ivl.abr = q.intervals.bySemis( ivl.semis, true ).abr\n          ivls.push( ivl )\n        }\n      \n        let deg = degrees[ii]\n        let match = q.chords.findByIvls( ivls )\n        if(match !== null){\n          if( match.name.indexOf('Major') >= 0) deg = deg.toUpperCase()\n          if( match.name.indexOf('Diminished') >= 0) deg += '°'\n          if( match.name.indexOf('Augmented') >= 0) deg += '+'\n        }\n\n        let triad = {\n          root:   sobj.ivls[ii].note,\n          num:    (ii +1),\n          degree: deg,\n          degreeName: sobj.ivls[ii].degName,\n          name:   (match !== null ?match.name :null),\n          abr:    (match !== null ?match.abr :null),\n          ivls:   ivls\n        }\n        result.list.push( triad )\n        // console.log( triad )\n      }\n      return result\n    },\n    byName( scaleName ){\n      for(let scale of q.scales.list){\n        if(scale.name === scaleName || scale.short === scaleName || scale.abr === scaleName)\n          return { ...scale }\n      }\n      return null\n    },\n    obj( root, scaleName ){  //return scale, root and scale intervals\n      let ivls = []\n\n      if(typeof root === 'string')        //else interval object\n        root = q.intervals.byName( root )\n      if(root === null) return null\n\n      let scale = q.scales.byName( scaleName )\n      if(scale === null) return null\n\n      let preferFlats = ( scaleName.indexOf('minor') >= 0 || root.note.indexOf('♭') >= 0 )\n\n      for(let ivlAbr of scale.intervals){   //generate intervals for scale built on root\n        let ivl = q.intervals.byName( ivlAbr )\n        let note = q.notes.calc( root, ivl, preferFlats )\n        ivl = {\n          ...ivl,\n          abr: ivlAbr,    //abbreviation may differ from one assigned to scale\n          note:note,\n        }\n        ivls.push( ivl )\n      }\n\n      let obj = { \n        ...scale, \n        type:'scale',\n        fullName: root.note +' '+scale.name,\n        shortName: root.note +' '+scale.short,\n        abbrevName: root.note +scale.abr,\n        root: root,\n        ivls: ivls \n      }\n      return obj\n    }\n  },\n\n  semis:{\n    calc(note, octaveNum){   //return number of semitones\n        //assume: ocatveNum range: 0 to infinity\n        //assume: Middle C (C4) == (C,4) == (48 +0) == 48\n        //assume:            C0 == (C,0) == ( 0 +0) ==  0\n        //assume: A440     (A4) == (A,4) == (48 +9) == 57\n        let semis = (octaveNum *12)\n        semis += q.intervals.byName( note ).semis\n        return semis\n    },\n  },\n}\n\n\nq.fretboard.init()\nexport default q","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport abcjsObj from 'abcjs'\n\nclass Abcjs extends PureComponent {\n  uniqueNumber = Date.now() + Math.random()\n\n  renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams) {\n    // const res = abcjsObj.renderAbc(\n    abcjsObj.renderAbc(\n      'abcjs-result-' + this.uniqueNumber,\n      abcNotation,\n      parserParams,\n      engraverParams,\n      renderParams\n    )\n    \n//    return res\n  }\n\n  componentDidMount() {\n    const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n    this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n  }\n\n  componentDidUpdate() {\n    const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n    this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%' }}>\n        <div id={'abcjs-result-' + this.uniqueNumber} style={{ width: '100%' }} />\n      </div>\n    )\n  }\n}\n\nAbcjs.propTypes = {\n  abcNotation: PropTypes.string,\n  parserParams: PropTypes.object,\n  engraverParams: PropTypes.object,\n  renderParams: PropTypes.object,\n}\n\nAbcjs.defaultProps = {\n  abcNotation: '',\n  parserParams: {},\n  engraverParams: { responsive: 'resize' },\n  renderParams: { viewportHorizontal: true },\n}\n\nexport default Abcjs\n","/*\n  FretButton.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by FrePnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FretButton.css';\nimport q from \"./guitar_lib.js\";\nimport Abcjs from \"./controls/react-abcjs\"\n\n// sample:\n// <button className='fretButton'>\n//   <span className=spanNote >C\n//     <sub className='subOctave' >octave</sub>\n//   </span>\n//   <sub className='subInterval' >interval</sub>\n// </button>\n\n\nfunction FretButton( props ){\n  // console.log('FretButton', props)\n\n  let {root, nobj, qry} = props\n\n  let keyii = 0\n  function key(){ return 'FBtn' +(++keyii) }\n\n  function buttonClick(event){\n    let btn = event.target\n    if(btn.nodeName !== 'BUTTON'){ \n      btn = btn.parentNode      //span\n      if(btn.nodeName !== 'BUTTON') \n        btn = btn.parentNode    //span span\n    }\n    if(btn.nodeName !== 'BUTTON') return\n    event.stopPropagation()\n\n    if(['fretRoot','noteSelect'].indexOf( qry.rootType ) >= 0  \n    && ['fretRoot','noteSelect'].indexOf( btn.dataset.state ) >= 0\n    && qry.scale === null && qry.chord === null && qry.ivl === null){    //nothing to do, turn off fretRoot state\n\t    props.stateChange( 'fretRoot', null )\n    } else\n    if(qry.rootType === 'fretSelect' \n    && btn.dataset.state === 'fretSelect'\n    && btn.dataset.tab === qry.fretSelect[0].tab){ //root note, stop fretSelect mode\n        // console.log('buttonClick(): stop fretSelect')\n    \t\tprops.stateChange( 'fretSelect', null )\n        return\n    } else\n    if(qry.rootType === 'fretSelect' \n    && props.fretSelectFind( btn.dataset.tab ) >= 0){ //this is a selected note\n      if(qry.fretSelect.length === 2 )    //one selected fret after this hidden, change to fretRoot\n\t\t    props.stateChange( 'fretRoot', qry.fretSelect[0] )\n      else    //more than two frets selected, deselect this button\n     \t\tprops.stateChange( 'fretSelect', btn.dataset.tab)\n    }\n    else{   //toggle button selected state\n      let selected = Number( btn.dataset.selected )\n      if(selected === 0)\n        btn.dataset.selected = 1\n      else\n      if(selected === 1)\n        btn.dataset.selected = 0\n    }\n  }\n  function btnStyleChange(event){   //toggle formatting of fret button captions\n    // console.log('fretBtnStyleChange', event)\n    event.stopPropagation()\n    \n   if(qry.note === 'All'){\n      if(qry.fretBtnStyle === 'NoteTab')\n   \t  \tprops.stateChange( 'fretBtnStyle', 'NoteAbc' )\n      else\n        props.stateChange( 'fretBtnStyle', 'NoteTab' )\n    }\n    else\n    if(props.qry.fretBtnStyle === 'NoteFirst')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlFirst' )\n    else\n    if(props.qry.fretBtnStyle === 'IvlFirst')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlAbc' )\n    else\n    if(props.qry.fretBtnStyle === 'IvlAbc')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlTab' )\n    else\n   \t\tprops.stateChange( 'fretBtnStyle', 'NoteFirst' )\n  }\n\n  let btnState = '', \n    btnStyle = qry.fretBtnStyle,\n    ivl = nobj.ivl, \n    selected = 0\n    \n    if(ivl === undefined || ivl === null){\n      switch(btnStyle){\n        case 'IvlFirst': btnStyle = 'NoteFirst'; break;\n        case 'IvlAbc': btnStyle = 'NoteAbc'; break;\n        case 'IvlTab': btnStyle = 'NoteTab'; break;\n        default: break; //for React automated testing\n      } \n    }\n\n  //assign format for root note button\n  if(root === 'ALL'){   //user selected All Notes\n    if(qry.octave !== 0 && qry.octave !== nobj.octave)\n      return null      \n    if( ['NoteAbc','NoteTab'].indexOf( qry.fretBtnStyle ) < 0 )\n      btnStyle = 'NoteAbc'\n  }else\n  if(qry.rootType === 'fretRoot'){\n    if(nobj.notes.indexOf( root.note ) >= 0  &&  nobj.semis === root.semis){\n      if(nobj.state === 'chord1')\n        btnState = 'chord0'   //defines fret root is chord root\n      else\n        btnState = qry.rootType\n    }\n  }else\n  if(qry.rootType === 'noteSelect'){\n    if(root.notes.indexOf( nobj.note ) >= 0){\n      if(qry.chord === null)\n        btnState = qry.rootType\n    }\n  }else\n  if(qry.rootType === 'fretSelect'){\n    if(nobj.tab === qry.fretSelect[0].tab){\n      btnState = qry.rootType\n    }else\n    if(nobj.fsmatch){\n      btnState = 'fretSelectMatch'\n      if(nobj.notes.indexOf( qry.fretSelectMatch.obj.ivls[0].note ) >= 0) //obj = scale || chord\n        btnState += 1   //fretSelectMatch1 == root note of chord or scale\n    }\n  }\n\n  //button.dataset.state used to apply CSS\n  if(btnState === '' && nobj.state)\n    btnState = nobj.state\n  // overrides calculated state\n  if(nobj.state === 'triad' || nobj.state === 'triad1'\n  || nobj.state === 'invr' || nobj.state === 'invr1'\n  || nobj.state === 'chordShape' || nobj.state === 'chordShape0' || nobj.state === 'chordShape1' )\n    btnState = nobj.state\n  if(qry.noteFilter.indexOf( nobj.note ) >= 0)   // allow overriding roottype because user selected\n    btnState = 'noteFilter'\n\n  //format button caption\n  let btncaption = []\n  let renderParams = {    //for AbcJs\n    minPadding:5,   //doesn't work\n    paddingtop:0,\n    paddingbottom:0,\n    paddingleft:0,\n    paddingright:0,\n    //responsive: \"resize\",\n    scale:(nobj.octave <= 2 || nobj.octave >= 5 ?0.3 :0.4),\n    staffwidth:18,\n    textboxpadding:0,\n  }\n\n  let note = nobj.note\n  if( note.indexOf('♭') >= 1 )    //safari does not render ♭ properly\n    note = <span className='btnFlatNote'>{note}</span>\n  else\n    note = <span>{note}</span>\n  \n  //apply button caption style\n  if(btnStyle === 'IvlFirst'){\n    btncaption.push(\n      <span key={key()} className='spanIvl' onClick={buttonClick} >\n        <span key={key()} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='subNote' onClick={btnStyleChange}>{nobj.note}\n          <sub key={key()} className='subOctave' >{nobj.octave}</sub>\n      </sub>\n    )\n  }else\n  if(btnStyle === 'IvlAbc'){\n    btncaption.push(\n      <span key={key()} className='spanIvl' onClick={buttonClick} >\n        <span key={key()} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='ivlabc abc' onClick={btnStyleChange}\n         ><Abcjs key={key()} \n        abcNotation={'K:clef=none\\n y' +q.notes.toAbc( nobj )}\n        renderParams={renderParams} parserParams={{}} engraverParams={{}}\n      /></sub>\n    )\n  } else\n  if(btnStyle === 'IvlTab'){\n    btncaption.push(\n      <span key={key()} className='spanIvl' onClick={buttonClick} >\n        <span key={key()} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='ivltab tab' onClick={btnStyleChange}\n        >{nobj.tab}</sub>\n    )\n  }else\n  if(btnStyle === 'NoteTab'){      \n    btncaption.push(\n      <span key={key()} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={key()} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='notetab tab' onClick={btnStyleChange}\n        >{nobj.tab}</sub>\n    )\n  }else\n  if(btnStyle === 'NoteAbc'){\n    btncaption.push(\n      <span key={key()} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={key()} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='abc' onClick={btnStyleChange}\n         ><Abcjs key={key()} \n        abcNotation={'K:clef=none\\n y' +q.notes.toAbc( nobj )}\n        renderParams={renderParams} parserParams={{}} engraverParams={{}}\n      /></sub>\n    )\n  } \n  else {  // (btnStyle === 'NoteFirst')\n    btncaption.push(\n      <span key={key()} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={key()} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    if(nobj.ivl){\n      btncaption.push(\n        <sub key={key()} className='subInterval' onClick={btnStyleChange} >{ivl.abr}</sub>\n      )\n    }\n  }\n \n  return (\n    <button key={key()} className='fretButton'  onClick={buttonClick}\n      data-strn={nobj.strgnum} data-fret={nobj.fret}  data-tab={nobj.tab} \n      data-state={btnState} data-selected={selected}\n    >\n      {btncaption}\n    </button>\n  )  \n}\n\nFretButton.propTypes = {\n  root: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  nobj: PropTypes.object,\n  qry:  PropTypes.object,\n  fretSelectFind: PropTypes.func,\n  stateChange: PropTypes.func,\n}\n\nexport default FretButton\n","/*\n  FretPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - manage activation of fretboard controls for GuitarJoe app\n\n*/\n\nimport React from 'react'\n// import { motion } from \"framer-motion\"\n\nimport './FretPnl.css';\nimport Fret from './Fret.jsx';\nimport FretButton from './FretButton.jsx';\nimport q from \"./guitar_lib.js\";\n\nclass FretPnl extends React.Component{\n\n  constructor (props) {\n    super(props)\n    this.fretClick = this.fretClick.bind(this)\n    this.fretFltrClick = this.fretFltrClick.bind(this)\n    this.strgFltrClick = this.strgFltrClick.bind(this)\n  }\n  keyii = 0\n  key(){ return 'FPnl' +(++this.keyii) }\n\n  fretClick( event ){\n    let qry = this.props.qry,\n      cell = event.target,\n      strN = Number(cell.dataset.strn), \n      fret = Number(cell.dataset.fret)\n\n    event.stopPropagation()\n    if( isNaN(strN) ){\n      console.log('FretPnl.fretClick() error, bad caller:', cell)\n      return \n    }\n    if(strN > 7 || fret > q.fretboard.fretMax || cell.dataset.fretfilter === \"true\")\n      return\n\n    //calc string number in use\n    if(strN === 7){\n      strN = 6 \n    }else\n    if( strN !== 1 && cell.className.indexOf('stringdiv') < 0 ){ \n      let cy = event.clientY,\n        rect = cell.getBoundingClientRect(),\n        mid = rect.top +(cell.offsetHeight  /2)\n      if(cy < mid) {\n        strN--\n      }\n    }\n\n    if(this.props.strgFiltered( strN ) === true)\n      return\n\n    let note = q.notes.obj( strN, fret )\n    let btn = document.querySelector( '#Fretboard' +qry.fbid +' .fretButton[data-tab=' +note.tab +']')\n    if(btn !== null){\n      // Note: ignore because user must click button\n      // however, this works:\n      //   event.target = btn\n      //   btn.click( event )\n      return\n    } else\n    if(['','noteSelect'].indexOf(qry.rootType) >= 0){\n\t\t  this.props.stateChange( 'fretRoot', note )\n    }else\n    if(qry.rootType === 'fretRoot'){\n\t\t  this.props.stateChange( 'fretSelect', [qry.root, note] )\n    }else\n    if(qry.rootType === 'fretSelect'){\n\t    this.props.stateChange( 'fretSelect', note )\n    }\n  }\n  fretFltrClick( event ){ //toggle state for frets\n    let //qry = this.props.qry,\n      btn = event.currentTarget,\n      fret = Number( btn.dataset.fret )\n\n    event.stopPropagation()\n    // console.log( 'fretFltrClick:', fret, qry.fretFilter )\n    this.props.stateChange( 'fretFilter', fret )\n  }\n  strgFltrClick( event ){\n    let btn = event.currentTarget,\n      strN = btn.dataset.strn\n    this.props.stateChange( 'strgFilter', strN )\n    event.stopPropagation()\n  }  \n  \n  rootFind( nobj ){    //select fret = selected fret\n    let qry = this.props.qry\n    if(qry.rootType !== 'fretRoot') return null\n\n    if(nobj.tab === qry.root.tab){\n      return <FretButton key={this.key()}\n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    }\n    return null\n  }\n  noteFind( nobj ){    //select all frets with note = selNoteVal\n    let qry = this.props.qry\n    if(qry.rootType !== 'noteSelect') return null\n\n    let idx = nobj.notes.indexOf(qry.note)\n    if(qry.note === '' ||  idx >= 0){\n      if(qry.octave === 0 || qry.octave === nobj.octave){\n        if(qry.note !== '')\n          nobj.note = qry.note\n        // return qq.button( nobj, qry.root  )\n        return <FretButton key={this.key()} \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n  }  }\n    return null\n  }\n  fretSelectFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.rootType !== 'fretSelect') return null\n    if(qry.fretSelect.length === 0) return null\n\n    for(let fso of qry.fretSelect){\n      if(nobj.tab === fso.tab){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = fso.ivl\n          nobj.note = fso.note\n          // return qq.button( nobj, qry.root )\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  fretSelectMatchFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.rootType !== 'fretSelect') return null\n    if(qry.fretSelectMatch === null) return null\n\n    for(let ivl of qry.fretSelectMatch.obj.ivls){\n      if(nobj.notes.indexOf( ivl.note ) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          if(this.props.fretSelectFind( nobj.tab ) < 0)\n            nobj.fsmatch = true\n          // return qq.button( nobj, qry.root )\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  scaleTriadFind( nobj ){\n    let qry = this.props.qry\n    if(qry.scale === null) return null\n    if(qry.scaleTriadIvls === null) return null\n\n    let ivl = q.intervals.findNote( qry.scaleTriadIvls, nobj )\n    if( ivl === null ) return null\n\n    nobj.note = ivl.note\n    nobj.ivl = ivl\n    nobj.state = 'triad' +(ivl.num === 1 ?1 :'')\n    return <FretButton key={this.key()} \n              root={qry.root} nobj={nobj}  qry={qry} \n              fretSelectFind={this.props.fretSelectFind} \n              stateChange={this.props.stateChange} \n           />\n  }\n  octaveFind( nobj ){  //find notes for selected octave\n    let qry = this.props.qry\n    if(qry.note !== '') return\n\n    if(qry.octave === nobj.octave){\n      nobj.ivl = qry.ivl\n      return <FretButton key={this.key()} \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    }\n    return null\n  }\n  scaleFind( nobj ){\n    let qry = this.props.qry\n    if(qry.scale === null) return null\n\n    if(qry.rootType === 'fretRoot'){    //exclude frets\n      if(q.fretboard.fretInRange(nobj, qry.root) !== true)\n        return null\n    }\n    for(let ivl of qry.scale.ivls){\n      if( nobj.notes.indexOf(ivl.note) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          // return qq.button( nobj, qry.root )\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  chordFind( nobj ){\n    let qry = this.props.qry\n    if(qry.chord === null) return null\n\n    if(qry.chordShapeData != null){\n      for( let shape of qry.chordShapeData ){\n        for( let strlet in shape.strings ){\n          if(shape.strings[strlet] === null) continue\n          let tab = shape.strings[strlet].tab\n          if( nobj.tab === tab ){\n            nobj.note = shape.strings[strlet].note\n            nobj.ivl = shape.strings[strlet]\n            nobj.state = 'chordShape' \n            if( qry.root.tab === tab ) nobj.state += 0\n            else\n            if( nobj.notes.indexOf( shape.root.note ) >= 0 ) nobj.state += 1\n            return <FretButton key={this.key()} \n                      root={qry.root} nobj={nobj}  qry={qry} \n                      fretSelectFind={this.props.fretSelectFind} \n                      stateChange={this.props.stateChange} \n                    />\n          }\n        }\n      }\n    }\n    if(qry.chordInvrNotes !== null){    //inversion format take precedence\n      let inv = this.props.inversionNoteByTab( nobj.tab )\n      if(inv !== null){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.note = inv.note\n          nobj.ivl = inv.invr\n          nobj.state = 'invr' +(inv.invr.num === 1 ?1 :'')\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    if(qry.rootType === 'fretRoot'){    //exclude frets out of range\n      if(q.fretboard.fretInRange(nobj, qry.root) !== true)\n        return null\n    }\n    for(let ivl of qry.chord.ivls){\n      if( nobj.notes.indexOf(ivl.note) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          nobj.state = 'chord' +(ivl.abr === 'P1' ?'1' :'')\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  ivlFind( nobj ){     //select frets matching interval\n    let qry = this.props.qry\n    if(qry.ivl === null) return null\n    \n    let btn = null\n    if( (qry.rootType === 'fretRoot' && nobj.tab === qry.root.tab)\n    ||  (qry.rootType === 'noteSelect' && nobj.notes.indexOf(qry.note) >= 0) ){ //this is the root note object\n      btn = 'root'\n    } else\n    if(qry.rootType === 'fretRoot' && q.fretboard.fretInRange(nobj, qry.root, 4) === true){\n      if( nobj.notes.indexOf(qry.ivl.note) >= 0 )\n        btn = true\n    }else\n    if(qry.rootType === 'noteSelect' && nobj.notes.indexOf(qry.ivl.note) >= 0){\n      btn = true\n    }\n\n    if(btn === 'root'){\n      nobj.ivl = q.intervals.byName('P1')\n      nobj.note = qry.note\n      // btn = qq.button( nobj, qry.root  )\n    }else\n    if(btn === true){\n      if(qry.octave === 0 || qry.octave === nobj.octave){\n        nobj.ivl = qry.ivl\n        nobj.note = qry.ivl.note\n        nobj.state = 'interval'   //new, allow for color coding of intervals\n        // btn =  qq.button( nobj, qry.root  )\n      }\n      else\n        btn = null\n    }\n    if(btn != null)\n      return <FretButton key={this.key()} \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    return null\n  }\n\n  buttonFind( nobj ){\n    let qry = this.props.qry\n    let btn = null\n\n    // ordering is critical because it determines which buttons are on top\n    // all modes respect selOctave filter\n\n    //All notes mode\n    if(qry.rootType === 'noteSelect' && this.props.selNoteVal === 'All')\n      btn = <FretButton key={this.key()} \n              root={'ALL'} nobj={nobj}  qry={qry} \n              fretSelectFind={this.props.fretSelectFind} \n              stateChange={this.props.stateChange} \n            />\n    //fretSelect mode\n    if(btn === null) btn = this.fretSelectMatchFind( nobj )\n    if(btn === null) btn = this.fretSelectFind( nobj )\n\n    //noteSelect mode\n    if(btn === null) btn = this.ivlFind( nobj )\n    if(btn === null) btn = this.chordFind( nobj )\n    if(btn === null) btn = this.scaleTriadFind( nobj )\n    if(btn === null) btn = this.scaleFind( nobj )\n    if(btn === null){\n      if(qry.rootType === 'fretRoot')\n        btn = this.rootFind( nobj )  //only select the fret clicked\n      else\n      if(qry.rootType === 'noteSelect')\n        btn = this.noteFind( nobj )  //select all frets with note = selNoteVal\n    }\n    if(btn === null) btn = this.octaveFind( nobj )\n    return btn\n  }\n\n  render(){\n    // console.log('fretPnl.render()', this.props)\n    let qry = this.props.qry\n\n    //make table's tr and td\n    let trArray = [],\n      fretMax = q.fretboard.fretMax,    \n      first = this.props.fretFirst,\n      // last = this.props.fretLast,\n      ss = ''\n    for (let row = 1; row <= 9; row++) {\n      let frets = []\n      let strN = row -1\n      let strgFltr = this.props.strgFiltered( strN )\n\n      for (let col = 0; col <= fretMax +1; col++) {\n        let \n          fretFltr = (qry.fretFilter.indexOf( col ) >= 0),\n          cls = '', \n          clickfunc = this.fretClick,\n          content = null\n\n        if(row === 1){  //top border, with fret numbers, fret filtering\n          let ss = (col === first || col === (fretMax +1) ?' ' :col)\n          let ssClassName = 'fretFilterDiv'\n          if( qry.collapsed === true){\n            ss = ''\n            if( [5,7,9,12].indexOf(col) >= 0 )\n              ssClassName = 'fretFilterCollapsed'\n          }\n          cls = (col === (fretMax +1) ?'borderRight tdBorder'+col :'tdBorder'+col)\n          clickfunc = this.fretFltrClick   \n          content = <div key={this.key()} data-fret={col} className={ssClassName} >{ss}</div>\n        }else\n        if(row === 9){  //bottom frame\n            cls = (col === (fretMax +1)\n              ? 'borderRight tdBottom col'+col    //right bottom corner frame\n              : 'tdBottom col'+col\n            )\n        }\n        else{   // generate frets with right and left borders\n          cls = (col === fretMax +1\n            ?'borderRight col'+col      // right border\n            :'fret fret'+col)\n\n          //process fret button\n          let nobj = null\n          if( strN <= 6\n           && fretFltr === false    //no filter applied to fret\n           && strgFltr === false    //no filter applied to string\n           && col >= this.props.fretFirst \n           && col <= this.props.fretLast){         //filter by fretboard range\n            nobj = q.notes.obj( strN, col )\n            content = this.buttonFind( nobj )\n          }\n        }\n        \n        frets.push(\n          <Fret key={this.key()}\n            fretFirst={this.props.fretFirst}\n            fretLast={this.props.fretLast}\n            fretFiltered={fretFltr} \n\n            strg={strN} \n            fret={col} \n\n            className={cls} \n            content={content}\n            onClick={clickfunc} \n            strgFltrClick={this.strgFltrClick} \n          />\n        )\n      }\n\n      if(row === 1) \n        ss = 'frame frameTop'\n      else\n      if(row === 8) \n        ss = 'borderBottom'\n      else\n      if(row === 9) \n        ss = 'frame frameBottom'\n      else{\n        ss = 'strg strg' +(row -1)\n      }\n      trArray.push( <tr key={row} className={ss} data-fltr={strgFltr}>{frets}</tr> )\n    }\n    return (\n      <div className='fretPnlContainer'>\n        <table className='fretPnl'><tbody>\n          {trArray}\n        </tbody></table>\n      </div>\n    )\n  }\n}\n\nexport default FretPnl\n","/*\n  ArrowButton.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - an arrow in a button frame pointing up or down used to expand/collapse controls\n  - used by to expand and collpase controls in GuitrJoe app and ArrowPnl.jsx\n*/\nimport React  from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from \"framer-motion\"\nimport './ArrowButton.css';\n\nfunction ArrowButton( props ){\n\n  //handle initial state\n  let uord =  (props.upOrDn === '' ?'dn' :props.upOrDn.toLowerCase())\n  // console.log('ArrowButton function call', uord, props)\n\n  function onClick(){\n    let newud = (uord === 'up' ?'dn' :'up')\n    // console.log('ArrowButton.onClick', newud )\n    if(props.onChange !== null)\n      props.onChange( newud )\n  }\n\n  let className = 'ArrowBtn ' +(uord === 'up' ?'ArrowBtnUp' :'ArrowBtnDn')\n  \n  let width = (props.width === '' ? '1em' :props.width)\n  let dstyle = { height:width, width:width}\n  let astyle = { fontSize:'calc( '+width+' * 0.8 )' }\n\n  return (\n    <div className={className} style={dstyle} onClick={onClick} title={props.title} \n    > \n      <motion.div style={astyle} \n        animate={uord}\n        variants={{\n          up: { transform:'rotateZ(-90deg)', left:'-1px' },\n          dn: { transform:'rotateZ(90deg)',  left:'1px' },\n        }}\n        transition={{ ease:\"easeOut\", duration:0.4 }}\n      >\n      &#10148;\n      </motion.div>\n    </div>\n  )  \n\n}\n\nArrowButton.propTypes = {\n  ArrowUpOrDn: PropTypes.string,\n  title: PropTypes.string,\n  width: PropTypes.string,\n  onChange: PropTypes.func,\n}\nArrowButton.defaultProps = {\n  upOrDn: 'up',     //up or dn\n  title: 'Click to collapse',\n  onChange: null,\n  width:'1em',\n}\n\nexport default ArrowButton\n\n","/*\n  ArrowPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by QueryPnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from \"framer-motion\"\n\nimport ArrowButton from './ArrowButton'\nimport   './ArrowPnl.css'\n\nfunction ArrowPnl( props ){\n\n  let keyidx = 0\n  \n  function key(){ return 'ArrowPanel' +( ++keyidx ) }\n  function onAniComplete(){\n    if(props.closeCallback !== null)\n      props.closeCallback()\n  }\n  function onChange(){\n    let val = !props.isOpen\n    if(props.onChange) props.onChange( val )\n  }\n\n  let animate = (props.isOpen ? 'open' : 'collapse')\n  let initial = animate\n  let firstRender = (props.firstRender === true)\n\n  if(firstRender === true){\n    initial = 'close'\n    animate = 'open'\n  }else\n  if(props.closeCallback !== null){\n    initial = 'open'\n    animate = 'close'\n  }\n  // console.log('Ap render', firstRender, props.isOpen, initial, animate, props)\n\n  return (\n    <motion.div key={key()} className='ArrowPnl' \n      initial={initial}\n      animate={animate}\n      variants={{\n        open: { height: 'auto', opacity:1, margin:'0.2em  0' },\n        collapse: { height: '1.1em', opacity:1, margin:'0.2em  0' },\n        close: { height: '0px', opacity:0, margin:0 },\n      }}\n      transition={{ ease:\"easeOut\", duration:0.3 }}\n      onAnimationComplete={onAniComplete}\n    >\n\n      <div key={key()} className='ArrowPnlCaption' >\n        <ArrowButton key={key()} \n          upOrDn={props.isOpen === true ?'up' :'dn'} \n          width={props.arrowWidth}\n          title={props.arrowTitle} \n          onChange={onChange}\n        />\n        {props.caption}\n      </div>\n      <div \n        key={key()} \n        className='ArrowPnlItems' \n      >\n        {props.items}\n      </div>\n    </motion.div>\n  )\n}\n\nArrowPnl.propTypes = {\n  caption: PropTypes.array,   //array of jsx\n  items: PropTypes.array,     //array of jsx\n\n  // arrowUpOrDn: PropTypes.string,\n  arrowTitle: PropTypes.string,\n  arrowWidth: PropTypes.string,\n  onChange: PropTypes.func,\n\n  firstRender: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  closeCallback: PropTypes.func,\n}\nArrowPnl.defaultProps = {\n  caption: [<span>'ArrowPnl Caption'</span>],\n  items: null,\n\n  // arrowUpOrDn: 'up',     //up or dn\n  arrowTitle: 'Click to collapse',\n  arrowWidth:'1em',\n  onChange: null,\n\n  firstRender: true,\n  isOpen: true,\n  closeCallback: null,\n}\n\nexport default ArrowPnl\n","/*\n  InfoPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by QueryPnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ArrowPnl from './controls/ArrowPnl'\nimport q from \"./guitar_lib.js\";\n\nfunction InfoPnl( props ){\n  // console.log('InfoPnl.render()', props)\n\n  let {qry} = props\n\n  function chordShapeClick(event){\n    event.stopPropagation()\n    let btn = event.target   \n    props.stateChange( 'chordShape', btn.dataset.shape )\n  }\n  function fsChordClick( event ){\n    let btn = event.target\n    // console.log('fsChordClick', btn.dataset.note, btn.dataset.abr)\n\n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else{   //default operation\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === btn.dataset.note && qry.fretSelectMatch.abr === btn.dataset.abr)    //turn off selected match\n        props.stateChange( 'fretSelectMatch', null )\n      else\n        props.stateChange( 'fretSelectMatch', {type:'chord', note:btn.dataset.note, abr:btn.dataset.abr} )\n    }\n  }\n  function fsScaleClick( event ){\n    let btn = event.target\n    // console.log('fsScaleClick', btn.dataset.note, btn.dataset.abr)\n\n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )   //turn off selected match\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else{   //default operation\n      if(qry.fretSelectMatch != null \n      && qry.fretSelectMatch.note === btn.dataset.note && qry.fretSelectMatch.abr === btn.dataset.abr)\n        props.stateChange( 'fretSelectMatch', null )   //turn off selected match\n      else\n        props.stateChange( 'fretSelectMatch', {type:'scale', note:btn.dataset.note, abr:btn.dataset.abr} )\n    }\n  }\n  function infoItemClick(event){\n    event.stopPropagation()\n\n    let btn = event.target   \n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )\n      props.stateChange( 'chordInvrSelected', null )\n      props.stateChange( 'noteFilter', 'clear' )\n      props.stateChange( 'scaleTriadSelected', null )\n      props.stateChange( 'chordShape', null )\n    }\n    else {   //default noteFilter: highlight all FretButtons with selected note\n      if(btn.className !== 'ivl')\n        btn = btn.parentNode\n      \n      let note = btn.dataset.note     \n      if(typeof note === 'string')\n        props.stateChange( 'noteFilter', note )\n    }\n  }\n  function invrLabelClick(event){\n    event.stopPropagation()\n    let btn = event.target   \n    props.stateChange( 'chordInvrSelected', btn.dataset.invr )\n  }\n  function triadLabelClick(event){\n    event.stopPropagation()\n    let btn = event.target   \n    props.stateChange( 'scaleTriadSelected', btn.dataset.scaletriad )\n  }\n  \n  function toggleFretSelectMatchDisplay(){\n    let ss = (qry.fretSelectMatchDisplay === 'Show' ?'Collapse' :'Show')\n    props.stateChange( 'fretSelectMatchDisplay', ss)\n  }\n  function toggleScaleTriadDisplay(){\n    let ss = (qry.scaleTriadDisplay === 'Show' ?'Collapse' :'Show')\n    props.stateChange( 'scaleTriadDisplay', ss)\n  }\n  function toggleChordInvrDisplay(){\n    let ss = (qry.chordInvrDisplay === 'Show' ?'Collapse' :'Show')\n    props.stateChange( 'chordInvrDisplay', ss)\n  }\n  \n  function scaleCloseCallback(){\n    props.stateChange( 'scaleName', '' )\n  }\n  function chordCloseCallback(){\n    props.stateChange( 'chordName', '' )\n  }\n  \n\n  function drawFretSelectMatches( html, key ){    //push matching chords and scales onto html[]\n    let selected = 0\n    \n    if(qry.fretSelect.length < 2) return null  \n\n    let noblist = qry.fretSelect.slice()\n    let last = null\n    noblist = noblist.filter(function(a){   //filter duplicate notes\n      if(last != null && last.notes.indexOf( a.note ) >= 0) return null\n      last = a\n      return a\n    })\n\n    //test chords for matching notes\n    let list = []\n    let lastkey = key\n    let lastname = null\n    last = null\n    for(let chord of q.chords.list){    \n\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        let ivls = q.chords.obj( iobj.note, chord.name).ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true)\n         list.push( {note:iobj.note, chord:chord} )\n      }\n    }\n    for(let ob of list){    //write matching chords\n      let chord = ob.chord\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={fsChordClick}\n        >Matching chords:&nbsp;</span> )\n      }\n\n      selected = 0\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === chord.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== chord.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = chord.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={fsChordClick} title={ob.note +' ' +chord.name}\n        data-note={ob.note} data-abr={chord.abr} data-selected={selected} \n        >&#8200;{ob.note}&#8239;{chord.abr}&#8200;</span> \n      )\n    }\n\n    //test scales for matching notes\n    list = []\n    lastkey = key\n    lastname = null\n    last = null\n    for(let scale of q.scales.list){   //==> disabled because most scales are not necessary for this use\n    //for(let scaleName of ['Major','Minor','Pen.Maj','Pen.min','Blues7','Blues6' /*,'Dbl.Hrm'*/]){\n\n      //can optimize by caching related minor scales when major found: \n      //  Major:Nat.min; Pent Maj:Pen.min,Blues7,Blues6; Dbl.Hrm:Gypsy\n\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        let ivls = q.scales.obj( iobj.note, scale.name).ivls    \n        // let scale = q.scales.obj( iobj.note, scaleName )\n        // let ivls = scale.ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true) \n         list.push( {note:iobj.note, scale:scale} )\n      }\n    }\n\n    for(let ob of list){    //write matching scales\n      selected = 0\n      let scale = ob.scale\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={fsScaleClick}\n        >Matching scales:&nbsp;</span> )\n      }\n\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === scale.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== scale.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = scale.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={fsScaleClick} title={ob.note +' ' +scale.name}\n        data-note={ob.note} data-abr={scale.abr} data-selected={selected} \n        > &#8200;{ob.note}&#8239;{scale.short}&#8200;</span> \n      )\n    }\n\n    return key\n  }\n\n\n  let selected = 0, html = [], key=0, lastkey=null\n  let  //for ArrowPnl\n    arrowTitle, arrowFunc, \n    firstRender, isOpen, closeCB,\n    htmlCaption = [], htmlItems = []    \n\n  if(qry.rootType === 'fretSelect'){    \n      htmlCaption = []\n      htmlItems = []\n\n      htmlCaption.push( \n        <span key={++key} className='propName' onClick={infoItemClick} data-selected='label'>{\n          'Fret select: '\n        }</span> \n      )\n\n      let last = null\n      qry.fretSelect.forEach( nobj => {\n        if(last && last.note === nobj.note) return\n\n        if(qry.noteFilter.indexOf( nobj.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        htmlCaption.push( \n          <span key={++key} className='ivl' onClick={infoItemClick} data-note={nobj.note} data-selected={selected} >\n             &nbsp;{nobj.note} <sub>{nobj.ivl.abr}</sub> \n          </span> \n        )\n        last = nobj\n      })\n\n      if(qry.fretSelectMatch === null){    //no selected chord or scale to draw\n          htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          htmlItems.push( <span key={++key} className='propName'\n           data-selected='label' onClick={infoItemClick}\n          > &nbsp;</span> )\n      }\n      else{    //draw user select chord or scale match\n        htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        htmlItems.push( \n          <span key={++key} className='propName' onClick={infoItemClick} data-selected='label' >\n            Selected, {qry.fretSelectMatch.obj.fullName}:&nbsp;\n          </span> \n        )\n\n        for(let ivl of qry.fretSelectMatch.obj.ivls){   \n          if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n          else selected = 0\n\n          htmlItems.push( \n            <span key={++key} className='ivl' onClick={infoItemClick} data-note={ivl.note} data-selected={selected} >\n              &nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n            </span> \n          )\n        }\n\n      }\n      key = drawFretSelectMatches( htmlItems, key )\n\n      arrowTitle = 'Show/hide matching chords and scales'\n      arrowFunc = toggleFretSelectMatchDisplay\n\n      firstRender = (qry.fretSelectMatchDisplay === 'Show')\n      isOpen = (qry.fretSelectMatchDisplay === 'Show')\n      closeCB = null\n\n      html.push(<ArrowPnl \n        key={++key} \n        caption={htmlCaption}\n        items={htmlItems}\n\n        arrowWidth='1em' \n        arrowTitle={arrowTitle} \n\n        onChange={arrowFunc}\n\n        firstRender={firstRender}\n        isOpen={isOpen} \n        closeCallback={closeCB}\n      />)\n  } else\n  if(qry.rootType === 'noteSelect' && props.selNoteVal === 'All'){    //special case\n    html.push( <span key={++key} className='propName'\n       data-selected='label' onClick={infoItemClick}\n      >{'All Notes'}</span> )\n\n    if(qry.octave !== 0){\n      html.push( <span key={++key} className='ivl'>{': Octave '}{qry.octave} </span> )\n    }\n  }\n  else{   //draw scale, chord and interval labels and notes\n    lastkey = key\n\n    if(qry.scale !== null){\n      htmlCaption = []\n      htmlItems = []\n\n      htmlCaption.push( \n        <span key={++key} className='propName' onClick={infoItemClick} data-selected='label' >\n          {qry.root.note +' ' +qry.scale.name +': '}\n        </span> \n      )\n      qry.scale.ivls.forEach( ivl => {\n        if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        htmlCaption.push(\n          <span key={++key} className='ivl' onClick={infoItemClick} \n            data-note={ivl.note} data-selected={selected}\n          >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n          </span> \n        )\n      })\n\n      if( qry.scaleTriads !== null ){   // draw scale degree triads\n        htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        htmlItems.push( \n          <span key={++key} className='propName' onClick={infoItemClick} data-selected='label' >{ \n            qry.root.note +' ' +qry.scale.abr +' Scale Degree Triads:'\n          }</span> \n        )\n\n        qry.scaleTriads.list.forEach( triad => {\n          htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          \n          if( qry.scaleTriadSelected === triad.num ) selected = 'triad'\n          else selected = 0\n          let ss = (triad.abr !== null ?triad.abr :'')\n          \n          htmlItems.push( \n            <span key={++key} className='ivl' onClick={triadLabelClick}\n             data-scaletriad={triad.num} data-selected={selected} >{\n              triad.degree +'. ' + triad.root +ss +': '\n            }</span> \n          )\n\n          triad.ivls.forEach( ivl => {\n            if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            htmlItems.push( \n              <span key={++key} className='ivl' onClick={infoItemClick}\n               data-note={ivl.note} data-selected={selected}\n              >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n              </span>\n            )\n          })\n        })\n      }\n\n      arrowTitle = 'Show/hide scale degree triads'\n      arrowFunc = toggleScaleTriadDisplay\n\n      firstRender = (props.scaleInfoNew === true && qry.scaleTriadDisplay === 'Show')\n      isOpen = (qry.scaleTriadDisplay === 'Show')\n      closeCB = null\n      if(props.scaleInfoClose === true) {\n        isOpen = false\n        closeCB = scaleCloseCallback\n      }\n\n      html.push(<ArrowPnl \n        key={++key} \n        caption={htmlCaption}\n        items={htmlItems}\n\n        arrowWidth='1em' \n        arrowTitle={arrowTitle} \n\n        onChange={arrowFunc}\n\n        firstRender={firstRender}\n        isOpen={isOpen} \n        closeCallback={closeCB}\n      />)\n    }\n    if(qry.chord !== null){\n      htmlCaption = []\n      htmlItems = []\n\n      htmlCaption.push(     //chord caption\n        <span key={++key} className='propName' onClick={infoItemClick} data-selected='label'>\n          {qry.root.note \n            // +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n            +' ' +qry.chord.name +': '}\n        </span> \n      )\n\n      qry.chord.ivls.forEach( ivl => {    //chord intervals\n        if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n\n        htmlCaption.push( \n          <span key={++key} className='ivl' onClick={infoItemClick} \n            data-note={ivl.note} data-selected={selected}\n          >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n          </span> \n        )\n      })\n\n      \n      if(['maj','min','7'].indexOf(qry.chord.abr) >= 0 ){ //draw chord shapes\n        htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        htmlItems.push(\n          <span key={++key} className='propName' onClick={infoItemClick} data-selected='label'>\n            Bar Chord Shapes:&nbsp;\n          </span> \n        )\n        let list = q.chords.shapesByChord( qry.chord.abr )\n        for( let shape of list ){\n          if(qry.chordShape === shape.abr) selected = 'chordShape'\n          else selected = 0\n\n          htmlItems.push( \n            <span key={++key} className='ivl' onClick={chordShapeClick} \n              data-shape={shape.abr} data-selected={selected} title={shape.name +' shape'}>\n              &nbsp;{shape.abr}&nbsp; \n            </span> \n          )\n        }\n      }\n      \n\n      if( qry.inversions !== null ){    //draw inversions\n        let invrs = qry.inversions\n        htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n        htmlItems.push( \n          <span key={++key} className='propName' onClick={infoItemClick}\n            data-selected='label'>{\n            invrs.root \n            +(qry.rootType === 'fretRoot' ?qry.root.octave +' ' :'')\n            +qry.chord.abr +' Inversions:'\n           }</span> \n         )\n\n        for(let pos in invrs.positions){\n          let pobj = invrs.positions[ pos ]\n          selected = (qry.chordInvrSelected === pos ?'invr' :'')\n          htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          htmlItems.push( \n            <span key={++key} className='ivl' onClick={invrLabelClick}\n             data-selected={selected} data-invr={pos}>{\n              pos +' Position: '\n            }</span> \n          )\n          for(let num in pobj){\n            let iobj = pobj[num]\n            let octave = ([0,1].indexOf(iobj.octave) >= 0 ?'' :iobj.octave)\n            if(qry.noteFilter.indexOf( iobj.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            htmlItems.push( \n              <span key={++key} className='ivl' onClick={infoItemClick}\n               data-note={iobj.note} data-selected={selected}\n              >&nbsp;{iobj.note +octave} <sub>{iobj.abr}</sub> \n              </span>\n            )\n          }\n        }\n\n        htmlItems.push( \n          <span key={++key} className='propName'  data-selected='note'>\n            Note: some inversions can not be displayed, see \"About\" for details.\n          </span>\n         )\n        \n      }\n\n      arrowTitle = 'Show/hide inversions'\n      arrowFunc = toggleChordInvrDisplay\n\n      firstRender = (props.chordInfoNew === true && qry.chordInvrDisplay === 'Show')\n      isOpen = (qry.chordInvrDisplay === 'Show')\n      closeCB = null\n      if(props.chordInfoClose === true) {\n        isOpen = false\n        closeCB = chordCloseCallback\n      }\n\n      html.push(<ArrowPnl \n        key={++key} \n        caption={htmlCaption}\n        items={htmlItems}\n\n        arrowWidth='1em' \n        arrowTitle={arrowTitle} \n        \n        onChange={arrowFunc}\n       \n        firstRender={firstRender}\n        isOpen={isOpen} \n        closeCallback={closeCB}\n      />)\n    }\n    if(qry.ivl !== null){\n      if(qry.noteFilter.indexOf( qry.ivl.note ) >= 0) selected = 'noteFilter'\n      else selected = 0\n      \n      if(lastkey !== key)\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n      html.push( <span key={++key} className='propName'\n       data-selected='label' onClick={infoItemClick}\n      >{qry.note \n        +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n        +' + ' \n        +qry.ivl.name +' interval:'\n       }</span> )\n  \n      html.push( <span key={++key} className='ivl' onClick={infoItemClick}\n        data-note={qry.ivl.note} data-selected={selected}\n      >&nbsp;{qry.ivl.note}<sub>{qry.ivl.abr}</sub></span> )\n    }\n  }\n  \n\n  if(html.length === 0) return null\n  return (\n    <div className='infoPnl' >\n       <div className='infoDiv'>\n         {html}\n       </div>\n    </div>\n  )      \n}\n\nInfoPnl.propTypes = {\n  qry: PropTypes.object,\n  selNoteVal: PropTypes.string,\n  stateChange: PropTypes.func,\n\n  scaleInfoNew: PropTypes.bool,\n  scaleInfoClose: PropTypes.bool,\n\n  chordInfoNew: PropTypes.bool,\n  chordInfoClose: PropTypes.bool,\n}\n\nexport default InfoPnl\n","/*\n  HelpData.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - data for HelpManager.jsx\n\n*/\n\nvar helpData = {}\nexport default helpData\n\nhelpData.default = 'QuickTips'\nhelpData.Modes = {\n  title:'Modes',\n  link:`QuickTips`\n}\nhelpData.QuickTips = {\n  title:'Quick Tips',\n  related:['Fretboard', 'QueryPanel', 'InfoPanel', 'Scales','Chords','Intervals'],\n  content:`\nGuitarJoe works in four modes that are automatically activated:\n\\n\n**AllNotes Mode** - Display all notes on fretboard\\n\n- From the Note list, select 'All' - the Fretboard is populated with NoteButtons.\n- Click the button's left caption to give it a green background.\n- Click the button's right caption to cycle between Staff and Tab data.\n- Use the Octave list to display notes in a selected Octave.\n\\n\n**NoteSelect Mode** - Display a Root note across the fretboard\\n\n- From the Note list, select any note - All Root NoteButtons are displayed.\n- Selected scales, chords, and intervals will use this Root.\n\\n\n**FretRoot Mode** - Focus on notes in part of the fretboard\\n\n- Click a note on the fretboard - this is the Root note.\n- Selected octaves, scales, and chords will be within 3 frets of the Root.\n\\n\n**FretSelect Mode** - Find matching chords and notes\\n\n- Click multiple notes on the fretboard - related chords and scales will be \ndisplayed within the InfoPanel.\\n\n\\n \nSee \"About\" for application and GitHub code repository details.  \n\n  `,\n}\nhelpData.Fretboard = {\n  title:'Fretboard',\n  related:['QueryPanel', 'InfoPanel', 'Modes'],\n  content:`\nThe Fretboard contains the first 14 frets of a guitar fretboard.\nIt has many clickable features:\\n\n### Notes \n- Click on any note to place a NoteButton -   \nIf it is the only button, click again to remove it.  \nIf more than one, they will have left and right captions.  \n- Click the left caption to highlight the button in green.  \nIn FretSelect mode, this will remove the button from the Fretboard.  \n- Click the right caption to cycle combinations of note, interval, staff and tab data.  \nIn AllNotes mode, the caption cycles between staff and tab data.   \n\\n\n### Fret Numbers\n- Fret numbers are located above the FretBoard.\nIf the FretBoard is collapsed the buttons are removed and green lines be \nabove frets 5, 7, 9, and 12.\n- Click a Fret Number to disable a fret and hide any NoteButtons on the fret.\nThe fret is grayed and it's notes are not clickable.\n- When clicked again, existing NoteButtons will be replaced.\n- If the FretBoard is collapsed the space remains clickable.\n\\n\n### String Filter Buttons\n- The String Filter Buttons are green rectangles on the string's left edge.\n- Click one to disable the string and hide NoteButtons on the string. \nThe string is grayed and it's notes are not clickable.\n- When clicked again, existing NoteButtons will be replaced.\n\\n\n  `\n}\nhelpData.QueryPanel = {\n  title:'QueryPanel',\n  related:['Fretboard', 'InfoPanel', 'Modes'],\n  content:`\nThe QueryPanel is found below the Fretboard.\nUse it to tell GuitarJoe what work you want to do. \nFeatures:\\n\n\n**Collapse Button**\\n\n- This is the arrow button on the far left.  Click to compact or expand the display.\n\\n\n**List Captions**\\n\n- Clicking a caption will toggle the last selected value on and off.  \n- You can also turn off a selection by selecting the blank list item.\n\\n\n**Note List**\\n\n- Select a Root note to work with. \nSelected Octaves, Scales, Chords, and Intervals will use this as their root.\n- Select \"All\" to display all NoteButtons on the Fretboard.\n- When \"All\" is selected, only the Octave list will be active.\n\\n\n**Octave List**\\n\n- When selected, only NoteButtons within the selected Octave are displayed.\n- This may remove all NoteButtons because they are not within the selected Octave.\n\\n\n**Scale List**\\n\n- Select from a variety of scales. \n- When a scale is selected, Scale Degrees based on the Root note are displayed \nbelow, within the InfoPanel.\n- The scale's NoteButtons displayed are determined by the Mode.\n\\n\n**Chord List**\\n\n- Select from a variety of chords. \n- When a chord is selected, Chord Inversions based on the Root note are displayed \nbelow, within the InfoPanel.\n- The chord's NoteButtons displayed are determined by the Mode.\n\\n\n**Interval List**\\n\n- Display NoteButtons the selected Interval from the Root note.\n\\n\n**Reset Button**\\n\n- Remove all changes to the Fretboard.\n\\n\n**Help Button**\\n\n- Click to toggle this HelpPanel.\n\\n\n**Duplicate Button**\\n\n- Click to create a duplicate of the Fretboard.  Any number of Fretboards may be created.\n\\n\n**Delete Button**\\n\n- Click to delete the Fretboard. Currently, the first Fretboard may not be deleted.\n\\n\n  `\n}\nhelpData.InfoPanel = {\n  title:'InfoPanel',\n  related:['Fretboard', 'QueryPanel', 'Modes'],\n  content:`\nThe InfoPanel provides extra information about data displayed by GuitarJoe.\nIt is found below the QueryPanel.\nData within the InfoPanel may by copied and pasted to other applications using \nthe browser's clipboard functions.\nFeatures:\\n\n**Captions**\\n\n- Captions are bold, white text.  Clicking any caption will disable all active InfoPanel features.\n- You can also turn off a feature by clicking the item that turned it on.\n\\n\n**FretSelect Mode**\\n\n- Clicking multiple notes automatically starts this mode.\n- Names of Scales and Chords containing all notes clicked are shown.\n- Clicking a name will display it's NoteButtons across the Fretboard.\n- To dig deeper into a scale or chord, duplicate the Fretboard, then Reset \nand configure the new QueryPanel as needed.\n\\n\n**Scale Info (for NoteSelect and FretRoot modes)**\\n\n- The scale name is displayed with notes and intervals of the scale.\n- Scale degree triads with their notes and intervals are also displayed.\n- Clicking a note will highlight it's NoteButtons on the Fretboard \nand the InfoPanel.\n- Clicking a triad's name will highlight it's NoteButtons on the Fretboard.\n\\n\n**Chord Info  (for NoteSelect and FretRoot modes)**\\n\n- The chord name is displayed with notes and intervals of the chord.\n- For Major, Minor, and Dominant Seventh chords, bar chord shapes are displayed.\nThis is similar to, but not, the CAGED system.\n- Chord inversions are displayed for all chords.\n- Clicking a note will highlight it's NoteButtons on the Fretboard and the InfoPanel.\n- Clicking the name of a chord shape or inversion will highlight it's NoteButtons.\n\\n\n**Interval Info**\\n\n- The Interval name and it's note and interval are displayed.\n- Clicking a note will highlight it's NoteButtons on the Fretboard and the InfoPanel.\n`\n}","/*\n  HelpMnager.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - control to display help in GuitarJoe\n  - see HelpData.js for data structure consumed\n\n  Data structure:\n    helpData = {\n      default: topic2,    //required, default topic displayed on startup\n      topic1: {           // a link record\n        title: string,\n        link: topic2,     //display content for this topic\n      },\n      topic2: {           //a standard help record, at least one required\n        title: string,\n        related: array,   //related topics, displayed at bottom of window\n        content: Markdown text    //help info\n      }\n    }\n\n  To link from one help topic to another:\n    1. insert a markup link: [Jump to topic2](#topic2)\n      - HelpManager will intercept the click and process the request\n\n  To link from one help topic to a heading in another topic:\n    1. in the destination topic create a heading and note the id generated\n      create markup: ## Subtopic II\n      translated html: <h3 id=\"subtopic-ii\">Subtopic</a>\n    2. insert a markup link: [Jump to topic2 heading](#topic2/subtopic-ii)\n      - HelpManager will intercept the click and process the request\n\n  Resolve: to trigger the close animation:\n  - could not get framer-motion to work: AnimatePresence/motion.exit={\"close\"}\n  - instead use toggle switch in parent: isOpen = QueryPnl.helpManagerOpen\n\n    ToDo:\n    - change contentClick to mouseDown event to prevent anchor from firing (if possible)\n*/\n\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx'\nimport { motion } from \"framer-motion\"\n\nimport './HelpManager.sass'\nimport helpData from './HelpData.js'\n\n\nfunction HelpManager( props ) {\n  let {fbid, stateChange} = props\n  const [isOpen, setIsOpen] = useState( true )  //false = rollup, then remove component\n  const [topicClicked, setTopicChanged] = useState( false ) //true = new topic to display, do not rollup \n  const [subtopic, setSubtopic] = useState( null )\n  const [crumbs, setCrumbs] = useState( ['Help'] )\n\n  if(props.isOpen === false && isOpen === true){\n    setIsOpen( false )    //close request from QueryPanel\n  }\n\n  useEffect(() => {    \n    if(subtopic !== null){\n      let el = document.querySelector('#'+subtopic)\n      if(el) el.scrollIntoView()\n    }\n  })\n\n  function btnCloseClick(){\n    setIsOpen( false )\n  }\n  function contentClick( event ){\n    let ctrl = event.target \n    if( ctrl.nodeName === 'A' && ctrl.hostname === 'localhost'){\n      let topic = ctrl.hash.substr(1)\n      let subtopic = null\n      let idx = topic.indexOf('/')\n      if(idx >= 0){\n        subtopic = topic.substr(idx +1)\n        topic = topic.substr(0, idx)\n      }\n      // console.log('contentClick\\n', topic, subtopic, '\\n', ctrl.hash, event.target, event)\n      event.stopPropagation()\n      topicSelect( topic, subtopic )\n      return\n     }\n  }\n  function topicClick( event ){\n    let btn = event.target,\n      topic = btn.dataset.topic\n    topicSelect( topic )\n  }\n  function topicSelect( topic, subtopic = null ){\n    let list = crumbs.slice(),\n      idx = list.indexOf( topic )\n    if( idx >= 0)\n      list = crumbs.slice( 0, idx +1 )\n    else\n      list.push( topic )\n      \n    setTopicChanged( true )\n    setSubtopic( subtopic )\n    setCrumbs( list )\n  }\n  function onAniComplete(){\n    if(isOpen === false)  //remove self from screen\n      stateChange( 'helpManager', false )\n  }\n\n  let keyii = 0\n  function key(){ return 'HMgr' +(++keyii) }\n\n  \n  let menu = []\n  crumbs.forEach( topic => {\n    let title = (topic === 'Help'\n      ? 'Help'\n      : helpData[topic].title\n    )\n    menu.push( \n      <span key={key()} onClick={topicClick} data-topic={topic}>{title}</span> \n    )\n  })\n  \n  let topic = crumbs[ crumbs.length -1 ]\n  if( topic === 'Help' ){\n    if( !helpData.default)\n      return null\n    topic = helpData.default\n  }\n\n  let itm = helpData[ topic ]\n  let title = itm.title\n\n  if(itm.link !== undefined){    //handle link records\n    let tmp = helpData[ itm.link ]\n    title = tmp.title +' (' +title +')'\n    itm = tmp\n  }\n\n  let related = itm.related.map( topic => {\n    if( helpData[ topic ] === undefined)\n      return null\n    let title = helpData[ topic ].title\n    return (\n      <span key={key()} onClick={topicClick} data-topic={topic}>{title}</span>\n    )\n  })\n  if(related.length > 0){\n    related.unshift(<div key={key()} className='caption'>Related Topics</div>)\n  }\n\n  return(\n    <motion.div key={key()} id={'helpManager'+fbid} className='helpManagerFrame' \n      onClick={contentClick}\n      initial={topicClicked ?'open' :'closed'}\n      animate={isOpen ?'open' :'closed'}\n      variants={{\n        open: { height:'auto', opacity:1 },\n        closed: { height:'0px', opacity:0 },\n      }}\n      transition={{ ease:'easeOut', duration:0.3 }}\n      onAnimationComplete={onAniComplete}\n    >\n      <div className='menuFrame'>\n        {menu}\n        <div className='btnClose' onClick={btnCloseClick} title='Close Help' >\n            Close\n        </div>\n      </div>\n      <div className='titleFrame'>{title}</div>\n      <Markdown className='contentFrame' children={itm.content} />\n      <div className='relatedFrame'>{related}</div>\n    </motion.div>\n  )\n\n}\n\nHelpManager.propTypes = {\n  fbid: PropTypes.number,\n  isOpen: PropTypes.bool,\n  // firstRender: PropTypes.bool,  \n  stateChange: PropTypes.func,\n}\nexport default HelpManager","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    x: \"0px\",\n    y: \"0px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#ffffff\",\n    stroke: \"#0006\",\n    strokeWidth: \"1px\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,23v-4a2,2,0,1,0,0,4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48,24V18.038L47.967,18H32.033L32,18.038V25a7.979,7.979,0,0,0,3.556,6.648l.124.078a8.078,8.078,0,0,0,8.762-.076A7.982,7.982,0,0,0,48,25ZM35.5,22A1.5,1.5,0,1,1,37,20.5,1.5,1.5,0,0,1,35.5,22Zm3.361,6H37V26h1.861a7.445,7.445,0,0,0,3.635-.864L43.5,26.864A9.353,9.353,0,0,1,38.861,28ZM44.5,22A1.5,1.5,0,1,1,46,20.5,1.5,1.5,0,0,1,44.5,22Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"17.279 13 18 10.838 18 4 13 4 13 10.838 13.721 13 17.279 13\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17,35.226V15H14V35.226A5.657,5.657,0,0,1,17,35.226Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50,19v4a2,2,0,0,0,0-4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48,11.41v-.021q0-.66-.034-1.324c0-.022,0-.043,0-.065H32.038c0,.022,0,.044,0,.066-.022.441-.033.883-.034,1.323V12H48Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31,16H49a3.006,3.006,0,0,0,2.829-2H28.171A3.006,3.006,0,0,0,31,16Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.613,6.793A3.329,3.329,0,0,0,44.32,4a3.357,3.357,0,0,0-2.781,1.489,1.853,1.853,0,0,1-3.076,0A3.359,3.359,0,0,0,35.68,4a3.33,3.33,0,0,0-3.292,2.79c-.067.4-.1.806-.154,1.21H47.766C47.716,7.6,47.679,7.19,47.613,6.793Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40,35a9.941,9.941,0,0,1-4-.847V36.17a2,2,0,0,1-1.637,1.963l-1.188.224.383,1.576a6.629,6.629,0,0,0,12.884,0l.383-1.576-1.19-.224A2,2,0,0,1,44,36.17V34.147A9.946,9.946,0,0,1,40,35Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18,57V56H11a1,1,0,0,1-1-1V51a1,1,0,0,1,1-1h7V45.4a5.495,5.495,0,0,1-6-9.131V29.151a5.078,5.078,0,0,0-3.991,4.606,4.891,4.891,0,0,0,.041.926,12.5,12.5,0,0,1-2.032,9.29A9.98,9.98,0,0,0,4,50.3,10.262,10.262,0,0,0,14.35,60h2.3a10.328,10.328,0,0,0,1.8-.161A4.013,4.013,0,0,1,18,58Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.7,58H20a1.958,1.958,0,0,0,.814,1.608A2.01,2.01,0,0,0,22,60h4a1.006,1.006,0,0,1-.555-.168Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"28 60 28.017 59.998 26 60 28 60\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"53.303 51 60 51 60 49 56.303 49 53.303 51\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.941,43.492c-.005-.031-.013-.062-.018-.093a3.991,3.991,0,0,0-.142-.523c-.025-.069-.05-.137-.078-.2a3.814,3.814,0,0,0-.239-.509h0a3.982,3.982,0,0,0-.377-.54c-.014-.018-.03-.034-.045-.051a4.006,4.006,0,0,0-.914-.786c-.06-.038-.12-.075-.18-.108a3.871,3.871,0,0,0-.511-.245l-.041-.017a4.017,4.017,0,0,0-.67-.186l-7.941-1.466-.4,1.643a8.629,8.629,0,0,1-16.772,0l-.4-1.643-7.941,1.466a3.962,3.962,0,0,0-1.248.461c-.044.025-.087.051-.132.079a3.953,3.953,0,0,0-.388.277c-.063.051-.125.1-.184.156-.1.09-.191.186-.28.284-.059.065-.118.13-.173.2a4,4,0,0,0-.576,1c-.025.062-.049.125-.071.189a3.913,3.913,0,0,0-.158.583v0a4.035,4.035,0,0,0-.063.708V47h4a1.006,1.006,0,0,1,.555.168L30.3,51H49.7l5.748-3.832A1.006,1.006,0,0,1,56,47h4V44.162A4.012,4.012,0,0,0,59.941,43.492Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,53a1.006,1.006,0,0,1-.555-.168L23.7,49H20v7h3a1.006,1.006,0,0,1,.555.168L26.3,58H32l20.1,2.005L58,60a2,2,0,0,0,2-2V53H30Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.448,37.594a3.542,3.542,0,0,0-3.893,0,3.492,3.492,0,1,0,4.619,5.133l.012-.059a.716.716,0,0,1,.023-.1c.028-.1.077-.2.11-.293.042-.127.089-.251.14-.374.038-.092.06-.184.1-.277.079-.164.158-.311.238-.451l0-.01c.053-.093.109-.174.163-.257A3.571,3.571,0,0,0,19,40.5,3.469,3.469,0,0,0,17.448,37.594Z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 12,\n    y: 52,\n    width: 6,\n    height: 2\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.134,38.906c.094-.051.18-.119.276-.164l.447-.192a3.5,3.5,0,0,1,.549-.175,3.424,3.424,0,0,1,.462-.11,15.6,15.6,0,0,1,.081-3.578,4.84,4.84,0,0,0,.042-.926A5.079,5.079,0,0,0,19,29.151v7.113a5.445,5.445,0,0,1,1.815,2.825C20.919,39.024,21.025,38.965,21.134,38.906Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.97fcb56e.svg\";\nexport { ForwardRef as ReactComponent };","/*\n  QueryPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - manage query controls for GuitarJoe app\n\n*/\nimport React from 'react'\nimport { motion } from \"framer-motion\"\n\nimport './Fretboard.css';\nimport InfoPnl from \"./InfoPnl\"\nimport ArrowButton from './controls/ArrowButton'\nimport HelpManager from './controls/HelpManager.jsx'\nimport q from \"./guitar_lib.js\"\n\n\nclass QueryPnl extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.scaleInfoNew = false\n    this.scaleInfoClose = false\n    this.chordInfoNew = false\n    this.chordInfoClose = false\n    this.helpManagerOpen = true  //have helpManager remove self when === false\n                                 //technique does not work with state because of re-renders\n\n    this.btnDupeClick = this.btnDupeClick.bind(this)\n    this.btnHelpClick = this.btnHelpClick.bind(this)\n    this.btnDelClick = this.btnDelClick.bind(this)\n\n    this.last = {}    //store last query params to allow reset via label.click\n    this.selLabelClick = this.selLabelClick.bind(this)\n    this.selChordChange = this.selChordChange.bind(this)\n    this.btnClearClick = this.btnClearClick.bind(this)\n    this.btnCollapseClick = this.btnCollapseClick.bind(this)\n    this.selIntervalChange = this.selIntervalChange.bind(this)\n    this.selNoteChange = this.selNoteChange.bind(this)\n    this.selOctaveChange = this.selOctaveChange.bind(this)\n    this.selScaleChange = this.selScaleChange.bind(this)\n  }\n\n  //event handlers\n  btnCollapseClick(){\n    let val = !this.props.qry.collapsed\n    this.props.stateChange( 'collapsed', val )\n  }\n  btnClearClick(){\n    // this.props.dispatch({ type:\"FretboardActions/fretFirstUpdate\", payload:'' })\n    this.props.reset()\n  }\n  btnDelClick(){\n    this.props.remove()\n  }\n  btnDupeClick(){\n    this.props.duplicate()\n  }\n  btnHelpClick(){\n    if( this.helpManagerOpen === true ){  \n      this.helpManagerOpen = false //will hide then call parent.stateChange\n      this.forceUpdate()\n    }\n    else{ //show help\n      this.helpManagerOpen = true\n      let val = !this.props.qry.helpManager\n      this.props.stateChange( 'helpManager', val )\n    }\n  }\n  \n  selLabelClick( event ){     //reset param to off value\n    let qry = this.props.qry,\n      lbl = event.target,\n      val = lbl.dataset.selected\n    // console.log('last', this.last)\n    if(val === 'true'){\n      if(lbl.dataset.type === 'note'){\n        if(qry.rootType === '') return\n        \n        this.last['rootType'] = qry.rootType\n        this.last['root'] = qry.root\n        if(this.last['rootType'] === 'noteSelect')\n          this.props.stateChange( 'selNoteVal', '' )\n        if(this.last['rootType'] === 'fretRoot')\n          this.props.stateChange( 'fretRoot', null )\n      }else\n      if(lbl.dataset.type === 'scale'){\n        if(qry.scale === null) return\n        this.last['scaleName'] = qry.scale.name\n        this.scaleInfoNew = false\n        if(qry.scaleTriadDisplay === 'Collapse'){\n          this.props.stateChange( 'scaleName', '' )\n        }else{    //remove panel after close ani\n          this.scaleInfoClose = true\n          this.forceUpdate()\n        }\n      }else\n      if(lbl.dataset.type === 'chord'){\n        if(qry.chord === null) return\n        this.last['chordName'] = qry.chord.name\n        this.chordInfoNew = false\n        if(qry.chordInvrDisplay === 'Collapse'){\n          this.props.stateChange( 'chordName', '' )\n        }else{    //remove panel after close ani\n          this.chordInfoClose = true\n          this.forceUpdate()\n        }\n      }else\n      if(lbl.dataset.type === 'octave'){\n        this.last['octave'] = qry.octave\n        this.props.stateChange( 'octave', 0 )\n      }else\n      if(lbl.dataset.type === 'ivlName'){\n        this.last['ivlName'] = this.props.ivlName\n        this.props.stateChange( 'ivlName', '' )\n      }\n    }\n    else{   //allow toggling param on and off\n      if(lbl.dataset.type === 'note'){\n        if( !this.last.rootType ) return\n        if(this.last.rootType === 'noteSelect'){\n          if(this.last['root'] !== null)\n            this.props.stateChange( 'selNoteVal', this.last['root'].note )\n        } else\n        if(this.last.rootType === 'fretRoot'){\n          if(this.last['root'] !== null)\n            this.props.stateChange( 'fretRoot', this.last['root'] )\n        }\n      }else\n      if(lbl.dataset.type === 'scale'){\n        if(this.last['scaleName'] && this.last['scaleName'] !== ''){\n          this.scaleInfoNew = (this.props.scaleName === '')\n          this.props.stateChange( 'scaleName', this.last['scaleName'] )\n          this.props.stateChange( 'scaleTriadDisplay', 'Show' )\n        }\n      }else\n      if(lbl.dataset.type === 'chord'){\n        if(this.last['chordName'] && this.last['chordName'] !== ''){\n          this.chordInfoNew = (this.props.chordName === '')\n          this.props.stateChange( 'chordName', this.last['chordName'] )\n          this.props.stateChange( 'chordInvrDisplay', 'Show' )\n        }\n      }else\n      if(lbl.dataset.type === 'octave'){\n        if(this.last['octave'] && this.last['octave'] !== '')\n          this.props.stateChange( 'octave', this.last['octave'] )\n      }else\n      if(lbl.dataset.type === 'ivlName'){\n        if(this.last['ivlName'] && this.last['ivlName'] !== '')\n          this.props.stateChange( 'ivlName', this.last['ivlName'] )\n      }\n    }\n  }\n  selNoteChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'selNoteVal', val )\n    //   this.props.dispatch({ type:\"FretboardActions/semisUpdate\", val })\n  }\n  selOctaveChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    if(val === '')\n      this.props.stateChange( 'octave', 0 )\n    else\n      this.props.stateChange( 'octave', Number(val) )\n  }\n  selScaleChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    if(val !== ''){\n      this.scaleInfoNew = (this.props.scaleName === '')\n      this.props.stateChange( 'scaleName', val )\n    }\n    else{\n      this.scaleInfoNew = false\n      this.scaleInfoClose = true\n      this.forceUpdate()\n    }\n  }\n  selChordChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text.trim()\n    if(val !== ''){\n      this.chordInfoNew = (this.props.chordName === '')\n      this.props.stateChange( 'chordName', val )\n    }\n    else{\n      this.chordInfoNew = false\n      this.chordInfoClose = true\n      this.forceUpdate()\n    }\n  }\n  selIntervalChange( event ){\n    let sel = event.target,\n      opt = sel.options[sel.selectedIndex],\n      abr = opt.dataset.abr\n    this.props.stateChange( 'ivlName', abr )\n  }\n  \n  // draw controls\n  drawSelNote(){\n    let qry = this.props.qry,\n      list = [<option key='' ></option>,<option key='999' >All</option>]\n    for(let ii=0; ii < q.notes.list.length; ii++){\n      let note = q.notes.list[ii]\n      list.push(<option key={ii} >{note}</option>)\n    }\n\n    let note = (qry.note === null ?'' :qry.note)\n    return (\n      <div className='dataPnl pnlNote' >\n        <label data-selected={note !== ''} data-type='note' onClick={this.selLabelClick} >Note</label>\n        <select value={note} className='selNote' onChange={this.selNoteChange} >{list}</select>\n      </div>\n    )\n  }\n  drawSelOctave(){\n    let qry = this.props.qry,\n      oct = qry.octave,\n      omin = 0, omax = 0,\n      list = [<option key={999} ></option>]\n\n    omin = q.notes.obj(6, 0).octave\n    omax = q.notes.obj(1, q.fretboard.fretMax).octave\n\n    for(let ii = omax; ii >= omin; ii--){\n      list.push(<option key={ii} >{ii}</option>)\n    }\n    return (\n      <div className='dataPnl pnlOctave' >\n        <label data-selected={oct !== 0} data-type='octave' onClick={this.selLabelClick} >Octave</label>\n        <select value={oct} className='selOctave' onChange={this.selOctaveChange}>\n           {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelScale(){\n    let selected = this.props.scaleName,\n      ii=0, list = [<option key='aaa'></option>]\n    for(let scale of q.scales.list){\n      list.push(<option key={++ii} >{scale.name}</option>)\n    }\n    return (\n      <div className='dataPnl pnlScale' >\n        <label data-selected={selected !== ''} data-type='scale' onClick={this.selLabelClick} >Scale</label>\n        <select value={selected} className='selScale' onChange={this.selScaleChange} >\n          {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelChord(){\n    let ii = 0,\n      selected = this.props.chordName, \n      datastate = '',\n      list = [<option key='aaa'></option>]\n    for(let chd of q.chords.list){\n      list.push(<option key={++ii} >{chd.name}</option>)\n    }\n    if(selected !== '') datastate = 'chord'\n    return (\n      <div className='dataPnl pnlChord' >\n        <label data-selected={selected !== ''} data-type='chord' onClick={this.selLabelClick} >Chord</label>\n        <select value={selected} className='selChord' onChange={this.selChordChange} \n         data-state={datastate}>\n          {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelInterval(){\n    let qry = this.props.qry,\n      list = [<option key='aaa' data-abr='' ></option>],\n      ii = 0, selected = '' , datastate = ''\n    for(let ivl of q.intervals.list){\n      if(ivl.semis === 0) continue\n      if(ivl.semis === 12) continue\n      // if(ivl.abr === last) continue  should be unique\n      let html = `${ivl.name} (${ivl.abr}, ${ivl.semis})`\n      list.push(<option key={++ii} data-abr={ivl.abr} >{html}</option>)\n      if(qry.ivl !== null && selected === '' && qry.ivl.abr === ivl.abr)\n        selected = html\n      // last = ivl.abr\n    }\n    if(selected !== '') datastate = 'interval'\n    return (\n      <div className='dataPnl pnlInterval' >\n        <label data-selected={selected !== ''} onClick={this.selLabelClick} \n          data-type='ivlName' >Interval</label>\n        <select value={selected} className='selInterval' title='Intervals sorted by semis-tones'\n          data-state={datastate} onChange={this.selIntervalChange} \n        >\n          {list}\n        </select>      \n      </div>\n    )\n  }  \n\n  render(){\n    // console.log('queryPnl.render()', this.props)\n    let qry = this.props.qry\n    let qryBtnClass = (qry.collapsed ?'qryBtnSmall' :'qryBtn')\n    \n    let arrowUord = (qry.collapsed ?'dn' :'up')\n    let arrowTitle = (qry.collapsed ?'Show Query panel' :'Hide Query panel')\n    let arrowWidth = (qry.collapsed ?'1.5em' :'2em')\n\n    let selNote = null\n    let selOct = null\n    let selInt = null\n    let selScale = null\n    let selChord = null\n    if(qry.rootType !== 'fretSelect') { //optimization\n      selNote = this.drawSelNote()\n      selOct = this.drawSelOctave()\n      selInt = this.drawSelInterval()\n      selScale = this.drawSelScale()\n      selChord = this.drawSelChord()\n    }\n\n    let scaleInfoClose = this.scaleInfoClose\n    let chordInfoClose = this.chordInfoClose\n    this.scaleInfoClose = false  //reset, if set\n    this.chordInfoClose = false  \n\n    let helpManager = null\n    if(qry.helpManager === true){\n      helpManager = <HelpManager \n        fbid={qry.fbid} \n        stateChange={this.props.stateChange} \n        isOpen={this.helpManagerOpen} \n      />\n    }\n    else\n     this.helpManagerOpen = false //reset\n    \n    return (\n      <div className={'queryPnl queryPnlShow'} >\n        <table className='tbQuery' ><tbody><tr>\n        <td className='tdQryBtnsLeft'>\n           <ArrowButton upOrDn={arrowUord} width={arrowWidth} title={arrowTitle} onChange={this.btnCollapseClick}/>\n        </td><td className='tdQryContent'>\n\n          <motion.div className='queryControls' data-roottype={qry.rootType} \n            animate={ qry.collapsed === true ?'collapsed' :'default' }\n            variants={{\n              collapsed: { height:'0px', borderWidth:'0px' },\n              default: { height:'auto', borderWidth:'1px' },\n            }}\n            transition={{ ease:\"easeOut\", duration:0.3 }}\n          >\n            {selNote}\n            {selOct}\n            {selScale}\n            {selChord}\n            {selInt}\n          </motion.div>\n\n          <InfoPnl \n            qry={qry} \n            selNoteVal={this.props.selNoteVal}\n\n            scaleInfoNew={this.scaleInfoNew}\n            scaleInfoClose={scaleInfoClose}\n            \n            chordInfoNew={this.chordInfoNew}\n            chordInfoClose={chordInfoClose}\n            \n            stateChange={this.props.stateChange}\n           />\n           {helpManager}\n        </td><td className='tdQryBtnsRight'>\n            <div className={qryBtnClass +' qryBtnClear'} onClick={this.btnClearClick} title='Reset query controls'>\n              <motion.div \n                    whileTap={{ transform:'rotateZ(360deg)' }}\n                    transition={{ type:'spring', damping: 30 }}\n                  >\n                  &#8635;\n              </motion.div>\n            </div>\n            <div className={qryBtnClass +' qryBtnHelp'} onClick={this.btnHelpClick} title='Display HelpPanel' >\n              <motion.div \n                whileTap={{ transform:'rotateZ(360deg)' }}\n                transition={{ type:'spring', damping: 30 }}\n              >\n                &#63;\n              </motion.div>              \n            </div>\n            <div className={qryBtnClass +' qryBtnDupe'} onClick={this.btnDupeClick} title='Duplicate fretboard' >\n              <motion.div \n                whileTap={{ transform:'rotateZ(360deg)' }}\n                transition={{ type:'spring', damping: 30 }}\n              >\n                &#10010;\n              </motion.div>              \n            </div>\n            { qry.fbid === 0 ?null\n              :<div className={qryBtnClass +' qryBtnDel'} onClick={this.btnDelClick} title='Remove this fretboard' >\n                  <motion.div \n                    whileTap={{ transform:'rotateZ(360deg)' }}\n                    transition={{ type:'spring', damping: 30 }}\n                  >\n                    &#10000;\n                  </motion.div>\n                </div>\n            }\n        </td></tr></tbody></table>\n      </div>\n    )\n  }\n}\n\nexport default QueryPnl\n","/*\nFretboard.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - top level container for fretboard controls of GuitrJoe app\n  - store shared state for FretPnl.js and QueryPnl.js\n\n*/\n\nimport React from 'react';\n\nimport FretPnl from \"./FretPnl\";\nimport QueryPnl from \"./QueryPnl\";\nimport q from \"./guitar_lib.js\";\nimport './Fretboard.css';\n\nclass Fretboard extends React.Component{\n\n  constructor (props) {\n    console.log('Fretboard.constructor()', props)\n    super(props)\n    this.qry = null\n    //keep state private to isolate from children\n\n    let helpManager = (props.helpManager ?props.helpManager : false)\n    if(props.firstRender === true) helpManager = true\n\n    this.state = {\n\t\t\tfbid:(props.fbid ?props.fbid :0),\n\t\t\t\n      collapsed:(props.collapsed ?props.collapsed :false),\n      fretFirst:(props.fretFirst ?props.fretFirst :0),\n      fretLast:(props.fretLast ?props.fretLast :q.fretboard.fretMax),\n      fretFilter:(props.fretFilter ?props.fretFilter :[]),      //csv of fretN, if found then disable fret\n      strgFilter:(props.strgFilter ?props.strgFilter :[]),    //csv of strN, if found then hide notes\n      noteFilter:(props.noteFilter ?props.noteFilter :[]),    //notes on fetboard where button.data-selected=2; set by clicking infoPnl note\n      \n      fretBtnStyle:(props.fretBtnStyle ?props.fretBtnStyle :'NoteFirst'),    //one of: NoteFirst, IvlFirst, NoteTab, NoteAbc\n      rootType:(props.rootType ?props.rootType :''),    //one of: ['', fretRoot, fretSelect, noteSelect]\n\n      fretRoot:(props.fretRoot ?props.fretRoot :null),          //note object, set when fret clicked\n      selNoteVal:(props.selNoteVal ?props.selNoteVal :''),   //string, contains note selected in selNote control\n      octave:(props.octave ?props.octave :0), \n\n      fretSelect:(props.fretSelect ?props.fretSelect :[]),    //when rootType=fretSelect, list of frets and related data; set in fretPnl.fretClick()\n      fretSelectMatch:(props.fretSelectMatch ?props.fretSelectMatch :null),    //user selects a chord or scale to view: {type, name}\n      fretSelectMatchDisplay:(props.fretSelectMatchDisplay ?props.fretSelectMatchDisplay :'Show'),    //Show or Hide\n\n      scaleName:(props.scaleName ?props.scaleName :''),\n      scaleTriadDisplay:(props.scaleTriadDisplay ?props.scaleTriadDisplay :'Show'),    // Show or Collapse\n      scaleTriadSelected:(props.scaleTriadSelected ?props.scaleTriadSelected :null),    //null or degree of selected triad\n      \n      chordName:(props.chordName ?props.chordName :''),\n      chordInvrDisplay:(props.chordInvrDisplay ?props.chordInvrDisplay :'Show'),    // Show/Collapse\n      chordInvrSelected:(props.chordInvrSelected ?props.chordInvrSelected :null),    //user selected inversion position to display\n      chordShape:(props.chordShape ?props.chordShape :''),\n\n      ivlName:(props.ivlName ?props.ivlName :''), \n      // helpManager:(props.helpManager ?props.helpManager : false), \n      helpManager:helpManager, \n    }\n    this.duplicate = this.duplicate.bind(this)\n    this.remove = this.remove.bind(this)\n    this.reset = this.reset.bind(this)\n    this.stateChange = this.stateChange.bind(this)\n    this.strgFiltered = this.strgFiltered.bind(this)\n    this.makeQuery = this.makeQuery.bind(this)\n    this.fretSelectFind = this.fretSelectFind.bind(this)\n    this.inversionNoteByTab = this.inversionNoteByTab.bind(this)\n  }  \n  reset(){\n    this.setState({ collapsed:false })\n    this.setState({ fretSelect:[] })\n    this.setState({ fretSelectMatch:null })\n    this.setState({ fretSelectMatchDisplay:'Show' })\n    this.setState({ fretFilter:[] })\n    this.setState({ noteFilter:[] })\n    this.setState({ strgFilter:[] })\n    this.setState({ scaleName:'' })\n    this.setState({ scaleTriadDisplay:'Show' })\n    this.setState({ scaleTriadSelected:null })\n    this.setState({ chordName:'' })\n    this.setState({ chordInvrSelected:null })\n    this.setState({ chordInvrDisplay:'Show' })\n    this.setState({ chordShape:'' })\n    this.setState({ rootType:'' })\n    this.setState({ ivlName:'' })\n    this.setState({ helpManager:false })\n    this.setState({ fretRoot:null })\n    this.setState({ selNoteVal:'' })\n    this.setState({ octave:0 })\n    this.setState({ fretBtnStyle:'NoteFirst' })\n  }\n  strgFiltered( strN ){\n    strN = Number(strN)\n    return ( this.state.strgFilter.indexOf( strN ) >= 0 )\n  }\n  remove(){\n    this.props.remove( this )\n  }\n  duplicate(){\n    this.props.duplicate( this )\n  }\n\n  inversionNoteByTab( tab ){\n    if(this.state.chordInvrSelected === null) return null\n    for(let nobj of this.qry.chordInvrNotes){\n      if(nobj.tab === tab) return nobj \n    } \n    return null\n  }\n  fretSelectFind( objOrTab ){\n    let list = this.state.fretSelect,\n      fnd = -1\n\n    if(list.length === 0 || objOrTab === null) return fnd  //empty list\n\n    let  tab = (typeof objOrTab === 'string' ?objOrTab :objOrTab.tab)    //find in list\n    for(let ii = 0; ii < list.length; ii++){\n      if(tab === list[ii].tab){\n        fnd = ii\n        break\n      }\n    }\n    return fnd\n  }\n  stateChange( key, val){\n    // if(key === 'rootType')   //only manually set below; can be prop instead of state\n    //   this.setState({ rootType:val })\n    // else\n    if(key === 'collapsed'){\n      if(val === true){\n        this.setState({ fretSelectMatchDisplay: 'Collapse' })\n        this.setState({ scaleTriadDisplay: 'Collapse' })\n        this.setState({ chordInvrDisplay: 'Collapse' })\n      }\n      else{\n        this.setState({ fretSelectMatchDisplay: 'Show' })\n        this.setState({ scaleTriadDisplay: 'Show' })\n        this.setState({ chordInvrDisplay: 'Show' })\n      }\n      this.setState({ collapsed:val })\n    }else\n    if(key === 'noteFilter'){\n\n      if(val === 'clear'){  //empty list\n        this.setState({ noteFilter:[] })\n      }\n      else {    //default operation\n        let list = this.state.noteFilter.slice()\n        let idx = list.indexOf( val )\n   \n        if(idx < 0) list.push( val )\n        else list.splice( idx, 1 )\n        \n        this.setState({ noteFilter:list })\n      }\n    }else\n    if(key === 'fretBtnStyle'){\n      this.setState({ fretBtnStyle:val })\n    }else\n    if(key === 'fretFilter'){\n      let list = this.state.fretFilter.slice()\n      let idx = list.indexOf( val )\n \n      if(idx < 0) list.push( val )\n      else list.splice( idx, 1 )\n\n      this.setState({ fretFilter:list })\n    }else\n    if(key === 'fretRoot'){\n      this.setState({ fretRoot:val })\n\n      if(val === null)\n         this.setState({ rootType:'' })\n      else\n        this.setState({ rootType:'fretRoot' })\n      this.setState({ selNoteVal:'' })\n      this.setState({ fretSelect:[] })\n      // this.setState({ fretSelectMatch:null })\n    }else\n    if(key === 'selNoteVal'){\n      this.setState({ selNoteVal:val })\n\n      if(val === '')\n        this.setState({ rootType:'' })\n      else\n        this.setState({ rootType:'noteSelect' })\n      this.setState({ fretRoot:null })\n      this.setState({ fretSelect:[] })\n      // this.setState({ fretSelectMatch:null })\n    }else\n    if(key === 'fretSelect'){\n\n      if(val === null){   //disable fretSelect mode\n        this.setState({ fretSelect:[] })\n        // this.setState({ fretSelectMatch:null })\n        this.setState({ rootType:'' })\n        this.setState({ fretRoot:null })\n        this.setState({ selNoteVal:'' })\n        return\n      }\n\n      if(Array.isArray(val) === false)  //process as array due to React state handling\n        val = [val]\n\n      let list = this.state.fretSelect.slice(),\n        idx = null, root=null\n\n      for(let nobj of val){\n        idx = this.fretSelectFind( nobj )\n        if(idx < 0) {\n          if(list.length === 0){\n            nobj.ivl = q.intervals.byName( 'P1' )\n            list.push( nobj )\n          }\n          else{\n            if(root === null) root = list[0]\n            let semis = (nobj.semis -root.semis) % 12\n            if(semis < 12) semis = 12 +semis\n            nobj.ivl = q.intervals.bySemis( semis, true )\n            list.push( nobj )\n          }\n        }else \n          list.splice( idx, 1 )\n      }\n      list.sort(function (a, b) {\n        return a.ivl.semis - b.ivl.semis\n      })\n\n      this.setState({ fretSelect:list })\n      if(this.state.rootType !== 'fretSelect'){   //set rootType to fretSelect\n        this.setState({ rootType:'fretSelect' })\n        this.setState({ fretRoot:null })\n        this.setState({ selNoteVal:'' })\n      }\n    }else\n    if(key === 'fretSelectMatch'){\n      this.setState({ fretSelectMatch:val })\n    }else\n    if(key === 'fretSelectMatchDisplay'){\n      this.setState({ fretSelectMatchDisplay:val })\n    }else\n    if(key === 'strgFilter'){\n      val = Number( val )\n      let list = this.state.strgFilter.slice()\n      let idx = list.indexOf( val )\n \n      if(idx < 0) list.push( val )\n      else list.splice( idx, 1 )\n\n      this.setState({ strgFilter:list })\n    }else\n    if(key === 'fretFirst')\n      this.setState({ fretFirst:val })\n    else\n    if(key === 'fretLast')\n      this.setState({ fretLast:val })\n    else\n    if(key === 'octave')\n      this.setState({ octave:val })\n    else\n    if(key === 'scaleName'){\n      this.setState({ scaleName:val })\n    }else\n    if(key === 'scaleTriadSelected'){\n      if(val !== null) val = Number(val)\n      if(this.state.scaleTriadSelected === val)\n        this.setState({ scaleTriadSelected: null })\n      else\n        this.setState({ scaleTriadSelected: val })\n    }else\n    if(key === 'scaleTriadDisplay'){\n      this.setState({ scaleTriadDisplay:val })\n    }else\n    if(key === 'chordName'){\n      this.setState({ chordName:val })\n    }else\n    if(key === 'chordInvrSelected'){\n     if(this.state.chordInvrSelected === val)\n       val = null\n     this.setState({ chordInvrSelected:val })\n    }else\n    if(key === 'chordInvrDisplay'){\n     this.setState({ chordInvrDisplay:val })\n    }else\n    if(key === 'chordShape'){\n      if( val === null ) val = ''\n      if(this.state.chordShape === val)\n        this.setState({ chordShape:'' })\n      else\n        this.setState({ chordShape:val })\n    }else\n    if(key === 'ivlName'){\n      this.setState({ ivlName:val })\n    }else\n    if(key === 'helpManager'){\n      this.setState({ helpManager:val })\n    }else\n    if(key === 'semis')\n      this.setState({ semis:val })\n  }\n  makeQuery(){\n    let qry = {\n      fbid: this.state.fbid,\n      firstRender: this.props.firstRender,\n\n      collapsed: this.state.collapsed,\n      fretBtnStyle: this.state.fretBtnStyle,\n      fretFilter: this.state.fretFilter,\n      noteFilter: this.state.noteFilter,\n\n      rootType: this.state.rootType,\n      root: null,\n      note: (this.state.rootType === 'fretRoot' \n              ? this.state.fretRoot.notes[0] \n              : this.state.selNoteVal ), \n      octave: this.state.octave,\n      \n      scale: null,\n      scaleTriadDisplay:this.state.scaleTriadDisplay,\n      scaleTriadIvls:null,\n      scaleTriads:null,\n      scaleTriadSelected:this.state.scaleTriadSelected,\n      \n      chord:null,\n      chordInvrDisplay:this.state.chordInvrDisplay,\n      chordInvrSelected:this.state.chordInvrSelected,\n      chordInvrNotes:null,\n      chordShape:this.state.chordShape,\n      chordShapeData:null,\n      inversions:null,\n\n      ivl: null,\n\n      fretSelect: this.state.fretSelect,\n      fretSelectMatch: this.state.fretSelectMatch,\n      fretSelectMatchDisplay: this.state.fretSelectMatchDisplay,\n     \n      helpManager: this.state.helpManager,\n    }\n    if(qry.rootType === 'fretSelect'){\n      qry.root = this.state.fretSelect[0]    //note object, set in FretPnl.fretClick()\n  \n      if(qry.fretSelectMatch != null){\n        if(qry.fretSelectMatch.type === 'chord')\n          qry.fretSelectMatch.obj = q.chords.obj( qry.fretSelectMatch.note, qry.fretSelectMatch.abr )\n        else\n        if(qry.fretSelectMatch.type === 'scale')\n          qry.fretSelectMatch.obj = q.scales.obj( qry.fretSelectMatch.note, qry.fretSelectMatch.abr )\n      }\n    } \n    else{\n      if(qry.rootType === 'fretRoot')\n        qry.root = this.state.fretRoot    //note object, set in FretPnl.fretClick()\n      if(qry.rootType === 'noteSelect' && qry.note !== '' && qry.note !== 'All')\n        qry.root = q.notes.byNote( qry.note )    //note object\n\n\n      if(this.state.scaleName !== '' && qry.root){\n        qry.scale = q.scales.obj( qry.note, this.state.scaleName )\n        qry.scaleTriads = q.scales.degreeTriads( qry.note, this.state.scaleName )\n        if(qry.scaleTriadSelected != null)\n          qry.scaleTriadIvls = qry.scaleTriads.list[ qry.scaleTriadSelected -1 ].ivls\n      }\n      if(this.state.chordName !== '' && qry.root){\n        qry.chord = q.chords.obj( qry.note, this.state.chordName )\n        qry.inversions = q.chords.inversions(qry.root.note, qry.chord.abr, qry.root.octave )\n        if(qry.chordInvrSelected !== null){\n          qry.chordInvrNotes = q.chords.inversionNotes(  qry.inversions, qry.chordInvrSelected )\n        }\n        if(qry.chordShape !== ''){\n          qry.chordShapeData = q.chords.shapeTabs(qry.chordShape, qry.root.note)\n        }\n      }\n      if(this.state.ivlName !== '' && qry.root){\n        qry.ivl = q.intervals.byName( this.state.ivlName )    //this.state.ivlName == abr\n        qry.ivl.note = q.notes.calc( qry.note, qry.ivl )\n        // qry.ivl.notes = q.notes.bySemis( qry.root.semis +qry.ivl.semis )\n      }\n    }\n    this.qry = qry\n    return qry\n  }\n  render(){\n    let qry = this.makeQuery()\n    // console.log('Fretboard.render()', this.props, this.state, qry)\n    return(\n      <div className='fretboard' id={'Fretboard'+qry.fbid}>\n        <FretPnl\n          collapsed={this.state.collapsed}\n          fretFirst={this.state.fretFirst}\n          fretLast={this.state.fretLast}\n\n          selNoteVal={this.state.selNoteVal} \n\n          qry={qry}\n          stateChange={this.stateChange}\n          strgFiltered={this.strgFiltered}\n          fretSelectFind={this.fretSelectFind}\n          inversionNoteByTab={this.inversionNoteByTab}\n        />\n        <QueryPnl \n          collapsed={this.state.collapsed}\n          fretFirst={this.state.fretFirst}\n          fretLast={this.state.fretLast}\n\n          selNoteVal={this.state.selNoteVal} \n          chordName={this.state.chordName}\n          scaleName={this.state.scaleName}\n          ivlName={this.state.ivlName}\n\n          duplicate={this.duplicate}\n          qry={qry}\n          remove={this.remove}\n          reset={this.reset} \n          stateChange={this.stateChange}\n          strgFiltered={this.strgFiltered} \n         />\n      </div>\n    )\n  }\n}\n\nexport default Fretboard;\n","/*\n  About Dialog\n  - for GuitarJoe by Chris DeFreitas\n\n  requires:\n    Dialog.css\n*/\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport './Dialog.css';\n\nconst About = () => (  \n  <Popup\n    trigger={<button className=\"btnInfo\">About</button>}\n    modal\n    nested\n  >\n    {close => (\n      <div className=\"modal\">\n        <div className=\"header\"> \n          About GuitarJoe \n          <span className='hdVer'>v0.1.8 20211126</span> \n          <hr className='hrLine' /> \n        </div>\n        <div className=\"content\">\n<h3>Important: </h3>\n&nbsp;- Everything is clickable...please explore<br />\n&nbsp;- use your browser's zoom controls to enlarge/shrink the controls\n<br /><br />\n\nGuitarJoe is a free web application, no ads, no logins, no tracking.  \nThe goal is to create a tool that would make guitar theory accessible while practicing.\nI am not anything close to a musician, so\nI was going crazy taking notes and diagramming chords, scales and intervals: I needed a tool\nto facilitate my understanding so I could focus on the guitar instead of managing scraps of information.\nThis application has successfully reduced my hair loss--I hope it has the same effect on you!\n<br />\n<br />\n\n<h3>New in v0.1.8</h3>\n1. Added  a Help component<br />\n2. Now displays \"Quick Tips\" when application starts<br />\n<br />\n\n<h3>About Chord Inversions</h3>\nThe guitar provides many combinations for inversions.  The app tries to display the ideal inversion:  \nThe bass note is highlighted, then the remaining notes are selected in order, on higher strings.  \nUnfortunately, this \nresults in certain inversions having no selections on the fretboard, such as CMaj7 third position.  \n<br /><br />\n&nbsp;- Tested to work in Chrome(Windows), Firefox(Windows, Linux), and Safari(iPad, iPhone)<br />\n&nbsp;- Review documentation, updates and references in the <a href='https://github.com/ChrisDeFreitas/guitarjoe/' target='_new'>GitHub Repository</a> <br />\n&nbsp;- Send comments and bugs to <a href='mailto:ChrisDeFreitas777@gmail.com?subject=GuitarJoe:'>ChrisDeFreitas777@gmail.com</a><br />\n<br />\n\n<h3>Thanks to</h3>\n&nbsp;- Application hosted on <a href='https://github.com/ChrisDeFreitas/guitarjoe' target='_new'>Github</a>  <br />\n&nbsp;- Background image from <a href='https://www.flickr.com/photos/webtreatsetc/with/4514047664/' target='_new'>WebTreats ETC</a> <br />\n&nbsp;- Built with the <a href='https://reactjs.org/' target='_new'>React</a> Javascript library <br />\n&nbsp;- <a href='https://www.framer.com/motion/' target='_new'>Framer Motion</a> animation library for React <br />\n&nbsp;- Fuggles font by Robert Leuschke on <a href='https://fonts.google.com/?query=Robert+Leuschke/' target='_new'>Google Fonts</a> <br />\n&nbsp;- Guitar icon by monkik from the <a href='https://thenounproject.com/term/guitar/2588464/' target='_new'>Noun Project</a> <br />\n&nbsp;- Popup control from <a href='https://react-popup.elazizi.com/' target='_new'>reactjs-popup</a> <br />\n&nbsp;- <a href='https://github.com/rigobauer/react-abcjs'>react-abcjs</a>, a React component that renders notes on music staffs <br />\n<br />\n<br />\nCreated by Chris DeFreitas, BC Canada<br />\n        </div>\n        <div className=\"actions\">\n          <button\n            className=\"button\"\n            onClick={() => {\n              close()\n            }}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    )}\n  </Popup>\n)\n\nexport default About","/*\n  App.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - entrypoint for GuitrJoe app\n\n*/\nimport React, { useState, useRef } from 'react';\n\nimport './App.css';\n// import './Bgnd.css';\n// import Bgnd from \"./Bgnd.js\";\nimport Fretboard from \"./Fretboard\"\nimport About from \"./AboutDlg\"\nimport { ReactComponent as Logo } from './resources/logo.svg'\n\nfunction App(){\n\n  const [fbs, setFbs] = useState( [{id:0, state:true}] )  //one cell for each fretboard instance\n  const [newid, setNewId] = useState( null )\t\t// assigned in duplicate()\n\n  const useFirstRender = () => {    //will return false after initial call\n    const ref = useRef(true);\n    const firstRender = ref.current;\n    ref.current = false;\n    return firstRender;\n  }\n\n  function indexOfFbid( fbid ){\n    for(let ii=0; ii < fbs.length; ii++){\n      if(fbs[ii].id === fbid)\n        return ii\n    }\n    return false\n  }\n  function duplicate( fretboard ){\n    let fbid = fretboard.props.fbid,\n      list = fbs.slice(),\n      nid = list.length,\n      obj = {id:nid, state:fretboard.state},\n      idx = indexOfFbid( fbid )\n      \n    if(idx === false)\n      throw new Error(`App.duplicate() error, fbid=[${fbid}] not found.`)\n      \n    list.splice( (idx +1), 0, obj)\t\t\n    setFbs( list )\n    setNewId( nid )\n    // console.log('App.duplicate', list)\n  }\n  function remove( fretboard ){\n    let fbid = fretboard.props.fbid,\n      list = fbs.slice(),\n      idx = indexOfFbid( fbid )\n     \n    if(idx === false)\n      throw new Error(`App.remove() error, fbid=[${fbid}] not found.`)\n\n    list[ idx ].state = false\n    setNewId( null )\n    setFbs( list )\n    // console.log('App.remove()', fbid, list)\n  }\n\n  let list = [], \n    fbCount=fbs.length,\n    firstRender = useFirstRender()\n\n  for(let ii=0; ii < fbCount; ii++){\n    let el = null,\n      id = fbs[ii].id,       //use in .key to help react\n      state = fbs[ii].state  //one of: true, state object, false(a deleted fretboard)\n    if(id === newid){   //create new fretboard\n      el = <Fretboard key={id} fbid={id} duplicate={duplicate} remove={remove} \n\t\t\t\tcollapsed={state.collapsed}\n\t\t\t\tfretFirst={state.fretFirst}\n\t\t\t\tfretLast={state.fretLast}\n\t\t\t\tfretBtnText={state.fretBtnText}\n\t\t\t\t\n        fretFilter={state.fretFilter}\n\t\t\t\tstrgFltrList={state.strgFltrList}\n        noteFilter={state.noteFilter}\n        \n        fretSelect={state.fretSelect}\n        fretSelectMatch={state.fretSelectMatch}\n        fretSelectMatchDisplay={state.fretSelectMatchDisplay}\n\n\t\t\t\trootType={state.rootType}\n\t\t\t\tfretRoot={state.fretRoot}\n\t\t\t\tselNoteVal={state.selNoteVal} \n\t\t\t\toctave={state.octave} \n\n\t\t\t\tscaleName={state.scaleName}\n        scaleTriadDisplay={state.scaleTriadDisplay}\n        scaleTriadSelected={state.scaleTriadSelected}\n\n\t\t\t\tchordName={state.chordName}\n        chordInvrDisplay={state.chordInvrDisplay}\n        chordInvrSelected={state.chordInvrSelected}\n\t\t\n        ivlName={state.ivlName}\n        helpManager={state.helpManager}\n        firstRender={false}\n      />\n    }else{\n      if(state !== false){ //existing fretboard; magic of react does not overwrite old data\n        el = <Fretboard key={id} fbid={id} \n          duplicate={duplicate} \n          firstRender={firstRender}\n          remove={remove} \n        />\n      }\n    }\n    if(el != null)\n      list.push( el )\n  }\n\n  return (\n    <div className=\"App\">\n\t\t\t<header className=\"App-header header\">\n        <Logo className=\"Logo\" alt=\"Logo\" />\n        GuitarJoe v0.1.8 \n        <About />\n      </header>\n\t\t\t{list}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <App />\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals( console.log );\n"],"sourceRoot":""}