{"version":3,"sources":["Fret.jsx","guitar_lib.js","controls/react-abcjs.js","FretButton.jsx","FretPnl.jsx","controls/ArrowButton.jsx","controls/ArrowPnl.jsx","InfoPnl.jsx","resources/logo.svg","QueryPnl.jsx","Fretboard.jsx","AboutDlg.jsx","App.jsx","index.jsx"],"names":["Fret","props","keyii","key","first","fretFirst","last","fretLast","strg","fret","click","onClick","fretFiltered","btnStrFltr","className","strgFltrClick","fretbar","stringdiv","content","defaultProps","q","chords","list","name","abr","intervals","byName","str","chord","obj","root","chordName","ivls","preferFlats","indexOf","note","iname","ivl","notes","calc","push","type","fullName","fullAbbrev","inversions","octave","robj","toUpperCase","objByNote","Number","cobj","maxinversions","length","result","max","positions","rivls","s0","byNote","semis","idx","s1","cnt","pos","inc","ridx","ioctave","num","interval","isemis","iobj","bySemis","inversionLog","invrObj","includeSemis","caption","data","console","log","inversionNotes","invrPos","undefined","local_invrToNobj","invr","strgn","parent","rootfret","nobj","fretboard","fretMax","maxInversions","tmp","inversion","fnd","forEach","findByIvls","ii","strings","tabLetter","fretMin","fretMinSet","nn","init","fretMaxSet","strgN","fretInRange","strgnum","tab","objBySemis","objByTab","ltr","substr","tabByFret","strN","degName","nm","returnFirst","findNote","find","alpha","ivlOrName","rprefix","rsuffix","iprefix","newlet","newsfx","local_inc","fobj","match","nobjList","nidx","slice","comparisons","iidx","splice","toAbc","noteLength","acc","Math","floor","scales","short","degreeTriads","scale","sobj","degrees","rootivl","semis0","deg","triad","degree","degreeName","scaleName","ivlAbr","shortName","abbrevName","octaveNum","Abcjs","uniqueNumber","Date","now","random","abcNotation","parserParams","engraverParams","renderParams","abcjsObj","renderAbc","this","renderAbcNotation","style","width","id","PureComponent","responsive","viewportHorizontal","FretButton","qry","buttonClick","event","btn","target","nodeName","parentNode","stopPropagation","rootType","dataset","state","stateChange","fretSelect","fretSelectFind","selected","btnStyleChange","fretBtnStyle","btnState","btnStyle","fsmatch","fretSelectMatch","noteFilter","btncaption","minPadding","paddingtop","paddingbottom","paddingleft","paddingright","staffwidth","textboxpadding","FretPnl","fretClick","bind","fretFltrClick","cell","strn","isNaN","fretfilter","clientY","getBoundingClientRect","top","offsetHeight","strgFiltered","document","querySelector","fbid","currentTarget","fso","scaleTriadIvls","chordInvrNotes","inv","inversionNoteByTab","selNoteVal","fretSelectMatchFind","ivlFind","chordFind","scaleTriadFind","scaleFind","rootFind","noteFind","octaveFind","trArray","ss","row","frets","strgFltr","col","fretFltr","fretFilter","cls","clickfunc","ssClassName","collapsed","buttonFind","React","Component","ArrowButton","uord","upOrDn","toLowerCase","dstyle","height","astyle","fontSize","newud","onChange","title","motion","div","animate","variants","up","transform","left","dn","transition","ease","duration","ArrowPnl","isOpen","arrowUpOrDn","keyidx","arrowWidth","arrowTitle","val","open","closed","items","InfoPnl","_g","fsChordClick","fsScaleClick","infoItemClick","invrLabelClick","triadLabelClick","scaletriad","arrowUord","arrowFunc","html","lastkey","htmlCaption","htmlItems","fretSelectMatchDisplay","noblist","filter","a","lastname","ob","drawFretSelectMatches","scaleTriadDisplay","scaleTriads","scaleTriadSelected","chordInvrDisplay","invrs","pobj","chordInvrSelected","QueryPnl","btnDupeClick","btnDelClick","selLabelClick","selChordChange","btnClearClick","btnCollapseClick","selIntervalChange","selNoteChange","selOctaveChange","selScaleChange","reset","remove","duplicate","lbl","ivlName","sel","options","selectedIndex","text","value","omin","oct","datastate","chd","qryBtnClass","selNote","selOct","selInt","selScale","selChord","drawSelNote","drawSelOctave","drawSelInterval","drawSelScale","drawSelChord","borderWidth","default","whileTap","damping","Fretboard","strgFilter","fretRoot","makeQuery","setState","objOrTab","Array","isArray","sort","b","About","trigger","modal","nested","close","href","_excluded","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlns","viewBox","x","y","ref","fill","stroke","strokeWidth","d","points","ForwardRef","App","useState","fbs","setFbs","newid","setNewId","indexOfFbid","nid","Error","fbCount","el","fretBtnText","strgFltrList","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ad8f165.chunk.js","sourcesContent":["/*\n Fret.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - called by FretPnl.jsx to draw a fret for GuitarJoe app\n  - consolidates fret drawing functionality by handling HTML formulation, no content or event handling\n  - fretboard is built from TD elements\n\n*/\nimport React  from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Fret( props ){\n\n  let keyii = 0\n  function key(){ return 'Fret' +(++keyii) }\n\n  let first = props.fretFirst\n  let last = props.fretLast\n  let strg = props.strg\n  let fret = props.fret\n  let click = props.onClick\n\n  if(props.fretFiltered === true && strg >= 1){ //no onClick for filtered frets\n    click = null\n  } \n\n  let btnStrFltr = null    //string filter image for fret0\n  if(fret === 0 && strg >= 1 && strg <= 6){\n    btnStrFltr=(\n     <div key={key()} className={'btnFilter btnStrgFltr btnStrgFltr'+strg} onClick={props.strgFltrClick} data-strn={strg} data-fret={fret} >\n      <div>&diams;</div>\n     </div>\n    )\n  }\n\n  let fretbar = null      // fret bar image\n  if( strg > 0 && strg < 8\n  && fret >= first && fret <= last )\n    fretbar = <div key={key()} className='fretbar' onClick={click} data-strn={strg} data-fret={fret} ></div>\n\n  let stringdiv = null    //string image\n  if(strg >= 1 && strg <= 6)\n    stringdiv = <div key={key()} className='stringdiv' onClick={click} data-strn={strg} data-fret={fret} ></div>\n\n  return(\n    <td key={key()} \n      data-strn={strg} \n      data-fret={fret} \n      data-fretfilter={props.fretFiltered}\n      className={props.className} \n      onClick={click} \n     >\n       {btnStrFltr}\n       {props.content}\n       {fretbar}\n       {stringdiv}\n     </td>\n  )\n\n}\n\nFret.propTypes = {\n  fretFirst: PropTypes.number,\n  fretLast: PropTypes.number,\n  fretFiltered: PropTypes.bool,\n\n  strg: PropTypes.number,\n  fret: PropTypes.number,\n  \n  className: PropTypes.string,\n  content: PropTypes.object,\n  onClick: PropTypes.func,\n  strgFltrClick: PropTypes.func,\n}\nFret.defaultProps = {\n  fretFirst: 0,\n  fretLast: 14,\n  fretFiltered: false,\n\n  strg: 0,\n  fret: 0,\n\n  className: '',\n  content: null,\n  onClick: null,\n  strgFltrClick: null,\n}\n\nexport default Fret\n\n\n","/*\n  ♭ &flat; alt+?\n  \n  GuitarJoe's guitar logic\n  by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  \n   Note:\n    - all objects returned are newly constructed, so they may by modified by the caller\n    - note refers to what we usually call a note: C#\n    - note object, nobj: { strgnum:int, fret:int, note:'C#', semis:49, ... }\n    - note.semis is unique: number of semitones, Middle C = 48\n    - fret is an integer\n    - fret object, fobj: { strg:{}, fret:int, tab:'e12' }\n    - ivl is an interval object: intervals.list[n]\n    - ivls is a list of interval objects\n    - chord is an object: chords.list[n]\n    - assume: exception handling performed by caller\n\n  Todo:\n    - disambiguate chord (object) vs chordName (string)\n    - verify code consistency\n    -- verify usage of for..in (not iterable) vs for..of (iterable)\n    --- confirm for..in is used with objects, not arrays\n    - (when needed) update notes.calc() for ##/bb -- see comments in function\n  \n */\n\nvar q = {\n\n  chords: {\n    //verified against: https://www.omnicalculator.com/other/chord\n    list:[\n      {\n        name:'Major triad', abr:'maj',\n        intervals:[ 'P1', 'M3', 'P5' ]\n      },{\n        name:'Minor triad', abr:'min',\n        intervals:[ 'P1', 'm3', 'P5' ]\n      },{\n        name:'Augmented triad', abr:'aug',\n        intervals:[ 'P1', 'M3', 'A5' ]\n      },{\n        name:'Diminished triad', abr:'dim',\n        intervals:[ 'P1', 'm3', 'd5' ]\n      },{\n        name:'Dominant seventh', abr:'7',\n        intervals:[ 'P1', 'M3', 'P5', 'm7' ]\n      },{\n        name:'Major seventh', abr:'maj7',\n        intervals:[ 'P1', 'M3', 'P5', 'M7' ]\n      },{\n        name:'Minor seventh', abr:'min7',\n        intervals:[ 'P1', 'm3', 'P5', 'm7' ]\n      },{\n        name:'Major sixth', abr:'maj6',\n        intervals:[ 'P1', 'M3', 'P5', 'M6' ]\n      },{\n        name:'Minor sixth', abr:'min6',\n        intervals:[ 'P1', 'm3', 'P5', 'M6' ]\n      },{\n        name:'Suspended second', abr:'sus2',\n        intervals:[ 'P1', 'M2', 'P5' ]\n      },{\n        name:'Suspended fourth', abr:'sus4',\n        intervals:[ 'P1', 'P4', 'P5' ]\n      }\n    ],\n    byName( str ){\n      for(let chord of q.chords.list){\n        if(chord.abr === str || chord.name === str)\n          return { ...chord }\n      }\n      return null\n    },\n    obj( root, chordName ){  //return chord with notes based on root\n      let ivls = [],\n        chord = q.chords.byName( chordName )\n      if(chord === null) return null\n\n      if(typeof root === 'string')\n        root = q.intervals.byName( root )   //object returned to caller\n      if(root === null) return null\n\n      let preferFlats = ( \n          chord.name.indexOf('Minor') >= 0  \n        ||chord.name.indexOf('Diminished') >= 0 \n        || root.note.indexOf('♭') >= 0)\n      for(let iname of chord.intervals){\n        let ivl = q.intervals.byName( iname )\n        let note = q.notes.calc( root, ivl, preferFlats )\n        ivls.push({ ...ivl, note:note })\n      }\n\n      let obj = { \n        ...chord, \n        type:'chord',\n        fullName: root.note +' '+chord.name,\n        fullAbbrev: root.note +chord.abr,\n        root: root,\n        ivls:ivls\n      }\n\n      return obj\n    },\n    inversions( note, chordName, octave = 0 ){   // return an inversion object for given note and scale\n      let robj = null\n      if( typeof note === 'object' ){\n        robj = note\n        note = robj.note\n      }else{\n        note = note.toUpperCase()\n        robj = q.notes.objByNote( note )\n      }\n      if(octave === null) octave = 0\n      robj.octave = Number(octave)\n      let cobj = null\n      if( typeof chordName === 'object' ){\n        cobj = chordName\n        chordName = cobj.abr\n      }else\n        cobj = q.chords.obj(note, chordName)\n\n      let maxinversions = cobj.ivls.length\n      let result = { root:robj.note, chord:chordName, octave:octave, max:maxinversions, positions:[] }\n      let rivls = cobj.ivls\n      let positions = ['Root','First','Second','Third','Fourth','Fifth']\n\n      rivls[0].octave = robj.octave   // set correct octaves\n      let s0 = q.intervals.byNote( rivls[0].note ).semis     \n      for( let idx = 1; idx < maxinversions; idx++ ){\n        let s1 = q.intervals.byNote( rivls[idx].note ).semis\n        rivls[idx].octave = (s0 < s1 ?robj.octave :robj.octave +1)\n      }\n     \n      for( let cnt = 1; cnt <= maxinversions; cnt++){\n        let pos = positions[ cnt -1 ]\n        let obj = result.positions[ pos ] = []\n\n        for( let idx = 1; idx <= maxinversions; idx++ ){\n          let inc = 0\n          let ridx = idx +(cnt -2) \n          if(ridx >= maxinversions) {\n            ridx -= maxinversions\n            inc = 1\n          }\n          let ioctave = ( rivls[ ridx ].octave +inc )\n                    \n          obj[idx] ={ \n            num: (ridx +1),\n            note: rivls[ ridx ].note,\n            octave: ioctave,\n            interval: null,\n            abr:null,\n            semis: q.semis.calc( rivls[ ridx ].note, ioctave ),\n            // chordNote: rivls[ ridx ],\n          }\n          let isemis = (idx === 1 ?0 : obj[idx].semis -obj[1].semis)\n          let iobj = q.intervals.bySemis(isemis, true)\n          obj[idx].interval = (isemis === 0 ?'Root' :iobj.name )\n          obj[idx].abr = iobj.abr\n          // console.log( obj[idx] )\n        }\n      }\n\n      return result\n    },\n    inversionLog( invrObj, includeSemis = false ){    // write to console\n      let caption = invrObj.root +invrObj.octave +' ' +invrObj.chord +' inversions:\\n'\n      let data = ''\n      for( let pos in invrObj.positions){\n        data += ' ' +pos +': '\n        for( let obj of invrObj.positions[pos] ){\n          data += obj.interval +' - ' +obj.note +obj.octave\n            +( includeSemis === false ?' ' :'(' +obj.semis +') ' )\n        }\n        data += '\\n'       \n      }\n      console.log( caption, data)\n    },\n    inversionNotes( invrObj, invrPos ){ //return note objects for inversion\n      //assume: inversion root is always the bass note \n      //assume: notes returned must be on continguous strings\n      //assume: notes must exist within a range of frets from the bass note\n      //note: only return notes when all notes of inversion found\n      //note: some inversions will not have results because of these rules\n\n      if( invrObj.positions[invrPos] === undefined )\n        return null\n\n      function local_invrToNobj( invr, strgn, parent = null, rootfret = null ){\n        let nobj = null\n        let strg = q.fretboard.strg( strgn )\n        let note = invr.note\n        let fret = ( q.intervals.byNote( note ).semis  -q.intervals.byNote( strg.note ).semis )\n        if(fret < 0) fret += 12\n        \n        if(rootfret != null) fret = rootfret +12  //for root position: find multiple notes on string\n        \n        while( fret <= q.fretboard.fretMax ){\n          //  console.log('fret'+fret+':', {strg:strg.note, invr:note, fret:fret} )\n          if(fret <= q.fretboard.fretMax){\n            nobj = q.notes.obj( strg.num, fret, note )\n            // console.log('  search:', {iOctave:invr.octave, nOctave:nobj.octave, nobjFret:nobj.fret, parentFret:parentFret })\n            if( parent === null || (nobj.fret >= parent.fret-3 && nobj.fret <= parent.fret+3 ))  //verify proximity of frets\n            //don't verify octaves, leave it for the user to inspect\n              break;\n            else{   //keep searching string\n              fret += 12\n              nobj = null\n            }\n          }\n        }\n        return nobj\n      }\n\n      let chord = invrObj.root +invrObj.chord\n      let maxInversions = invrObj.max\n      let inversions = invrObj.positions[invrPos]\n\n      let tmp = []  //temporary store for notes found\n      let list = []     //returned with all notes found\n      for(let strgn = 6; strgn >= maxInversions; strgn--){   //because of inversion logic, root note can never be on upper strings\n\n        let rootfret = null\n        while( rootfret === null || rootfret < q.fretboard.fretMax){  //allow searching for root note multiple times\n          //calc fret position of root note\n          let invr = inversions[1]\n          let nobj = local_invrToNobj( invr, strgn, null, rootfret )\n          if(nobj === null) break\n          tmp[0] = nobj\n          tmp[0].invr = {chord:chord, inversion:invrPos, abr:invr.abr, num:1}\n          rootfret = nobj.fret    //\n\n          //calc note n\n          let fnd = true\n          for(let num = 2; num <= maxInversions; num++){\n            let parent = nobj\n            invr = inversions[ num ]\n            nobj = local_invrToNobj( invr, strgn -(num -1), parent, null )\n            if(nobj === null) {\n              fnd = false\n              break\n            }\n            tmp[ num -1 ] = nobj\n            tmp[ num -1 ].invr = {chord:chord, inversion:invrPos, abr:invr.abr, num:num}\n          }\n          if(fnd === false) continue\n\n          tmp.forEach( nobj => list.push( nobj ) )\n        }\n      }\n      if(list.length === 0) return null\n      return list\n    },\n    findByIvls( ivls ){    //find a chord by matching interval.abr\n      // return null or one of q.chords.list[]\n      for( let chord of q.chords.list ){\n        if(chord.intervals.length !== ivls.length) \n          continue\n\n        let fnd = true\n        for( let ii = 0; ii < chord.intervals.length; ii++ ){\n           if(ivls[ii].abr !== chord.intervals[ii]){\n             fnd = false\n             break\n           }\n        }\n        if( fnd === true )    // all ivls match\n          return { ...chord }\n      }\n      return null\n    },\n\n  },\n\n  fretboard: {\n    strings: [\n      {num:1, note:'E', octave:4, semis:0, tabLetter:'e' },\n      {num:2, note:'B', octave:3, semis:0, tabLetter:'B' },\n      {num:3, note:'G', octave:3, semis:0, tabLetter:'G' },\n      {num:4, note:'D', octave:3, semis:0, tabLetter:'D' },\n      {num:5, note:'A', octave:2, semis:0, tabLetter:'A' },\n      {num:6, note:'E', octave:2, semis:0, tabLetter:'E' }\n    ],\n\n    fretMin:1,\n    fretMax:14,\n    fretMinSet( nn ){   //not used as yet\n      q.fretboard.fretMin = nn\n      q.fretboard.init()\n    },\n    fretMaxSet( nn ){   //not used as yet\n      q.fretboard.fretMax = nn\n      q.fretboard.init()\n    },\n\n    init(){\n      for(let ii = 0; ii <= q.fretboard.strings.length -1; ii++){\n        let strg = q.fretboard.strings[ii]\n        q.fretboard.strings[ii].semis = q.semis.calc(strg.note, strg.octave)\n      }\n    },\n    strg( strgN ){  \n      return { ...q.fretboard.strings[ strgN -1 ] }\n    },\n    fretInRange(nobj, root, num = 3){\n      //assume: root is a notes.obj()\n      let max = (num <= 5 ?5 :num)\n      if((root.fret <= 1 && nobj.fret <= max)\n      || (root.fret > 1 && nobj.fret >= (root.fret -num)\n         && nobj.fret <= (root.fret +num)) )\n        return true\n      return null\n    },\n    obj( strg, fret ){\n      if( typeof strg === 'number')\n        strg = q.fretboard.strg( strg )\n      let semis = strg.semis +Number(fret)\n      return {\n        fret:fret, \n        // strg:Object.assign( {}, strg ), \n        strgnum:strg.num, \n        tab:(strg.tabLetter +fret),\n        semis: semis,\n        notes: q.notes.bySemis(semis)\n      }\n    },\n    objBySemis( semis ){\n      let fret = null,\n        fretMax = q.fretboard.fretMax\n      for(let strg of q.fretboard.strings){\n        if(semis >= strg.semis && semis <= (strg.semis +fretMax)){\n          fret = ( semis -strg.semis )\n          return q.fretboard.obj( strg, fret )\n        }\n      }\n      return null\n    },\n    objByTab( tab ){\n      let ltr = tab.substr(0,1),\n        fret = Number(tab.substr(1))\n      for( let strg of q.fretboard.strings ){\n        if(strg.tabLetter === ltr){\n          return q.fretboard.obj( strg, fret )\n        }\n      }\n      return null\n    },\n    tabByFret( strN, fret ){  // return example: 'e12'\n      strN = Number( strN )\n      for( let strg of q.fretboard.strings ){\n        if(strg.num === strN){\n          return ( strg.tabLetter +fret )\n        }\n      }\n      return null\n    },\n  },\n\n  intervals:{\n    list:[\n      //rules:\n      // 1. order by semitones\n      // 2. prefer perfect, major, minor first\n      // 3. prefer minor over diminished\n      // 4. prefer augmented last\n      // 5. removed (♭♭, TT) because added complexity not relevant to most uses\n      // \n      {name:'Perfect unison', abr:'P1',  semis:0, degName:'Tonic', note:'C' },\n      //{name:'Diminished second', abr:'d2', semis:0, note:'D♭♭' },\n      \n      {name:'Minor second', abr:'m2', semis:1, degName:'', note:'D♭' },\n      {name:'Augmented unison', abr:'A1', semis:1, degName:'', note:'C#' },\n      \n      {name:'Major second', abr:'M2', semis:2, degName:'Supertonic', note:'D' },\n      // {name:'Diminished third', abr:'d3', semis:2, note:'E♭♭' },\n      \n      {name:'Minor third', abr:'m3', semis:3, degName:'Mediant', note:'E♭' },\n      {name:'Augmented second', abr:'A2', semis:3, degName:'Mediant', note:'D#' },\n      \n      {name:'Major third', abr:'M3', semis:4, degName:'Mediant', note:'E' },\n      {name:'Diminished fourth', abr:'d4', semis:4, degName:'Mediant', note:'F♭' },\n\n      {name:'Perfect fourth', abr:'P4', semis:5, degName:'Subdominant', note:'F'},\n      {name:'Augmented third', abr:'A3', semis:5, degName:'Subdominant', note:'E#'},\n      \n      {name:'Diminished fifth', abr:'d5', semis:6, degName:'', note:'G♭' },\n      {name:'Augmented fourth', abr:'A4', semis:6, degName:'', note:'F#' },\n      // {name:'Tritone', abr:'TT', semis:6, note:'TT' },\n      \n      {name:'Perfect fifth', abr:'P5', semis:7, degName:'Dominant', note:'G' },\n      // {name:'Diminished sixth', abr:'d6', semis:7, note:'A♭♭' },\n      \n      {name:'Minor sixth', abr:'m6', semis:8, degName:'Submediant', note:'A♭' },\n      {name:'Augmented fifth', abr:'A5', semis:8, degName:'Submediant', note:'G#' },\n      \n      {name:'Major sixth', abr:'M6', semis:9, degName:'Submediant', note:'A' },\n      // {name:'Diminished seventh', abr:'d7', semis:9, note:'B♭♭' },\n      \n      {name:'Minor seventh', abr:'m7', semis:10, degName:'Subtonic', note:'B♭' },\n      {name:'Augmented sixth', abr:'A6', semis:10, degName:'Subtonic', note:'A#' },\n      \n      {name:'Major seventh', abr:'M7', semis:11, degName:'Leading tone', note:'B' },\n      {name:'Diminished octave', abr:'d8', semis:11, degName:'Leading tone', note:'C♭' },\n      \n      {name:'Perfect octave', abr:'P8', semis:12, degName:'Octave', note:'C' },\n      {name:'Augmented seventh', abr:'A7', semis:12, degName:'Octave', note:'B#' },\n    ],\n  \n    byNote( note ){\n      note = note.toUpperCase()\n      for(let ivl of q.intervals.list){\n        if(ivl.note === note)\n          return { ...ivl }\n      }\n      return null\n    },\n    byName( nm ){\n      let note = nm.toUpperCase()\n      for(let ivl of q.intervals.list){\n        if(ivl.abr === nm || ivl.note === note || ivl.name === nm)\n          return { ...ivl }\n      }\n      return null\n    },\n    bySemis( semis, returnFirst = false ){   //return intervals where semis match\n      semis = semis % 12\n      let list = []\n      for(let ivl of q.intervals.list){\n        if(ivl.semis > semis) break    //shortcircuit, intervals ordered by semis\n        if(ivl.semis === semis){\n          let obj = { ...ivl }\n          if(returnFirst === true) return obj\n          list.push( obj )\n        }\n      }\n      return list\n    },\n    findNote( ivls, nobj ){   //return null or ivl containing note\n      if(typeof nobj === 'string')\n        nobj = q.notes.objByNote( nobj )\n      \n      let result = ivls.find( ivl => {\n        return ( nobj.notes.indexOf( ivl.note ) >= 0 )\n      })\n\n      if( typeof result !== 'object') return null\n      return result\n    }\n  },\n\n  notes:{\n    list:['C','C#','D♭','D','D#','E♭','E','F','F#','G♭','G','G#','A♭','A','A#','B♭','B'],\n    alpha:['C','D','E','F','G','A','B'],\n\n    bySemis( semis, returnFirst = false ){\n      let list = []\n      semis = Number(semis) % 12\n      for(let ivl of q.intervals.list ){\n        if(ivl.semis === semis){\n          if(returnFirst === true) return ivl.note\n          list.push( ivl.note )\n        }\n        if(ivl.semis > semis) break //intervals ordered by semis\n      }\n      return list\n    },\n    calc( root, ivlOrName, preferFlats = false){  //iterate by semitones to get new note with correct #/b\n      // assume: preferFlats === true: return only flats\n\n      // to handle ##/bb:\n      // 1. pre-loop: resolve to standard note, get new root interval, proceed as normal: C## => D\n      // 2. post loop(???): if ivl requires ##/bb, manually resolve based on new note: D => C##\n\n      if(typeof root === 'object') root = root.note\n      let rprefix = root.substr(0,1)\n      let rsuffix = root.substr(1,2)\n      // console.log('root='+root, 'rprefix='+rprefix, 'rsuffix='+rsuffix)\n\n      let ivl = (typeof ivlOrName === 'object' ?ivlOrName : q.intervals.byName(ivlOrName))\n      let iprefix = ivl.abr.substr(0,1)    // A as in A1\n      // console.log('ivl.abr='+ivl.abr, 'iprefix='+iprefix )\n\n      // test: display matching intervals\n      // let rivl = q.intervals.byName( root )\n      // let list = q.intervals.bySemis( rivl.semis +ivl.semis )\n      // console.log( 'ivl.semis='+ivl.semis, '\\nlist=', list  )\n\n      //assume: no ## or bb used\n      let max = ivl.semis, idx = 0    //idx = q.notes.alpha.indexOf( ltr ) ::: test\n      let newlet = rprefix, newsfx = rsuffix\n      function local_inc( ltr ){\n        idx = q.notes.alpha.indexOf( ltr ) // this can probably be refactored out: notes.alpha[idx % 7] always === newlet; lookup not required\n        idx++\n        return q.notes.alpha[ idx % 7]\n      }\n      for(let ii = 0; ii < max; ii++){\n        // console.log('root='+root, 'newlet='+newlet+newsfx)\n        if(newlet === 'B' && newsfx === ''){ \n          newlet = 'C'; \n        }else\n        if(newlet === 'E' && newsfx === ''){ \n           newlet = 'F'; \n        }else\n        if(newsfx === '♭'){\n          newsfx = ''\n        }else\n        if(newsfx === '#'){\n          newsfx = ''\n          newlet = local_inc( newlet )\n        } \n        else  //newsfx === ''\n        if(iprefix === 'm' || iprefix === 'd'  || preferFlats === true){\n          newsfx = '♭'\n          newlet = local_inc( newlet )\n        }\n        else\n          newsfx = '#'\n      }\n      // console.log('root='+root, 'newlet='+newlet+newsfx)\n      return newlet+newsfx\n    },\n\n    find( strgN, note ){ //return null or list of note objects on string\n      let result = []\n      let strg = q.fretboard.strg( strgN )\n      let max = strg.semis +q.fretboard.fretMax\n      let semis = strg.semis\n      while(semis <= max){\n        let notes = q.notes.bySemis( semis )\n        if(notes.indexOf( note) >= 0){\n          let nobj = q.notes.obj(strg, semis -strg.semis, note)\n          result.push( nobj )\n          semis += 12\n        }\n        else\n          ++semis\n      }\n\n      if(result.length === 0) return null\n      return result\n    },\n    obj( strg, fret, note = null  ){\n      // console.log(111, fret, strg.num)\n      if(typeof strg === 'number')\n        strg = q.fretboard.strg( strg )\n      if(fret < 0) return null\n      let semis = strg.semis +fret\n      if(semis > (strg.semis +q.fretboard.fretMax)) return null\n\n      let octave = q.octave(semis),\n          list = q.notes.bySemis( semis )\n      return {\n        fret: fret,\n        note: (note === null ?list[0] :note),\n        notes: list,\n        octave: octave,\n        semis: semis,\n        // strg: strg, \n        strgnum: strg.num, \n        tab: strg.tabLetter +fret\n      }\n    },\n    objByNote( note /*, octave = 0 */ ){\n      let ivl = q.intervals.byNote( note ),\n          semis = ivl.semis /* +(octave * 12) */,\n          list = q.notes.bySemis( semis )\n          //, fobj = q.fretboard.objBySemis( semis )\n      return {\n        fret: null, // fobj.fret,    //null because input is not specific to a fret\n        note:note,\n        notes:list,\n        octave:null,  //octave,\n        semis:semis,\n        // strg: null, // fobj.strg,\n        strgnum: null, // fobj.strg.num,\n        tab: null // fobj.tab,\n      }\n    },\n    objByTab( tab ){\n      let fobj = q.fretboard.objByTab( tab )\n      return q.notes.obj( fobj.strg, fobj.fret )\n    },\n\n    match( ivls, nobjList ){    //return true/false if notes in nobjList contained within ivls\n      //used to match scales and chords to user selected frets\n      //assume: ivls is a list of intervals.list[n]\n      //assume: nobjList is a list of notes.obj()\n      //assume: no duplicate items allowed\n      //assume: ivls.length > nobjList.length \n      //assume: there may be ivls[n] between matched items: c,e matches c,d,e\n      //assume: matches may occur across head/tail boundaries: e,c matches c,d,e\n      //generally this is a pattern matching algorithm between two lists\n      if(nobjList.length > ivls.length) return false\n\n      let list = nobjList.slice()   //to support rotating list\n      let fnd, nidx\n\n      //break on first match of all items in nobjList\n      for(let comparisons = 1; comparisons <= list.length; comparisons++){ //max comparisons = original pattern +(list.length -1) rotations \n\n        fnd = false; nidx = 0    //reset search params\n        for(let iidx = 0; iidx < ivls.length; iidx++){    //iterate ivls\n          if(list[nidx].notes.indexOf( ivls[iidx].note ) >= 0){ //increment when list item found; allows for gaps in range\n            if(++nidx === list.length){   //point to next list item\n              // console.log( 'found:', comparisons, list, ivls )\n              fnd = true; break   \n            } \n          }\n        }\n\n        if(fnd === true) break\n        list.push( list.splice(0,1)[0] ) //rotate list by moving head to tail\n      }\n\n      return fnd\n    },\n\n    toAbc( nobj, noteLength = 8 ){\n      let result = ''\n      \n      let acc = nobj.note.substr(1)\n      if(acc === '#') result = '^'\n      else\n      if(acc === '♭') result = '_'\n      else\n      if(acc === '##') result = '^^'\n      else\n      if(acc === '♭♭') result = '__'\n\n      result += nobj.note.substr(0,1)\n       \n      if(nobj.octave === 1) result += ',,'\n      else\n      if(nobj.octave === 2) result += ','\n      else\n      //if(nobj.octave === 3) result = result\n      //else\n      if(nobj.octave === 4) result += \"'\"\n      else\n      if(nobj.octave === 5) result += \"''\"\n      else\n      if(nobj.octave === 6) result += \"''\"\n      else\n      if(nobj.octave === 7) result += \"'''\"\n\n      return result +noteLength\n    }\n  },\n\n  octave( semis ){\n    return Math.floor( semis / 12 )\n  },\n\n  scales:{\n    list:[\n      // tested with: https://www.omnicalculator.com/other/music-scale\n      //            https://www.scales-chords.com/scalenav.php\n      // rules:\n      //   keep accidentals of the same type -- all flat or sharp\n      { name:'Major', abr:'M', short:'Major',\n        // list:[ 'C', 'D', 'E', 'F', 'G', 'A', 'B'],\n        intervals:['P1','M2','M3','P4','P5','M6','M7']\n      },\n      { name:'Natural minor', abr:'m', short:'Minor', \n        // list:[ 'C', 'D', 'D#', 'F', 'G', 'A', 'A#'],\n        intervals:['P1','M2','m3','P4','P5','m6','m7']\n      },\n      { name:'Pentatonic major', abr:'P', short:'Pen.Maj', \n        // list:[ 'C', 'D', 'E', 'G', 'A'],\n        intervals:['P1','M2','M3','P5','M6']\n      },\n      { name:'Pentatonic minor', abr:'p', short:'Pen.min',\n        // list:[ 'C', 'D#', 'F', 'G', 'A#'],\n        intervals:['P1','m3','P4','P5','m7']\n      },\n      { name:'Blues heptatonic', abr:'B7', short:'Blues7',\n        intervals:['P1','M2','m3','P4','d5','M6','m7']\n      },\n      { name:'Blues hexatonic', abr:'B6', short:'Blues6',\n        // 1, ♭3, 4, ♭5, 5, ♭7\n        intervals:['P1','m3','P4','d5','P5','m7']\n      },\n      { name:'Akebono I', abr:'Ak1', short:'Akebono1',\n        intervals:['P1','M2','m3','P5','M6']   // https://ianring.com/musictheory/scales/653 {0,2,3,7,9}\n      },\n      { name:'Akebono II', abr:'Ak2', short:'Akebono2',\n        intervals:['P1','m2','M3','P5','m6']\n        // https://pianoencyclopedia.com/scales/akebono-ii/C-akebono-ii.html:  C, bD, E, G, bA \n        // also: https://ianring.com/musictheory/scales/419\n        // also: https://www.flutopedia.com/csc_5tone_12tet.htm\n      },\n      // { name:'Chromatic', abr:'Ch', short:'Chromatic',\n      //   intervals:['P1','m2','M2','m3','M3','P4','d5','P5','m6','M6','m7','M7']\n      // },\n      { name:'Double harmonic', abr:'DH', short:'Dbl.Hrm',\n        // minor second, major third, perfect fourth and fifth, minor sixth, major seventh -- https://en.wikipedia.org/wiki/Double_harmonic_scale\n        intervals:['P1','m2','M3','P4','P5','m6','M7']\n      },\n      { name:'Gypsy minor', abr:'Gm', short:'Gypsy',\n        // step pattern is W, H, +, H, H, +, H -- https://en.wikipedia.org/wiki/Hungarian_minor_scale\n        intervals:['P1','M2','m3','d5','P5','m6','M7']\n      },\n      { name:'Hungarian major', abr:'HM', short:'Hungarian',\n        // semitones: 3, 1, 2, 1, 2, 1, 2 -- https://en.wikipedia.org/wiki/Hungarian_major_scale\n        intervals:['P1','m3','M3','d5','P5','M6','m7']\n      },\n      { name:'Phrygian dominant', abr:'Pd', short:'Phrygian',\n        //1 – ♭2 – 3 – 4 – 5 – ♭6 – ♭7 – 1  https://en.wikipedia.org/wiki/Phrygian_dominant_scale\n        intervals:['P1','m2','M3','P4','P5','m6','m7']\n      },\n      { name:'Pygmy', abr:'Py', short:'Pygmy',\n        intervals:['P1','M2','m3','P5','m7']\n        // https://ianring.com/musictheory/scales/397  {0,2,3,7,8}\n        // also: https://alchetron.com/Pygmy-music#Pygmy-scale\n      }\n    ],\n    degreeTriads( root, scale ){    //build triads on all scale degrees\n      // return: {type:'Scale Degree Triads', root:root, scale:scale, abr:sobj.abr, list:[]}\n      let sobj = null\n      if(typeof root === 'object') root = root.note\n      if(typeof scale === 'object') sobj = scale\n      else sobj = q.scales.obj(root, scale)\n      if(sobj === null) return null\n\n      let result = {type:'Scale Degree Triads', root:root, scale:scale, abr:sobj.abr, list:[]}\n      const degrees = ['i','ii','iii','iv','v','vi','vii']\n\n      for(let ii = 0; ii < sobj.ivls.length; ii++){    //iterate each scale degree\n        let ivls = []\n        let rootivl = null    //to calc correct semitones for interval\n\n        for(let num = 0; num <= 2; num++ ){   //build triad\n          let iidx = ii +((+2 * num) )\n          if( iidx >= sobj.ivls.length ) iidx -= sobj.ivls.length\n          \n          let ivl = sobj.ivls[ iidx ]\n          ivl = {\n            num:    (num +1),\n            abr:    null,\n            note:   ivl.note, \n            semis0: ivl.semis, \n            semis:  ivl.semis\n          } \n          if(rootivl === null){\n            rootivl = ivl\n            rootivl.semis = 0\n          }\n          else{\n            ivl.semis -= rootivl.semis0\n            if( ivl.semis < 0 ) ivl.semis += 12\n          }\n          ivl.abr = q.intervals.bySemis( ivl.semis, true ).abr\n          ivls.push( ivl )\n        }\n      \n        let deg = degrees[ii]\n        let match = q.chords.findByIvls( ivls )\n        if(match !== null){\n          if( match.name.indexOf('Major') >= 0) deg = deg.toUpperCase()\n          if( match.name.indexOf('Diminished') >= 0) deg += '°'\n          if( match.name.indexOf('Augmented') >= 0) deg += '+'\n        }\n\n        let triad = {\n          root:   sobj.ivls[ii].note,\n          num:    (ii +1),\n          degree: deg,\n          degreeName: sobj.ivls[ii].degName,\n          name:   (match !== null ?match.name :null),\n          abr:    (match !== null ?match.abr :null),\n          ivls:   ivls\n        }\n        result.list.push( triad )\n        // console.log( triad )\n      }\n      return result\n    },\n    byName( scaleName ){\n      for(let scale of q.scales.list){\n        if(scale.name === scaleName || scale.short === scaleName || scale.abr === scaleName)\n          return { ...scale }\n      }\n      return null\n    },\n    obj( root, scaleName ){  //return scale, root and scale intervals\n      let ivls = []\n\n      if(typeof root === 'string')        //else interval object\n        root = q.intervals.byName( root )\n      if(root === null) return null\n\n      let scale = q.scales.byName( scaleName )\n      if(scale === null) return null\n\n      let preferFlats = ( scaleName.indexOf('minor') >= 0 || root.note.indexOf('♭') >= 0 )\n\n      for(let ivlAbr of scale.intervals){   //generate intervals for scale built on root\n        let ivl = q.intervals.byName( ivlAbr )\n        let note = q.notes.calc( root, ivl, preferFlats )\n        ivl = {\n          ...ivl,\n          abr: ivlAbr,    //abbreviation may differ from one assigned to scale\n          note:note,\n        }\n        ivls.push( ivl )\n      }\n\n      let obj = { \n        ...scale, \n        type:'scale',\n        fullName: root.note +' '+scale.name,\n        shortName: root.note +' '+scale.short,\n        abbrevName: root.note +scale.abr,\n        root: root,\n        ivls: ivls \n      }\n      return obj\n    }\n  },\n\n  semis:{\n    calc(note, octaveNum){   //return number of semitones\n        //assume: ocatveNum range: 0 to infinity\n        //assume: Middle C (C4) == (C,4) == (48 +0) == 48\n        //assume:            C0 == (C,0) == ( 0 +0) ==  0\n        //assume: A440     (A4) == (A,4) == (48 +9) == 57\n        let semis = (octaveNum *12)\n        semis += q.intervals.byName( note ).semis\n        return semis\n    },\n  },\n}\n\n\nq.fretboard.init()\nexport default q","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport abcjsObj from 'abcjs'\n\nclass Abcjs extends PureComponent {\n  uniqueNumber = Date.now() + Math.random()\n\n  renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams) {\n    // const res = abcjsObj.renderAbc(\n    abcjsObj.renderAbc(\n      'abcjs-result-' + this.uniqueNumber,\n      abcNotation,\n      parserParams,\n      engraverParams,\n      renderParams\n    )\n    \n//    return res\n  }\n\n  componentDidMount() {\n    const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n    this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n  }\n\n  componentDidUpdate() {\n    const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n    this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%' }}>\n        <div id={'abcjs-result-' + this.uniqueNumber} style={{ width: '100%' }} />\n      </div>\n    )\n  }\n}\n\nAbcjs.propTypes = {\n  abcNotation: PropTypes.string,\n  parserParams: PropTypes.object,\n  engraverParams: PropTypes.object,\n  renderParams: PropTypes.object,\n}\n\nAbcjs.defaultProps = {\n  abcNotation: '',\n  parserParams: {},\n  engraverParams: { responsive: 'resize' },\n  renderParams: { viewportHorizontal: true },\n}\n\nexport default Abcjs\n","/*\n  FretButton.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by FrePnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FretButton.css';\nimport q from \"./guitar_lib.js\";\nimport Abcjs from \"./controls/react-abcjs\"\n\n// sample:\n// <button className='fretButton'>\n//   <span className=spanNote >C\n//     <sub className='subOctave' >octave</sub>\n//   </span>\n//   <sub className='subInterval' >interval</sub>\n// </button>\n\n\nfunction FretButton( props ){\n  // console.log('FretButton', props)\n\n  let {root, nobj, qry} = props\n\n  let keyii = 0\n  function key(){ return 'FBtn' +(++keyii) }\n\n  function buttonClick(event){\n    let btn = event.target\n    if(btn.nodeName !== 'BUTTON'){ \n      btn = btn.parentNode      //span\n      if(btn.nodeName !== 'BUTTON') \n        btn = btn.parentNode    //span span\n    }\n    if(btn.nodeName !== 'BUTTON') return\n    event.stopPropagation()\n\n    if(['fretRoot','noteSelect'].indexOf( qry.rootType ) >= 0  \n    && ['fretRoot','noteSelect'].indexOf( btn.dataset.state ) >= 0\n    && qry.scale === null && qry.chord === null && qry.ivl === null){    //nothing to do, turn off fretRoot state\n\t    props.stateChange( 'fretRoot', null )\n    } else\n    if(qry.rootType === 'fretSelect' && btn.dataset.state === 'fretSelect'\n    && btn.dataset.tab === qry.fretSelect[0].tab){ //hide button\n        // console.log('buttonClick(): stop fretSelect')\n    \t\tprops.stateChange( 'fretSelect', null )\n        return\n    } else\n    if(qry.rootType === 'fretSelect' && props.fretSelectFind( btn.dataset.tab ) >= 0){ //this is a selected fret\n      if(qry.fretSelect.length === 2 )    //one selected fret after this hidden, change to fretRoot\n\t\t    props.stateChange( 'fretRoot', qry.fretSelect[0] )\n      else    //more than two frets selected, deselect this button\n     \t\tprops.stateChange( 'fretSelect', btn.dataset.tab)\n    }\n    else{   //toggle button selected state\n      let selected = Number( btn.dataset.selected )\n      if(selected === 0)\n        btn.dataset.selected = 1\n      else\n      if(selected === 1)\n        btn.dataset.selected = 0\n    }\n  }\n  function btnStyleChange(event){   //toggle formatting of fret button captions\n    // console.log('fretBtnStyleChange', event)\n    event.stopPropagation()\n    \n   if(qry.note === 'All'){\n      if(qry.fretBtnStyle === 'NoteTab')\n   \t  \tprops.stateChange( 'fretBtnStyle', 'NoteAbc' )\n      else\n        props.stateChange( 'fretBtnStyle', 'NoteTab' )\n    }\n    else\n    if(props.qry.fretBtnStyle === 'NoteFirst')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlFirst' )\n    else\n    if(props.qry.fretBtnStyle === 'IvlFirst')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlAbc' )\n    else\n    if(props.qry.fretBtnStyle === 'IvlAbc')\n   \t\tprops.stateChange( 'fretBtnStyle', 'IvlTab' )\n    else\n   \t\tprops.stateChange( 'fretBtnStyle', 'NoteFirst' )\n  }\n\n  let btnState = '', \n    btnStyle = qry.fretBtnStyle,\n    ivl = nobj.ivl, \n    selected = 0\n    \n    if(ivl === undefined || ivl === null){\n      switch(btnStyle){\n        case 'IvlFirst': btnStyle = 'NoteFirst'; break;\n        case 'IvlAbc': btnStyle = 'NoteAbc'; break;\n        case 'IvlTab': btnStyle = 'NoteTab'; break;\n        default: break; //for React automated testing\n      } \n    }\n\n  //assign format for root note button\n  if(root === 'ALL'){   //user selected All Notes\n    if(qry.octave !== 0 && qry.octave !== nobj.octave)\n      return null      \n    if( ['NoteAbc','NoteTab'].indexOf( qry.fretBtnStyle ) < 0 )\n      btnStyle = 'NoteAbc'\n  }else\n  if(qry.rootType === 'fretRoot'){\n    if(nobj.notes.indexOf( root.note ) >= 0  &&  nobj.semis === root.semis){\n      if(nobj.state === 'chord1')\n        btnState = 'chord0'   //defines fret root is chord root\n      else\n        btnState = qry.rootType\n    }\n  }else\n  if(qry.rootType === 'noteSelect'){\n    if(root.notes.indexOf( nobj.note ) >= 0){\n      if(qry.chord === null)\n        btnState = qry.rootType\n    }\n  }else\n  if(qry.rootType === 'fretSelect'){\n    // if(nobj.ivl.abr === 'P1' && nobj.tab === qry.fretSelect[0].tab){\n    if(nobj.tab === qry.fretSelect[0].tab){\n      btnState = qry.rootType\n    }else\n    if(nobj.fsmatch){\n      btnState = 'fretSelectMatch'\n      if(nobj.notes.indexOf( qry.fretSelectMatch.obj.ivls[0].note ) >= 0) //obj = scale || chord\n        btnState += 1   //fretSelectMatch1 == root note of chord or scale\n    }\n  }\n\n  //button.dataset.state used to apply CSS\n  if(btnState === '' && nobj.state)\n    btnState = nobj.state\n  // overrides calculated state\n  if(nobj.state === 'triad' || nobj.state === 'triad1'\n  || nobj.state === 'invr'   || nobj.state === 'invr1' )  \n    btnState = nobj.state\n  if(qry.noteFilter.indexOf( nobj.note ) >= 0)   // allow overriding roottype because user selected\n    btnState = 'noteFilter'\n\n  //format button caption\n  let btncaption = []\n  let renderParams = {    //for AbcJs\n    minPadding:5,   //doesn't work\n    paddingtop:0,\n    paddingbottom:0,\n    paddingleft:0,\n    paddingright:0,\n    //responsive: \"resize\",\n    scale:(nobj.octave <= 2 || nobj.octave >= 5 ?0.3 :0.4),\n    staffwidth:18,\n    textboxpadding:0,\n  }\n\n  let note = nobj.note\n  if( note.indexOf('♭') >= 1 )    //safari does not render ♭ properly\n    note = <span className='btnFlatNote'>{note}</span>\n  else\n    note = <span>{note}</span>\n  \n  //apply button caption style\n  if(btnStyle === 'IvlFirst'){\n    btncaption.push(\n      <span key={key()} className='spanIvl' onClick={buttonClick} >\n        <span key={key()} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='subNote' onClick={btnStyleChange}>{nobj.note}\n          <sub key={key()} className='subOctave' >{nobj.octave}</sub>\n      </sub>\n    )\n  }else\n  if(btnStyle === 'IvlAbc'){\n    btncaption.push(\n      <span key={key()} className='spanIvl' onClick={buttonClick} >\n        <span key={key()} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='ivlabc abc' onClick={btnStyleChange}\n         ><Abcjs key={key()} \n        abcNotation={'K:clef=none\\n y' +q.notes.toAbc( nobj )}\n        renderParams={renderParams} parserParams={{}} engraverParams={{}}\n      /></sub>\n    )\n  } else\n  if(btnStyle === 'IvlTab'){\n    btncaption.push(\n      <span key={key()} className='spanIvl' onClick={buttonClick} >\n        <span key={key()} onClick={buttonClick} >{ivl.abr.substr(0,1)}</span>\n        {ivl.abr.substr(1)}\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='ivltab tab' onClick={btnStyleChange}\n        >{nobj.tab}</sub>\n    )\n  }else\n  if(btnStyle === 'NoteTab'){      \n    btncaption.push(\n      <span key={key()} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={key()} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='notetab tab' onClick={btnStyleChange}\n        >{nobj.tab}</sub>\n    )\n  }else\n  if(btnStyle === 'NoteAbc'){\n    btncaption.push(\n      <span key={key()} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={key()} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    btncaption.push(\n      <sub key={key()} className='abc' onClick={btnStyleChange}\n         ><Abcjs key={key()} \n        abcNotation={'K:clef=none\\n y' +q.notes.toAbc( nobj )}\n        renderParams={renderParams} parserParams={{}} engraverParams={{}}\n      /></sub>\n    )\n  } \n  else {  // (btnStyle === 'NoteFirst')\n    btncaption.push(\n      <span key={key()} className='spanNote'  onClick={buttonClick} >{note}\n          <sub key={key()} className='subOctave' onClick={buttonClick} >{nobj.octave}</sub>\n      </span>\n    )\n    if(nobj.ivl){\n      btncaption.push(\n        <sub key={key()} className='subInterval' onClick={btnStyleChange} >{ivl.abr}</sub>\n      )\n    }\n  }\n \n  return (\n    <button key={key()} className='fretButton'  onClick={buttonClick}\n      data-strn={nobj.strgnum} data-fret={nobj.fret}  data-tab={nobj.tab} \n      data-state={btnState} data-selected={selected}\n    >\n      {btncaption}\n    </button>\n  )  \n}\n\nFretButton.propTypes = {\n  root: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  nobj: PropTypes.object,\n  qry:  PropTypes.object,\n  fretSelectFind: PropTypes.func,\n  stateChange: PropTypes.func,\n}\n\nexport default FretButton\n","/*\n  FretPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - manage activation of fretboard controls for GuitarJoe app\n\n*/\n\nimport React from 'react'\nimport { motion } from \"framer-motion\"\n\nimport './FretPnl.css';\nimport Fret from './Fret.jsx';\nimport FretButton from './FretButton.jsx';\nimport q from \"./guitar_lib.js\";\n\nclass FretPnl extends React.Component{\n\n  constructor (props) {\n    super(props)\n    this.fretClick = this.fretClick.bind(this)\n    this.fretFltrClick = this.fretFltrClick.bind(this)\n    this.strgFltrClick = this.strgFltrClick.bind(this)\n  }\n  keyii = 0\n  key(){ return 'FPnl' +(++this.keyii) }\n\n  fretClick( event ){\n    let qry = this.props.qry,\n      cell = event.target,\n      strN = Number(cell.dataset.strn), \n      fret = Number(cell.dataset.fret)\n\n    if( isNaN(strN) ){\n      console.log('FretPnl.fretClick() error, bad caller:', cell)\n      return \n    }\n    event.stopPropagation()\n    if(cell.dataset.fretfilter === \"true\")\n      return\n\n    if(strN === 7){\n      strN = 6\n    }else\n    if(strN !== 1 && cell.nodeName === 'TD'){ //calc string to use\n      let  cy = event.clientY,\n        abs = cell.getBoundingClientRect(),\n        top = abs.top,\n        mid = top +(cell.offsetHeight  /2)\n\n      if(cy < mid) strN--\n    }\n\n    if(this.props.strgFiltered( strN ) === true)\n      return\n\n    // console.log('fretPnl.fretClick:', strN, fret, cell.className)\n    let note = q.notes.obj( strN, fret )\n    let btn = document.querySelector( '#Fretboard' +qry.fbid +' .fretButton[data-tab=' +note.tab +']')\n    if(btn !== null){\n      // Note: ignore because they should click the button\n      // however, this works:\n      //   event.target = btn\n      //   btn.click( event )\n      return\n    } else\n    if(['','noteSelect'].indexOf(qry.rootType) >= 0){\n\t\t  this.props.stateChange( 'fretRoot', note )\n    }else\n    if(qry.rootType === 'fretRoot'){\n\t\t  this.props.stateChange( 'fretSelect', [qry.root, note] )\n    }else\n    if(qry.rootType === 'fretSelect'){\n\t    this.props.stateChange( 'fretSelect', note )\n    }\n  }\n  fretFltrClick( event ){ //toggle state for frets\n    let //qry = this.props.qry,\n      btn = event.currentTarget,\n      fret = Number( btn.dataset.fret )\n\n    event.stopPropagation()\n    // console.log( 'fretFltrClick:', fret, qry.fretFilter )\n    this.props.stateChange( 'fretFilter', fret )\n  }\n  strgFltrClick( event ){\n    let btn = event.currentTarget,\n      strN = btn.dataset.strn\n    this.props.stateChange( 'strgFilter', strN )\n    event.stopPropagation()\n  }  \n  \n  rootFind( nobj ){    //select fret = selected fret\n    let qry = this.props.qry\n    if(qry.rootType !== 'fretRoot') return null\n\n    if(nobj.tab === qry.root.tab){\n      return <FretButton key={this.key()}\n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    }\n    return null\n  }\n  noteFind( nobj ){    //select all frets with note = selNoteVal\n    let qry = this.props.qry\n    if(qry.rootType !== 'noteSelect') return null\n\n    let idx = nobj.notes.indexOf(qry.note)\n    if(qry.note === '' ||  idx >= 0){\n      if(qry.octave === 0 || qry.octave === nobj.octave){\n        if(qry.note !== '')\n          nobj.note = qry.note\n        // return qq.button( nobj, qry.root  )\n        return <FretButton key={this.key()} \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n  }  }\n    return null\n  }\n  fretSelectFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.rootType !== 'fretSelect') return null\n    if(qry.fretSelect.length === 0) return null\n\n    for(let fso of qry.fretSelect){\n      if(nobj.tab === fso.tab){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = fso.ivl\n          nobj.note = fso.note\n          // return qq.button( nobj, qry.root )\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  fretSelectMatchFind( nobj ){\n    let qry = this.props.qry\n\n    if(qry.rootType !== 'fretSelect') return null\n    if(qry.fretSelectMatch === null) return null\n\n    for(let ivl of qry.fretSelectMatch.obj.ivls){\n      if(nobj.notes.indexOf( ivl.note ) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          if(this.props.fretSelectFind( nobj.tab ) < 0)\n            nobj.fsmatch = true\n          // return qq.button( nobj, qry.root )\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  scaleTriadFind( nobj ){\n    let qry = this.props.qry\n    if(qry.scale === null) return null\n    if(qry.scaleTriadIvls === null) return null\n\n    let ivl = q.intervals.findNote( qry.scaleTriadIvls, nobj )\n    if( ivl === null ) return null\n\n    nobj.note = ivl.note\n    nobj.ivl = ivl\n    nobj.state = 'triad' +(ivl.num === 1 ?1 :'')\n    return <FretButton key={this.key()} \n              root={qry.root} nobj={nobj}  qry={qry} \n              fretSelectFind={this.props.fretSelectFind} \n              stateChange={this.props.stateChange} \n           />\n  }\n  octaveFind( nobj ){  //find notes for selected octave\n    let qry = this.props.qry\n    if(qry.note !== '') return\n\n    if(qry.octave === nobj.octave){\n      nobj.ivl = qry.ivl\n      return <FretButton key={this.key()} \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    }\n    return null\n  }\n  scaleFind( nobj ){\n    let qry = this.props.qry\n    if(qry.scale === null) return null\n\n    if(qry.rootType === 'fretRoot'){    //exclude frets\n      if(q.fretboard.fretInRange(nobj, qry.root) !== true)\n        return null\n    }\n    for(let ivl of qry.scale.ivls){\n      if( nobj.notes.indexOf(ivl.note) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          // return qq.button( nobj, qry.root )\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  chordFind( nobj ){\n    let qry = this.props.qry\n    if(qry.chord === null) return null\n\n    if(qry.chordInvrNotes !== null){    //inversion format take precedence\n      let inv = this.props.inversionNoteByTab( nobj.tab )\n      if(inv !== null){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.note = inv.note\n          nobj.ivl = inv.invr\n          nobj.state = 'invr' +(inv.invr.num === 1 ?1 :'')\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    if(qry.rootType === 'fretRoot'){    //exclude frets out of range\n      if(q.fretboard.fretInRange(nobj, qry.root) !== true)\n        return null\n    }\n    for(let ivl of qry.chord.ivls){\n      if( nobj.notes.indexOf(ivl.note) >= 0){\n        if(qry.octave === 0 || qry.octave === nobj.octave){\n          nobj.ivl = ivl\n          nobj.note = ivl.note\n          nobj.state = 'chord' +(ivl.abr === 'P1' ?'1' :'')\n          return <FretButton key={this.key()} \n                    root={qry.root} nobj={nobj}  qry={qry} \n                    fretSelectFind={this.props.fretSelectFind} \n                    stateChange={this.props.stateChange} \n                  />\n        }\n      }\n    }\n    return null\n  }\n  ivlFind( nobj ){     //select frets matching interval\n    let qry = this.props.qry\n    if(qry.ivl === null) return null\n    \n    let btn = null\n    if( (qry.rootType === 'fretRoot' && nobj.tab === qry.root.tab)\n    ||  (qry.rootType === 'noteSelect' && nobj.notes.indexOf(qry.note) >= 0) ){ //this is the root note object\n      btn = 'root'\n    } else\n    if(qry.rootType === 'fretRoot' && q.fretboard.fretInRange(nobj, qry.root, 4) === true){\n      if( nobj.notes.indexOf(qry.ivl.note) >= 0 )\n        btn = true\n    }else\n    if(qry.rootType === 'noteSelect' && nobj.notes.indexOf(qry.ivl.note) >= 0){\n      btn = true\n    }\n\n    if(btn === 'root'){\n      nobj.ivl = q.intervals.byName('P1')\n      nobj.note = qry.note\n      // btn = qq.button( nobj, qry.root  )\n    }else\n    if(btn === true){\n      if(qry.octave === 0 || qry.octave === nobj.octave){\n        nobj.ivl = qry.ivl\n        nobj.note = qry.ivl.note\n        nobj.state = 'interval'   //new, allow for color coding of intervals\n        // btn =  qq.button( nobj, qry.root  )\n      }\n      else\n        btn = null\n    }\n    if(btn != null)\n      return <FretButton key={this.key()} \n                root={qry.root} nobj={nobj}  qry={qry} \n                fretSelectFind={this.props.fretSelectFind} \n                stateChange={this.props.stateChange} \n              />\n    return null\n  }\n\n  buttonFind( nobj ){\n    let qry = this.props.qry\n    let btn = null\n\n    // ordering is critical because it determines which buttons are on top\n    // all modes respect selOctave filter\n\n    //All notes mode\n    if(qry.rootType === 'noteSelect' && this.props.selNoteVal === 'All')\n      btn = <FretButton key={this.key()} \n              root={'ALL'} nobj={nobj}  qry={qry} \n              fretSelectFind={this.props.fretSelectFind} \n              stateChange={this.props.stateChange} \n            />\n    //fretSelect mode\n    if(btn === null) btn = this.fretSelectMatchFind( nobj )\n    if(btn === null) btn = this.fretSelectFind( nobj )\n\n    //noteSelect mode\n    if(btn === null) btn = this.ivlFind( nobj )\n    if(btn === null) btn = this.chordFind( nobj )\n    if(btn === null) btn = this.scaleTriadFind( nobj )\n    if(btn === null) btn = this.scaleFind( nobj )\n    if(btn === null){\n      if(qry.rootType === 'fretRoot')\n        btn = this.rootFind( nobj )  //only select the fret clicked\n      else\n      if(qry.rootType === 'noteSelect')\n        btn = this.noteFind( nobj )  //select all frets with note = selNoteVal\n    }\n    if(btn === null) btn = this.octaveFind( nobj )\n    return btn\n  }\n\n  render(){\n    // console.log('fretPnl.render()', this.props)\n    let qry = this.props.qry\n\n    //make table's tr and td\n    let trArray = [],\n      fretMax = q.fretboard.fretMax,    \n      first = this.props.fretFirst,\n      // last = this.props.fretLast,\n      ss = ''\n    for (let row = 1; row <= 9; row++) {\n      let frets = []\n      let strN = row -1\n      let strgFltr = this.props.strgFiltered( strN )\n\n      for (let col = 0; col <= fretMax +1; col++) {\n        let \n          fretFltr = (qry.fretFilter.indexOf( col ) >= 0),\n          cls = '', \n          clickfunc = this.fretClick,\n          content = null\n\n        if(row === 1){  //top border, with fret numbers, fret filtering\n          let ss = (col === first || col === (fretMax +1) ?' ' :col)\n          let ssClassName = 'fretFilterDiv'\n          if( qry.collapsed === true){\n            ss = ''\n            if( [5,7,9,12].indexOf(col) >= 0 )\n              ssClassName = 'fretFilterCollapsed'\n          }\n          cls = (col === (fretMax +1) ?'borderRight tdBorder'+col :'tdBorder'+col)\n          clickfunc = this.fretFltrClick\n/*\nthis animation causes other anims to run on every re-draw\n              animate={ qry.collapsed === true ?'collapsed' :'default' }\n              variants={{\n                collapsed: { color:'#0000', textShadow:'1px 1px 5px #0000' },\n                default: { color:'#ffffff80', textShadow:'1px 1px 5px #0008' },\n              }}\n              transition={{ ease:\"easeOut\", duration:0.4 }}\n*/          \n          content = <div key={this.key()} data-fret={col} className={ssClassName} >{ss}</div>\n        }else\n        if(row === 9){  //bottom frame\n            cls = (col === (fretMax +1)\n              ? 'borderRight tdBottom col'+col    //right bottom corner frame\n              : 'tdBottom col'+col\n            )\n        }\n        else{   // generate frets with right and left borders\n          cls = (col === fretMax +1\n            ?'borderRight col'+col      // right border\n            :'fret fret'+col)\n\n          //process fret button\n          let nobj = null\n          if( strN <= 6\n           && fretFltr === false    //no filter applied to fret\n           && strgFltr === false    //no filter applied to string\n           && col >= this.props.fretFirst \n           && col <= this.props.fretLast){         //filter by fretboard range\n            nobj = q.notes.obj( strN, col )\n            content = this.buttonFind( nobj )\n          }\n        }\n        \n        frets.push(\n          <Fret key={this.key()}\n            fretFirst={this.props.fretFirst}\n            fretLast={this.props.fretLast}\n            fretFiltered={fretFltr} \n\n            strg={strN} \n            fret={col} \n\n            className={cls} \n            content={content}\n            onClick={clickfunc} \n            strgFltrClick={this.strgFltrClick} \n          />\n        )\n      }\n\n      if(row === 1) \n        ss = 'frame frameTop'\n      else\n      if(row === 8) \n        ss = 'borderBottom'\n      else\n      if(row === 9) \n        ss = 'frame frameBottom'\n      else{\n        ss = 'strg strg' +(row -1)\n      }\n      trArray.push( <tr key={row} className={ss} data-fltr={strgFltr}>{frets}</tr> )\n    }\n    return (\n      <div className='fretPnlContainer'>\n        <table className='fretPnl'><tbody>\n          {trArray}\n        </tbody></table>\n      </div>\n    )\n  }\n}\n\nexport default FretPnl\n","/*\n  ArrowButton.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - an arrow in a button frame pointing up or down used to expand/collapse controls\n  - used by to expand and collpase controls in GuitrJoe app and ArrowPnl.jsx\n*/\nimport React  from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from \"framer-motion\"\nimport './ArrowButton.css';\n\nfunction ArrowButton( props ){\n\n  //handle initial state\n  let uord =  (props.upOrDn === '' ?'dn' :props.upOrDn.toLowerCase())\n  // console.log('ArrowButton function call', uord, props)\n\n  function onClick(){\n    let newud = (uord === 'up' ?'dn' :'up')\n    // console.log('ArrowButton.onClick', newud )\n    if(props.onChange !== null)\n      props.onChange( newud )\n  }\n\n  let className = 'ArrowBtn ' +(uord === 'up' ?'ArrowBtnUp' :'ArrowBtnDn')\n  \n  let width = (props.width === '' ? '1em' :props.width)\n  let dstyle = { height:width, width:width}\n  let astyle = { fontSize:'calc( '+width+' * 0.8 )' }\n\n  return (\n    <div className={className} style={dstyle} onClick={onClick} title={props.title} \n    > \n      <motion.div style={astyle} \n        animate={uord}\n        variants={{\n          up: { transform:'rotateZ(-90deg)', left:'-1px' },\n          dn: { transform:'rotateZ(90deg)',  left:'1px' },\n        }}\n        transition={{ ease:\"easeOut\", duration:0.4 }}\n      >\n      &#10148;\n      </motion.div>\n    </div>\n  )  \n\n}\n\nArrowButton.propTypes = {\n  ArrowUpOrDn: PropTypes.string,\n  title: PropTypes.string,\n  width: PropTypes.string,\n  onChange: PropTypes.func,\n}\nArrowButton.defaultProps = {\n  upOrDn: 'up',     //up or dn\n  title: 'Click to collapse',\n  onChange: null,\n  width:'1em',\n}\n\nexport default ArrowButton\n\n","/*\n  ArrowPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by QueryPnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from \"framer-motion\"\n\nimport ArrowButton from './ArrowButton'\nimport   './ArrowPnl.css'\n\nfunction ArrowPnl( props ){\n\n  let isOpen = ( props.arrowUpOrDn === 'up' )\n  let keyidx = 0\n\n  function key(){ return 'ArrowPanel' +( ++keyidx ) }\n  function onChange(){\n    let val = !isOpen\n    if(props.onChange) props.onChange( val )\n  }\n\n  return (\n    <div key={key()} className='ArrowPnl' >\n      <div key={key()} className='ArrowPnlCaption' >\n        <ArrowButton key={key()} \n          upOrDn={isOpen === true ?'up' :'dn'} \n          width={props.arrowWidth}\n          title={props.arrowTitle} \n          onChange={onChange}\n        />\n        {props.caption}\n      </div>\n      <motion.div \n        animate={isOpen ? \"open\" : \"closed\"}\n        variants={{\n          open: { height: 'auto' },\n          closed: { height: '0px' },\n        }}\n        transition={{ ease:\"easeOut\", duration:0.3 }}\n        \n        key={key()} \n        className='ArrowPnlItems' \n       >\n        {props.items}\n      </motion.div>\n    </div>\n  )\n\n}\n\nArrowPnl.propTypes = {\n  caption: PropTypes.array,   //array of jsx\n  items: PropTypes.array,     //array of jsx\n\n  arrowUpOrDn: PropTypes.string,\n  arrowTitle: PropTypes.string,\n  arrowWidth: PropTypes.string,\n\n  onChange: PropTypes.func,\n}\nArrowPnl.defaultProps = {\n  caption: [<span>'ArrowPnl Caption'</span>],\n  items: null,\n  \n  arrowUpOrDn: 'up',     //up or dn\n  arrowTitle: 'Click to collapse',\n  arrowWidth:'1em',\n\n  onChange: null,\n}\n\nexport default ArrowPnl\n","/*\n  InfoPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - used by QueryPnl.jsx of GuitrJoe app\n\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ArrowPnl from './controls/ArrowPnl'\nimport q from \"./guitar_lib.js\";\n\nfunction InfoPnl( props ){\n  let {qry} = props\n\n  function fsChordClick( event ){\n    let btn = event.target\n    // console.log('fsChordClick', btn.dataset.note, btn.dataset.abr)\n\n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else{   //default operation\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === btn.dataset.note && qry.fretSelectMatch.abr === btn.dataset.abr)    //turn off selected match\n        props.stateChange( 'fretSelectMatch', null )\n      else\n        props.stateChange( 'fretSelectMatch', {type:'chord', note:btn.dataset.note, abr:btn.dataset.abr} )\n    }\n  }\n  function fsScaleClick( event ){\n    let btn = event.target\n    // console.log('fsScaleClick', btn.dataset.note, btn.dataset.abr)\n\n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )   //turn off selected match\n      props.stateChange( 'noteFilter', 'clear' )\n    }\n    else{   //default operation\n      if(qry.fretSelectMatch != null \n      && qry.fretSelectMatch.note === btn.dataset.note && qry.fretSelectMatch.abr === btn.dataset.abr)\n        props.stateChange( 'fretSelectMatch', null )   //turn off selected match\n      else\n        props.stateChange( 'fretSelectMatch', {type:'scale', note:btn.dataset.note, abr:btn.dataset.abr} )\n    }\n  }\n  function infoItemClick(event){\n    event.stopPropagation()\n\n    let btn = event.target   \n    if(btn.dataset.selected === 'label'){    //user clicked the label\n      props.stateChange( 'fretSelectMatch', null )\n      props.stateChange( 'chordInvrSelected', null )\n      props.stateChange( 'noteFilter', 'clear' )\n      props.stateChange( 'scaleTriadSelected', null )\n    }\n    else {   //default noteFilter: highlight all FretButtons with selected note\n      if(btn.className !== 'ivl')\n        btn = btn.parentNode\n      \n      let note = btn.dataset.note     \n      if(typeof note === 'string')\n        props.stateChange( 'noteFilter', note )\n    }\n  }\n  function invrLabelClick(event){\n    event.stopPropagation()\n    let btn = event.target   \n    props.stateChange( 'chordInvrSelected', btn.dataset.invr )\n  }\n  function triadLabelClick(event){\n    event.stopPropagation()\n    let btn = event.target   \n    props.stateChange( 'scaleTriadSelected', btn.dataset.scaletriad )\n  }\n  \n  function toggleFretSelectMatchDisplay(){\n    let ss = (qry.fretSelectMatchDisplay === 'Show' ?'Hide' :'Show')\n    props.stateChange( 'fretSelectMatchDisplay', ss)\n  }\n  function toggleScaleTriadDisplay(){\n    let ss = (qry.scaleTriadDisplay === 'Show' ?'Hide' :'Show')\n    props.stateChange( 'scaleTriadDisplay', ss)\n  }\n  function toggleChordInvrDisplay(){\n    let ss = (qry.chordInvrDisplay === 'Show' ?'Hide' :'Show')\n    props.stateChange( 'chordInvrDisplay', ss)\n  }\n\n  function drawFretSelectMatches( html, key ){    //push matching chords and scales onto html[]\n    let selected = 0\n    \n    if(qry.fretSelect.length < 2) return null  \n\n    let noblist = qry.fretSelect.slice()\n    let last = null\n    noblist = noblist.filter(function(a){   //filter duplicate notes\n      if(last != null && last.notes.indexOf( a.note ) >= 0) return null\n      last = a\n      return a\n    })\n\n    //test chords for matching notes\n    let list = []\n    let lastkey = key\n    let lastname = null\n    last = null\n    for(let chord of q.chords.list){    \n\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        let ivls = q.chords.obj( iobj.note, chord.name).ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true)\n         list.push( {note:iobj.note, chord:chord} )\n      }\n    }\n    for(let ob of list){    //write matching chords\n      let chord = ob.chord\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={fsChordClick}\n        >Matching chords:&nbsp;</span> )\n      }\n\n      selected = 0\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === chord.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== chord.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = chord.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={fsChordClick} title={ob.note +' ' +chord.name}\n        data-note={ob.note} data-abr={chord.abr} data-selected={selected} \n        >&#8200;{ob.note}&#8239;{chord.abr}&#8200;</span> \n      )\n    }\n\n    //test scales for matching notes\n    list = []\n    lastkey = key\n    lastname = null\n    last = null\n    for(let scale of q.scales.list){   //==> disabled because most scales are not necessary for this use\n    //for(let scaleName of ['Major','Minor','Pen.Maj','Pen.min','Blues7','Blues6' /*,'Dbl.Hrm'*/]){\n\n      //can optimize by caching related minor scales when major found: \n      //  Major:Nat.min; Pent Maj:Pen.min,Blues7,Blues6; Dbl.Hrm:Gypsy\n\n      for(let iobj of q.intervals.list){  //iterate notes\n        if(last != null && last.semis === iobj.semis) continue\n        if(iobj.semis === 12) continue    //skip octave\n        last = iobj\n\n        let ivls = q.scales.obj( iobj.note, scale.name).ivls    \n        // let scale = q.scales.obj( iobj.note, scaleName )\n        // let ivls = scale.ivls    \n  \t\t  let result = q.notes.match( ivls, noblist)\n\n       if(result === true) \n         list.push( {note:iobj.note, scale:scale} )\n      }\n    }\n\n    for(let ob of list){    //write matching scales\n      selected = 0\n      let scale = ob.scale\n\n      if(lastkey === key){\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        html.push( <span key={++key} className='propName'\n          data-selected='label' onClick={fsScaleClick}\n        >Matching scales:&nbsp;</span> )\n      }\n\n      if(qry.fretSelectMatch != null\n      && qry.fretSelectMatch.note === ob.note\n      && qry.fretSelectMatch.abr === scale.abr) selected = 'fretSelectMatch'\n\n      if(lastname !== null && lastname !== scale.name)\n        html.push( <i key={++key} > &mdash; </i> )\n      lastname = scale.name\n\n      html.push( \n        <span key={++key} className='ivl' onClick={fsScaleClick} title={ob.note +' ' +scale.name}\n        data-note={ob.note} data-abr={scale.abr} data-selected={selected} \n        > &#8200;{ob.note}&#8239;{scale.short}&#8200;</span> \n      )\n    }\n\n    return key\n  }\n\n\n  let selected = 0, html = [], key=0, lastkey=null\n  let arrowUord, arrowTitle, arrowFunc, htmlCaption = [], htmlItems = []    //for ArrowPnl\n\n  if(qry.rootType === 'fretSelect'){    \n      arrowUord = (qry.fretSelectMatchDisplay === 'Show' ?'up' :'dn')\n      arrowTitle = 'Show/hide matching chords and scales'\n      arrowFunc = toggleFretSelectMatchDisplay\n      htmlCaption = []\n      htmlItems = []\n\n      htmlCaption.push( \n        <span key={++key} className='propName' onClick={infoItemClick} data-selected='label'>{\n          'Fret select: '\n        }</span> \n      )\n\n      let last = null\n      qry.fretSelect.forEach( nobj => {\n        if(last && last.note === nobj.note) return\n\n        if(qry.noteFilter.indexOf( nobj.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        htmlCaption.push( \n          <span key={++key} className='ivl' onClick={infoItemClick} data-note={nobj.note} data-selected={selected} >\n             &nbsp;{nobj.note} <sub>{nobj.ivl.abr}</sub> \n          </span> \n        )\n        last = nobj\n      })\n\n      if(qry.fretSelectMatch === null){    //no selected chord or scale to draw\n          htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          htmlItems.push( <span key={++key} className='propName'\n           data-selected='label' onClick={infoItemClick}\n          > &nbsp;</span> )\n      }\n      else{    //draw user select chord or scale match\n        htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        htmlItems.push( \n          <span key={++key} className='propName' onClick={infoItemClick} data-selected='label' >\n            Selected, {qry.fretSelectMatch.obj.fullName}:&nbsp;\n          </span> \n        )\n\n        for(let ivl of qry.fretSelectMatch.obj.ivls){   \n          if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n          else selected = 0\n\n          htmlItems.push( \n            <span key={++key} className='ivl' onClick={infoItemClick} data-note={ivl.note} data-selected={selected} >\n              &nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n            </span> \n          )\n        }\n\n      }\n      key = drawFretSelectMatches( htmlItems, key )\n\n      html.push(<ArrowPnl \n        key={++key} \n        caption={htmlCaption}\n        items={htmlItems}\n\n        arrowUpOrDn={arrowUord} \n        arrowWidth='1em' \n        arrowTitle={arrowTitle} \n\n        onChange={arrowFunc}\n      />)\n  } else\n  if(qry.rootType === 'noteSelect' && props.selNoteVal === 'All'){    //special case\n    html.push( <span key={++key} className='propName'\n       data-selected='label' onClick={infoItemClick}\n      >{'All Notes'}</span> )\n\n    if(qry.octave !== 0){\n      html.push( <span key={++key} className='ivl'>{': Octave '}{qry.octave} </span> )\n    }\n  }\n  else{   //draw scale, chord and interval labels and notes\n    lastkey = key\n\n    if(qry.scale !== null){\n      arrowUord = (qry.scaleTriadDisplay === 'Show' ?'up' :'dn')\n      arrowTitle = 'Show/hide scale degree triads'\n      arrowFunc = toggleScaleTriadDisplay\n      htmlCaption = []\n      htmlItems = []\n\n      htmlCaption.push( \n        <span key={++key} className='propName' onClick={infoItemClick} data-selected='label' >\n          {qry.root.note +' ' +qry.scale.name +': '}\n        </span> \n      )\n      qry.scale.ivls.forEach( ivl => {\n        if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n        \n        htmlCaption.push(\n          <span key={++key} className='ivl' onClick={infoItemClick} \n            data-note={ivl.note} data-selected={selected}\n          >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n          </span> \n        )\n      })\n\n      // if(qry.scaleTriads !== null && qry.scaleTriadDisplay === 'Show'){   // draw scale degree triads\n      if( qry.scaleTriads !== null ){   // draw scale degree triads\n        htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n        htmlItems.push( \n          <span key={++key} className='propName' onClick={infoItemClick} data-selected='label' >{ \n            qry.root.note +' ' +qry.scale.abr +' Scale Degree Triads:'\n          }</span> \n        )\n\n        qry.scaleTriads.list.forEach( triad => {\n          htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          \n          if( qry.scaleTriadSelected === triad.num ) selected = 'triad'\n          else selected = 0\n          let ss = (triad.abr !== null ?triad.abr :'')\n          \n          htmlItems.push( \n            <span key={++key} className='ivl' onClick={triadLabelClick}\n             data-scaletriad={triad.num} data-selected={selected} >{\n              triad.degree +'. ' + triad.root +ss +': '\n            }</span> \n          )\n\n          triad.ivls.forEach( ivl => {\n            if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            htmlItems.push( \n              <span key={++key} className='ivl' onClick={infoItemClick}\n               data-note={ivl.note} data-selected={selected}\n              >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n              </span>\n            )\n          })\n        })\n      }\n\n      html.push(<ArrowPnl \n        key={++key} \n        caption={htmlCaption}\n        items={htmlItems}\n\n        arrowUpOrDn={arrowUord} \n        arrowWidth='1em' \n        arrowTitle={arrowTitle} \n\n        onChange={arrowFunc}\n      />)\n    }\n    if(qry.chord !== null){\n      arrowUord = (qry.chordInvrDisplay === 'Show' ?'up' :'dn')\n      arrowTitle = 'Show/hide inversions'\n      arrowFunc = toggleChordInvrDisplay\n      htmlCaption = []\n      htmlItems = []\n\n      htmlCaption.push( \n        <span key={++key} className='propName' onClick={infoItemClick} data-selected='label'>\n          {qry.root.note \n            // +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n            +' ' +qry.chord.name +': '}\n        </span> \n      )\n\n      qry.chord.ivls.forEach( ivl => {\n        if(qry.noteFilter.indexOf( ivl.note ) >= 0) selected = 'noteFilter'\n        else selected = 0\n\n        htmlCaption.push( \n          <span key={++key} className='ivl' onClick={infoItemClick} \n            data-note={ivl.note} data-selected={selected}\n          >&nbsp;{ivl.note} <sub>{ivl.abr}</sub> \n          </span> \n        )\n      })\n\n      // if(qry.inversions !== null && qry.chordInvrDisplay === 'Show'){    //draw inversions for major chords\n      if( qry.inversions !== null ){    //draw inversions for major chords\n        let invrs = qry.inversions\n        htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n        htmlItems.push( \n          <span key={++key} className='propName' onClick={infoItemClick}\n            data-selected='label'>{\n            invrs.root \n            +(qry.rootType === 'fretRoot' ?qry.root.octave +' ' :'')\n            +qry.chord.abr +' Inversions:'\n           }</span> \n         )\n\n        for(let pos in invrs.positions){\n          let pobj = invrs.positions[ pos ]\n          selected = (qry.chordInvrSelected === pos ?'invr' :'')\n          htmlItems.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n          htmlItems.push( \n            <span key={++key} className='ivl' onClick={invrLabelClick}\n             data-selected={selected} data-invr={pos}>{\n              pos +' Position: '\n            }</span> \n          )\n          for(let num in pobj){\n            let iobj = pobj[num]\n            let octave = ([0,1].indexOf(iobj.octave) >= 0 ?'' :iobj.octave)\n            if(qry.noteFilter.indexOf( iobj.note ) >= 0) selected = 'noteFilter'\n            else selected = 0\n\n            htmlItems.push( \n              <span key={++key} className='ivl' onClick={infoItemClick}\n               data-note={iobj.note} data-selected={selected}\n              >&nbsp;{iobj.note +octave} <sub>{iobj.abr}</sub> \n              </span>\n            )\n          }\n        }\n      }\n\n      html.push(<ArrowPnl \n        key={++key} \n        caption={htmlCaption}\n        items={htmlItems}\n\n        arrowUpOrDn={arrowUord} \n        arrowWidth='1em' \n        arrowTitle={arrowTitle} \n\n        onChange={arrowFunc}\n      />)\n    }\n    if(qry.ivl !== null){\n      if(qry.noteFilter.indexOf( qry.ivl.note ) >= 0) selected = 'noteFilter'\n      else selected = 0\n      \n      if(lastkey !== key)\n        html.push( <div key={++key} className='lineBreak'>&nbsp; </div>)\n\n      html.push( <span key={++key} className='propName'\n       data-selected='label' onClick={infoItemClick}\n      >{qry.note \n        +(qry.rootType === 'fretRoot' ?qry.root.octave :'')\n        +' + ' \n        +qry.ivl.name +' interval:'\n       }</span> )\n  \n      html.push( <span key={++key} className='ivl' onClick={infoItemClick}\n        data-note={qry.ivl.note} data-selected={selected}\n      >&nbsp;{qry.ivl.note}<sub>{qry.ivl.abr}</sub></span> )\n    }\n  }\n  \n\n  if(html.length === 0) return null\n  return (\n    <div className='infoPnl' >\n       <div className='infoDiv'>\n         {html}\n       </div>\n    </div>\n  )      \n}\n\nInfoPnl.propTypes = {\n  qry: PropTypes.object,\n  selNoteVal: PropTypes.string,\n  stateChange: PropTypes.func,\n}\n\nexport default InfoPnl\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    x: \"0px\",\n    y: \"0px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#ffffff\",\n    stroke: \"#0006\",\n    strokeWidth: \"1px\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,23v-4a2,2,0,1,0,0,4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48,24V18.038L47.967,18H32.033L32,18.038V25a7.979,7.979,0,0,0,3.556,6.648l.124.078a8.078,8.078,0,0,0,8.762-.076A7.982,7.982,0,0,0,48,25ZM35.5,22A1.5,1.5,0,1,1,37,20.5,1.5,1.5,0,0,1,35.5,22Zm3.361,6H37V26h1.861a7.445,7.445,0,0,0,3.635-.864L43.5,26.864A9.353,9.353,0,0,1,38.861,28ZM44.5,22A1.5,1.5,0,1,1,46,20.5,1.5,1.5,0,0,1,44.5,22Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"17.279 13 18 10.838 18 4 13 4 13 10.838 13.721 13 17.279 13\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17,35.226V15H14V35.226A5.657,5.657,0,0,1,17,35.226Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50,19v4a2,2,0,0,0,0-4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48,11.41v-.021q0-.66-.034-1.324c0-.022,0-.043,0-.065H32.038c0,.022,0,.044,0,.066-.022.441-.033.883-.034,1.323V12H48Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31,16H49a3.006,3.006,0,0,0,2.829-2H28.171A3.006,3.006,0,0,0,31,16Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.613,6.793A3.329,3.329,0,0,0,44.32,4a3.357,3.357,0,0,0-2.781,1.489,1.853,1.853,0,0,1-3.076,0A3.359,3.359,0,0,0,35.68,4a3.33,3.33,0,0,0-3.292,2.79c-.067.4-.1.806-.154,1.21H47.766C47.716,7.6,47.679,7.19,47.613,6.793Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40,35a9.941,9.941,0,0,1-4-.847V36.17a2,2,0,0,1-1.637,1.963l-1.188.224.383,1.576a6.629,6.629,0,0,0,12.884,0l.383-1.576-1.19-.224A2,2,0,0,1,44,36.17V34.147A9.946,9.946,0,0,1,40,35Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18,57V56H11a1,1,0,0,1-1-1V51a1,1,0,0,1,1-1h7V45.4a5.495,5.495,0,0,1-6-9.131V29.151a5.078,5.078,0,0,0-3.991,4.606,4.891,4.891,0,0,0,.041.926,12.5,12.5,0,0,1-2.032,9.29A9.98,9.98,0,0,0,4,50.3,10.262,10.262,0,0,0,14.35,60h2.3a10.328,10.328,0,0,0,1.8-.161A4.013,4.013,0,0,1,18,58Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.7,58H20a1.958,1.958,0,0,0,.814,1.608A2.01,2.01,0,0,0,22,60h4a1.006,1.006,0,0,1-.555-.168Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"28 60 28.017 59.998 26 60 28 60\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"53.303 51 60 51 60 49 56.303 49 53.303 51\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.941,43.492c-.005-.031-.013-.062-.018-.093a3.991,3.991,0,0,0-.142-.523c-.025-.069-.05-.137-.078-.2a3.814,3.814,0,0,0-.239-.509h0a3.982,3.982,0,0,0-.377-.54c-.014-.018-.03-.034-.045-.051a4.006,4.006,0,0,0-.914-.786c-.06-.038-.12-.075-.18-.108a3.871,3.871,0,0,0-.511-.245l-.041-.017a4.017,4.017,0,0,0-.67-.186l-7.941-1.466-.4,1.643a8.629,8.629,0,0,1-16.772,0l-.4-1.643-7.941,1.466a3.962,3.962,0,0,0-1.248.461c-.044.025-.087.051-.132.079a3.953,3.953,0,0,0-.388.277c-.063.051-.125.1-.184.156-.1.09-.191.186-.28.284-.059.065-.118.13-.173.2a4,4,0,0,0-.576,1c-.025.062-.049.125-.071.189a3.913,3.913,0,0,0-.158.583v0a4.035,4.035,0,0,0-.063.708V47h4a1.006,1.006,0,0,1,.555.168L30.3,51H49.7l5.748-3.832A1.006,1.006,0,0,1,56,47h4V44.162A4.012,4.012,0,0,0,59.941,43.492Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,53a1.006,1.006,0,0,1-.555-.168L23.7,49H20v7h3a1.006,1.006,0,0,1,.555.168L26.3,58H32l20.1,2.005L58,60a2,2,0,0,0,2-2V53H30Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.448,37.594a3.542,3.542,0,0,0-3.893,0,3.492,3.492,0,1,0,4.619,5.133l.012-.059a.716.716,0,0,1,.023-.1c.028-.1.077-.2.11-.293.042-.127.089-.251.14-.374.038-.092.06-.184.1-.277.079-.164.158-.311.238-.451l0-.01c.053-.093.109-.174.163-.257A3.571,3.571,0,0,0,19,40.5,3.469,3.469,0,0,0,17.448,37.594Z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 12,\n    y: 52,\n    width: 6,\n    height: 2\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.134,38.906c.094-.051.18-.119.276-.164l.447-.192a3.5,3.5,0,0,1,.549-.175,3.424,3.424,0,0,1,.462-.11,15.6,15.6,0,0,1,.081-3.578,4.84,4.84,0,0,0,.042-.926A5.079,5.079,0,0,0,19,29.151v7.113a5.445,5.445,0,0,1,1.815,2.825C20.919,39.024,21.025,38.965,21.134,38.906Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.97fcb56e.svg\";\nexport { ForwardRef as ReactComponent };","/*\n  QueryPnl.jsx\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - manage query controls for GuitarJoe app\n\n*/\nimport React from 'react'\nimport { motion } from \"framer-motion\"\n\nimport './Fretboard.css';\nimport InfoPnl from \"./InfoPnl\"\nimport ArrowButton from './controls/ArrowButton'\nimport q from \"./guitar_lib.js\"\n\n\nclass QueryPnl extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.btnDupeClick = this.btnDupeClick.bind(this)\n    this.btnDelClick = this.btnDelClick.bind(this)\n\n    this.last = {}    //store last query params to allow reset via label.click\n    this.selLabelClick = this.selLabelClick.bind(this)\n    this.selChordChange = this.selChordChange.bind(this)\n    this.btnClearClick = this.btnClearClick.bind(this)\n    this.btnCollapseClick = this.btnCollapseClick.bind(this)\n    this.selIntervalChange = this.selIntervalChange.bind(this)\n    this.selNoteChange = this.selNoteChange.bind(this)\n    this.selOctaveChange = this.selOctaveChange.bind(this)\n    this.selScaleChange = this.selScaleChange.bind(this)\n  }\n\n  //event handlers\n  btnCollapseClick(){\n    let val = !this.props.qry.collapsed\n    this.props.stateChange( 'collapsed', val )\n  }\n  btnClearClick(){\n    // this.props.dispatch({ type:\"FretboardActions/fretFirstUpdate\", payload:'' })\n    this.props.reset()\n  }\n  btnDelClick(){\n    this.props.remove()\n  }\n  btnDupeClick(){\n    this.props.duplicate()\n  }\n  selLabelClick( event ){     //reset param to off value\n    let qry = this.props.qry,\n      lbl = event.target,\n      val = lbl.dataset.selected\n    // console.log('last', this.last)\n    if(val === 'true'){\n      if(lbl.dataset.type === 'note'){\n        if(qry.rootType === '') return\n        \n        this.last['rootType'] = qry.rootType\n        this.last['root'] = qry.root\n        if(this.last['rootType'] === 'noteSelect')\n          this.props.stateChange( 'selNoteVal', '' )\n        if(this.last['rootType'] === 'fretRoot')\n          this.props.stateChange( 'fretRoot', null )\n      }else\n      if(lbl.dataset.type === 'chord'){\n        if(qry.chord === null) return\n        this.last['chordName'] = qry.chord.name\n        this.props.stateChange( 'chordName', '' )\n      }else\n      if(lbl.dataset.type === 'scale'){\n        if(qry.scale === null) return\n        this.last['scaleName'] = qry.scale.name\n        this.props.stateChange( 'scaleName', '' )\n      }else\n      if(lbl.dataset.type === 'octave'){\n        this.last['octave'] = qry.octave\n        this.props.stateChange( 'octave', 0 )\n      }else\n      if(lbl.dataset.type === 'ivlName'){\n        this.last['ivlName'] = this.props.ivlName\n        this.props.stateChange( 'ivlName', '' )\n      }\n    }\n    else{   //allow toggling param on and off\n      if(lbl.dataset.type === 'note'){\n        if( !this.last.rootType ) return\n        if(this.last.rootType === 'noteSelect'){\n          if(this.last['root'] !== null)\n            this.props.stateChange( 'selNoteVal', this.last['root'].note )\n        } else\n        if(this.last.rootType === 'fretRoot'){\n          if(this.last['root'] !== null)\n            this.props.stateChange( 'fretRoot', this.last['root'] )\n        }\n      }else\n      if(lbl.dataset.type === 'chord'){\n        if(this.last['chordName'] && this.last['chordName'] !== '')\n          this.props.stateChange( 'chordName', this.last['chordName'] )\n      }else\n      if(lbl.dataset.type === 'scale'){\n        if(this.last['scaleName'] && this.last['scaleName'] !== '')\n          this.props.stateChange( 'scaleName', this.last['scaleName'] )\n      }else\n      if(lbl.dataset.type === 'octave'){\n        if(this.last['octave'] && this.last['octave'] !== '')\n          this.props.stateChange( 'octave', this.last['octave'] )\n      }else\n      if(lbl.dataset.type === 'ivlName'){\n        if(this.last['ivlName'] && this.last['ivlName'] !== '')\n          this.props.stateChange( 'ivlName', this.last['ivlName'] )\n      }\n    }\n  }\n  selNoteChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'selNoteVal', val )\n    //   this.props.dispatch({ type:\"FretboardActions/semisUpdate\", val })\n  }\n  selOctaveChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    if(val === '')\n      this.props.stateChange( 'octave', 0 )\n    else\n      this.props.stateChange( 'octave', Number(val) )\n  }\n  selIntervalChange( event ){\n    let sel = event.target,\n      opt = sel.options[sel.selectedIndex],\n      abr = opt.dataset.abr\n    this.props.stateChange( 'ivlName', abr )\n  }\n  selChordChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'chordName', val )\n  }\n  selScaleChange( event ){\n    let sel = event.target,\n      val = sel.options[sel.selectedIndex].text\n    this.props.stateChange( 'scaleName', val )\n  }\n\n  // draw controls\n  drawSelNote(){\n    let qry = this.props.qry,\n      list = [<option key='' ></option>,<option key='999' >All</option>]\n    for(let ii=0; ii < q.notes.list.length; ii++){\n      let note = q.notes.list[ii]\n      list.push(<option key={ii} >{note}</option>)\n    }\n\n    let note = (qry.note === null ?'' :qry.note)\n    return (\n      <div className='dataPnl pnlNote' >\n        <label data-selected={note !== ''} data-type='note' onClick={this.selLabelClick} >Note</label>\n        <select value={note} className='selNote' onChange={this.selNoteChange} >{list}</select>\n      </div>\n    )\n  }\n  drawSelOctave(){\n    let qry = this.props.qry,\n      oct = qry.octave,\n      omin = 0, omax = 0,\n      list = [<option key={999} ></option>]\n\n    omin = q.notes.obj(6, 0).octave\n    omax = q.notes.obj(1, q.fretboard.fretMax).octave\n\n    for(let ii = omax; ii >= omin; ii--){\n      list.push(<option key={ii} >{ii}</option>)\n    }\n    return (\n      <div className='dataPnl pnlOctave' >\n        <label data-selected={oct !== 0} data-type='octave' onClick={this.selLabelClick} >Octave</label>\n        <select value={oct} className='selOctave' onChange={this.selOctaveChange}>\n           {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelScale(){\n    let selected = this.props.scaleName,\n      ii=0, list = [<option key='aaa'></option>]\n    for(let scale of q.scales.list){\n      list.push(<option key={++ii} >{scale.name}</option>)\n    }\n    return (\n      <div className='dataPnl pnlScale' >\n        <label data-selected={selected !== ''} data-type='scale' onClick={this.selLabelClick} >Scale</label>\n        <select value={selected} className='selScale' onChange={this.selScaleChange} >\n          {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelChord(){\n    let ii = 0,\n      selected = this.props.chordName, \n      datastate = '',\n      list = [<option key='aaa'></option>]\n    for(let chd of q.chords.list){\n      list.push(<option key={++ii} >{chd.name}</option>)\n    }\n    if(selected !== '') datastate = 'chord'\n    return (\n      <div className='dataPnl pnlChord' >\n        <label data-selected={selected !== ''} data-type='chord' onClick={this.selLabelClick} >Chord</label>\n        <select value={selected} className='selChord' onChange={this.selChordChange} \n         data-state={datastate}>\n          {list}\n        </select>      \n      </div>\n    )\n  }\n  drawSelInterval(){\n    let qry = this.props.qry,\n      list = [<option key='aaa' data-abr='' ></option>],\n      ii = 0, selected = '' , datastate = ''\n    for(let ivl of q.intervals.list){\n      if(ivl.semis === 0) continue\n      if(ivl.semis === 12) continue\n      // if(ivl.abr === last) continue  should be unique\n      let html = `${ivl.name} (${ivl.abr}, ${ivl.semis})`\n      list.push(<option key={++ii} data-abr={ivl.abr} >{html}</option>)\n      if(qry.ivl !== null && selected === '' && qry.ivl.abr === ivl.abr)\n        selected = html\n      // last = ivl.abr\n    }\n    if(selected !== '') datastate = 'interval'\n    return (\n      <div className='dataPnl pnlInterval' >\n        <label data-selected={selected !== ''} onClick={this.selLabelClick} \n          data-type='ivlName' >Interval</label>\n        <select value={selected} className='selInterval' title='Intervals sorted by semis-tones'\n          data-state={datastate} onChange={this.selIntervalChange} \n        >\n          {list}\n        </select>      \n      </div>\n    )\n  }  \n\n  render(){\n    // console.log('queryPnl.render()', this.props)\n    let qry = this.props.qry\n    let qryBtnClass = (qry.collapsed ?'qryBtnSmall' :'qryBtn')\n    // let qryDisplayClass = (qry.collapsed ?'queryPnlHide' :'queryPnlShow')\n \n    let arrowUord = (qry.collapsed ?'dn' :'up')\n    let arrowTitle = (qry.collapsed ?'Show Query panel' :'Hide Query panel')\n    let arrowWidth = (qry.collapsed ?'1.5em' :'2em')\n\n    let selNote = null\n    let selOct = null\n    let selInt = null\n    let selScale = null\n    let selChord = null\n    if(qry.rootType !== 'fretSelect') { //optimization\n      selNote = this.drawSelNote()\n      selOct = this.drawSelOctave()\n      selInt = this.drawSelInterval()\n      selScale = this.drawSelScale()\n      selChord = this.drawSelChord()\n    }\n\n    return (\n      <div className={'queryPnl queryPnlShow'} >\n        <table className='tbQuery' ><tbody><tr>\n        <td className='tdQryBtnsLeft'>\n           <ArrowButton upOrDn={arrowUord} width={arrowWidth} title={arrowTitle} onChange={this.btnCollapseClick}/>\n        </td><td className='tdQryContent'>\n\n          <motion.div className='queryControls' data-roottype={qry.rootType} \n            animate={ qry.collapsed === true ?'collapsed' :'default' }\n            variants={{\n              collapsed: { height:'0px', borderWidth:'0px' },\n              default: { height:'auto', borderWidth:'1px' },\n            }}\n            transition={{ ease:\"easeOut\", duration:0.3 }}\n          >\n            {selNote}\n            {selOct}\n            {selScale}\n            {selChord}\n            {selInt}\n          </motion.div>\n\n          <InfoPnl \n            qry={qry} \n            selNoteVal={this.props.selNoteVal}\n            stateChange={this.props.stateChange}\n           />\n        </td><td className='tdQryBtnsRight'>\n            <div className={qryBtnClass +' qryBtnClear'} onClick={this.btnClearClick} title='Reset query controls'>\n              <motion.div \n                    whileTap={{ transform:'rotateZ(360deg)' }}\n                    transition={{ type:'spring', damping: 30 }}\n                  >\n                  &#8635;\n              </motion.div>\n            </div>\n            <div className={qryBtnClass +' qryBtnDupe'} onClick={this.btnDupeClick} title='Duplicate fretboard' >\n              <motion.div \n                whileTap={{ transform:'rotateZ(360deg)' }}\n                transition={{ type:'spring', damping: 30 }}\n              >\n                &#10010;\n              </motion.div>              \n            </div>\n            { qry.fbid === 0 ?null\n              :<div className={qryBtnClass +' qryBtnDel'} onClick={this.btnDelClick} title='Remove this fretboard' >\n                  <motion.div \n                    whileTap={{ transform:'rotateZ(360deg)' }}\n                    transition={{ type:'spring', damping: 30 }}\n                  >\n                    &#10000;\n                  </motion.div>\n                </div>\n            }\n        </td></tr></tbody></table>\n      </div>\n    )\n  }\n}\n\nexport default QueryPnl\n","/*\nFretboard.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - top level container for fretboard controls of GuitrJoe app\n  - store shared state for FretPnl.js and QueryPnl.js\n\n*/\n\nimport React from 'react';\n\nimport FretPnl from \"./FretPnl\";\nimport QueryPnl from \"./QueryPnl\";\nimport q from \"./guitar_lib.js\";\nimport './Fretboard.css';\n\nclass Fretboard extends React.Component{\n\n  constructor (props) {\n    console.log('Fretboard.constructor()', props)\n    super(props)\n    this.qry = null\n    //keep state private to isolate from children\n    this.state = {\n\t\t\tfbid:(props.fbid ?props.fbid :0),\n\t\t\t\n      collapsed:(props.collapsed ?props.collapsed :false),\n      fretFirst:(props.fretFirst ?props.fretFirst :0),\n      fretLast:(props.fretLast ?props.fretLast :q.fretboard.fretMax),\n      fretFilter:(props.fretFilter ?props.fretFilter :[]),      //csv of fretN, if found then disable fret\n      strgFilter:(props.strgFilter ?props.strgFilter :[]),    //csv of strN, if found then hide notes\n      noteFilter:(props.noteFilter ?props.noteFilter :[]),    //notes on fetboard where button.data-selected=2; set by clicking infoPnl note\n      \n      fretBtnStyle:(props.fretBtnStyle ?props.fretBtnStyle :'NoteFirst'),    //one of: NoteFirst, IvlFirst, NoteTab, NoteAbc\n      rootType:(props.rootType ?props.rootType :''),    //one of: ['', fretRoot, fretSelect, noteSelect]\n\n      fretRoot:(props.fretRoot ?props.fretRoot :null),          //note object, set when fret clicked\n      selNoteVal:(props.selNoteVal ?props.selNoteVal :''),   //string, contains note selected in selNote control\n      octave:(props.octave ?props.octave :0), \n\n      fretSelect:(props.fretSelect ?props.fretSelect :[]),    //when rootType=fretSelect, list of frets and related data; set in fretPnl.fretClick()\n      fretSelectMatch:(props.fretSelectMatch ?props.fretSelectMatch :null),    //user selects a chord or scale to view: {type, name}\n      fretSelectMatchDisplay:(props.fretSelectMatchDisplay ?props.fretSelectMatchDisplay :'Show'),    //Show or Hide\n\n      scaleName:(props.scaleName ?props.scaleName :''),\n      scaleTriadDisplay:(props.scaleTriadDisplay ?props.scaleTriadDisplay :'Show'),    // Show or Hide\n      scaleTriadSelected:(props.scaleTriadSelected ?props.scaleTriadSelected :null),    //null or degree of selected triad\n      \n      chordName:(props.chordName ?props.chordName :''),\n      chordInvrDisplay:(props.chordInvrDisplay ?props.chordInvrDisplay :'Show'),    //Show or Hide\n      chordInvrSelected:(props.chordInvrSelected ?props.chordInvrSelected :null),    //user selected inversion position to display\n\n      ivlName:(props.ivlName ?props.ivlName :''), \n    }\n    this.duplicate = this.duplicate.bind(this)\n    this.remove = this.remove.bind(this)\n    this.reset = this.reset.bind(this)\n    this.stateChange = this.stateChange.bind(this)\n    this.strgFiltered = this.strgFiltered.bind(this)\n    this.makeQuery = this.makeQuery.bind(this)\n    this.fretSelectFind = this.fretSelectFind.bind(this)\n    this.inversionNoteByTab = this.inversionNoteByTab.bind(this)\n  }  \n  reset(){\n    this.setState({ collapsed:false })\n    this.setState({ fretSelect:[] })\n    this.setState({ fretSelectMatch:null })\n    this.setState({ fretSelectMatchDisplay:'Show' })\n    this.setState({ fretFilter:[] })\n    this.setState({ noteFilter:[] })\n    this.setState({ strgFilter:[] })\n    this.setState({ scaleName:'' })\n    this.setState({ scaleTriadDisplay:'Show' })\n    this.setState({ scaleTriadSelected:null })\n    this.setState({ chordName:'' })\n    this.setState({ chordInvrSelected:null })\n    this.setState({ chordInvrDisplay:'Show' })\n    this.setState({ rootType:'' })\n    this.setState({ ivlName:'' })\n    this.setState({ fretRoot:null })\n    this.setState({ selNoteVal:'' })\n    this.setState({ octave:0 })\n    this.setState({ fretBtnStyle:'NoteFirst' })\n  }\n  strgFiltered( strN ){\n    strN = Number(strN)\n    return ( this.state.strgFilter.indexOf( strN ) >= 0 )\n  }\n  remove(){\n    this.props.remove( this )\n  }\n  duplicate(){\n    this.props.duplicate( this )\n  }\n\n  inversionNoteByTab( tab ){\n    if(this.state.chordInvrSelected === null) return null\n    for(let nobj of this.qry.chordInvrNotes){\n      if(nobj.tab === tab) return nobj \n    } \n    return null\n  }\n  fretSelectFind( objOrTab ){\n    let list = this.state.fretSelect,\n      fnd = -1\n\n    if(list.length === 0 || objOrTab === null) return fnd  //empty list\n\n    let  tab = (typeof objOrTab === 'string' ?objOrTab :objOrTab.tab)    //find in list\n    for(let ii = 0; ii < list.length; ii++){\n      if(tab === list[ii].tab){\n        fnd = ii\n        break\n      }\n    }\n    return fnd\n  }\n  stateChange( key, val){\n    // if(key === 'rootType')   //only manually set below; can be prop instead of state\n    //   this.setState({ rootType:val })\n    // else\n    if(key === 'collapsed'){\n      if(val === true){\n        this.setState({ fretSelectMatchDisplay: 'Hide' })\n        this.setState({ scaleTriadDisplay: 'Hide' })\n        this.setState({ chordInvrDisplay: 'Hide' })\n      }\n      else{\n        this.setState({ fretSelectMatchDisplay: 'Show' })\n        this.setState({ scaleTriadDisplay: 'Show' })\n        this.setState({ chordInvrDisplay: 'Show' })\n      }\n      this.setState({ collapsed:val })\n    }else\n    if(key === 'noteFilter'){\n\n      if(val === 'clear'){  //empty list\n        this.setState({ noteFilter:[] })\n      }\n      else {    //default operation\n        let list = this.state.noteFilter.slice()\n        let idx = list.indexOf( val )\n   \n        if(idx < 0) list.push( val )\n        else list.splice( idx, 1 )\n        \n        this.setState({ noteFilter:list })\n      }\n    }else\n    if(key === 'fretBtnStyle'){\n      this.setState({ fretBtnStyle:val })\n    }else\n    if(key === 'fretFilter'){\n      let list = this.state.fretFilter.slice()\n      let idx = list.indexOf( val )\n \n      if(idx < 0) list.push( val )\n      else list.splice( idx, 1 )\n\n      this.setState({ fretFilter:list })\n    }else\n    if(key === 'fretRoot'){\n      this.setState({ fretRoot:val })\n\n      if(val === null)\n         this.setState({ rootType:'' })\n      else\n        this.setState({ rootType:'fretRoot' })\n      this.setState({ selNoteVal:'' })\n      this.setState({ fretSelect:[] })\n      // this.setState({ fretSelectMatch:null })\n    }else\n    if(key === 'selNoteVal'){\n      this.setState({ selNoteVal:val })\n\n      if(val === '')\n        this.setState({ rootType:'' })\n      else\n        this.setState({ rootType:'noteSelect' })\n      this.setState({ fretRoot:null })\n      this.setState({ fretSelect:[] })\n      // this.setState({ fretSelectMatch:null })\n    }else\n    if(key === 'fretSelect'){\n\n      if(val === null){   //disable fretSelect mode\n        this.setState({ fretSelect:[] })\n        // this.setState({ fretSelectMatch:null })\n        this.setState({ rootType:'' })\n        this.setState({ fretRoot:null })\n        this.setState({ selNoteVal:'' })\n        return\n      }\n\n      if(Array.isArray(val) === false)  //process as array due to React state handling\n        val = [val]\n\n      let list = this.state.fretSelect.slice(),\n        idx = null, root=null\n\n      for(let nobj of val){\n        idx = this.fretSelectFind( nobj )\n        if(idx < 0) {\n          if(list.length === 0){\n            nobj.ivl = q.intervals.byName( 'P1' )\n            list.push( nobj )\n          }\n          else{\n            if(root === null) root = list[0]\n            let semis = (nobj.semis -root.semis) % 12\n            if(semis < 12) semis = 12 +semis\n            nobj.ivl = q.intervals.bySemis( semis, true )\n            list.push( nobj )\n          }\n        }else \n          list.splice( idx, 1 )\n      }\n      list.sort(function (a, b) {\n        return a.ivl.semis - b.ivl.semis\n      })\n\n      this.setState({ fretSelect:list })\n      if(this.state.rootType !== 'fretSelect'){   //set rootType to fretSelect\n        this.setState({ rootType:'fretSelect' })\n        this.setState({ fretRoot:null })\n        this.setState({ selNoteVal:'' })\n      }\n    }else\n    if(key === 'fretSelectMatch'){\n      this.setState({ fretSelectMatch:val })\n    }else\n    if(key === 'fretSelectMatchDisplay'){\n      this.setState({ fretSelectMatchDisplay:val })\n      // if(val === 'Show')\n      //   this.stateChange( 'collapsed', false)\n      // else\n      //   this.stateChange( 'collapsed', true)\n    }else\n    if(key === 'strgFilter'){\n      val = Number( val )\n      let list = this.state.strgFilter.slice()\n      let idx = list.indexOf( val )\n \n      if(idx < 0) list.push( val )\n      else list.splice( idx, 1 )\n\n      this.setState({ strgFilter:list })\n    }else\n    if(key === 'fretFirst')\n      this.setState({ fretFirst:val })\n    else\n    if(key === 'fretLast')\n      this.setState({ fretLast:val })\n    else\n    if(key === 'octave')\n      this.setState({ octave:val })\n    else\n    if(key === 'scaleName'){\n      this.setState({ scaleName:val })\n    }else\n    if(key === 'scaleTriadSelected'){\n      if(val !== null) val = Number(val)\n      if(this.state.scaleTriadSelected === val)\n        this.setState({ scaleTriadSelected: null })\n      else\n        this.setState({ scaleTriadSelected: val })\n    }else\n    if(key === 'scaleTriadDisplay'){\n      this.setState({ scaleTriadDisplay:val })\n    }else\n    if(key === 'chordName'){\n      this.setState({ chordName:val })\n    }else\n    if(key === 'chordInvrSelected'){\n     if(this.state.chordInvrSelected === val)\n       val = null\n     this.setState({ chordInvrSelected:val })\n    }else\n    if(key === 'chordInvrDisplay'){\n     this.setState({ chordInvrDisplay:val })\n    }else\n    if(key === 'ivlName'){\n      this.setState({ ivlName:val })\n    }else\n    if(key === 'semis')\n      this.setState({ semis:val })\n  }\n  makeQuery(){\n    let qry = {\n      fbid:this.state.fbid,\n\n      collapsed: this.state.collapsed,\n      fretBtnStyle: this.state.fretBtnStyle,\n      fretFilter: this.state.fretFilter,\n      noteFilter: this.state.noteFilter,\n\n      rootType: this.state.rootType,\n      root: null,\n      note: (this.state.rootType === 'fretRoot' \n              ? this.state.fretRoot.notes[0] \n              : this.state.selNoteVal ), \n      octave: this.state.octave,\n      \n      scale: null,\n      scaleTriadDisplay:this.state.scaleTriadDisplay,\n      scaleTriadIvls:null,\n      scaleTriads:null,\n      scaleTriadSelected:this.state.scaleTriadSelected,\n      \n      chord:null,\n      chordInvrDisplay:this.state.chordInvrDisplay,\n      chordInvrSelected:this.state.chordInvrSelected,\n      chordInvrNotes:null,\n      inversions:null,\n\n      ivl: null,\n\n      fretSelect: this.state.fretSelect,\n      fretSelectMatch: this.state.fretSelectMatch,\n      fretSelectMatchDisplay: this.state.fretSelectMatchDisplay,\n    }\n    if(qry.rootType === 'fretSelect'){\n      qry.root = this.state.fretSelect[0]    //note object, set in FretPnl.fretClick()\n  \n      if(qry.fretSelectMatch != null){\n        if(qry.fretSelectMatch.type === 'chord')\n          qry.fretSelectMatch.obj = q.chords.obj( qry.fretSelectMatch.note, qry.fretSelectMatch.abr )\n        else\n        if(qry.fretSelectMatch.type === 'scale')\n          qry.fretSelectMatch.obj = q.scales.obj( qry.fretSelectMatch.note, qry.fretSelectMatch.abr )\n      }\n    } \n    else{\n      if(qry.rootType === 'fretRoot')\n        qry.root = this.state.fretRoot    //note object, set in FretPnl.fretClick()\n      if(qry.rootType === 'noteSelect' && qry.note !== '' && qry.note !== 'All')\n        qry.root = q.notes.objByNote( qry.note )    //note object\n\n\n      if(this.state.scaleName !== '' && qry.root){\n        qry.scale = q.scales.obj( qry.note, this.state.scaleName )\n        qry.scaleTriads = q.scales.degreeTriads( qry.note, this.state.scaleName )\n        if(qry.scaleTriadSelected != null)\n          qry.scaleTriadIvls = qry.scaleTriads.list[ qry.scaleTriadSelected -1 ].ivls\n      }\n      if(this.state.chordName !== '' && qry.root){\n        qry.chord = q.chords.obj( qry.note, this.state.chordName )\n        qry.inversions = q.chords.inversions(qry.root.note, qry.chord.abr, qry.root.octave )\n        if(qry.chordInvrSelected !== null){\n          qry.chordInvrNotes = q.chords.inversionNotes(  qry.inversions, qry.chordInvrSelected )\n        }\n      }\n      if(this.state.ivlName !== '' && qry.root){\n        qry.ivl = q.intervals.byName( this.state.ivlName )    //this.state.ivlName == abr\n        qry.ivl.note = q.notes.calc( qry.note, qry.ivl )\n        // qry.ivl.notes = q.notes.bySemis( qry.root.semis +qry.ivl.semis )\n      }\n    }\n    this.qry = qry\n    return qry\n  }\n  render(){\n    let qry = this.makeQuery()\n    // console.log('Fretboard.render()', this.props, this.state, qry)\n    return(\n      <div className='fretboard' id={'Fretboard'+qry.fbid}>\n        <FretPnl\n          collapsed={this.state.collapsed}\n          fretFirst={this.state.fretFirst}\n          fretLast={this.state.fretLast}\n\n          selNoteVal={this.state.selNoteVal} \n\n          qry={qry}\n          stateChange={this.stateChange}\n          strgFiltered={this.strgFiltered}\n          fretSelectFind={this.fretSelectFind}\n          inversionNoteByTab={this.inversionNoteByTab}\n        />\n        <QueryPnl \n          collapsed={this.state.collapsed}\n          fretFirst={this.state.fretFirst}\n          fretLast={this.state.fretLast}\n\n          selNoteVal={this.state.selNoteVal} \n          chordName={this.state.chordName}\n          scaleName={this.state.scaleName}\n          ivlName={this.state.ivlName}\n\n          duplicate={this.duplicate}\n          qry={qry}\n          remove={this.remove}\n          reset={this.reset} \n          stateChange={this.stateChange}\n          strgFiltered={this.strgFiltered} \n         />\n      </div>\n    )\n  }\n}\n\nexport default Fretboard;\n","/*\n  About Dialog\n  - for GuitarJoe by Chris DeFreitas\n\n  requires:\n    Dialog.css\n*/\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport './Dialog.css';\n\nconst About = () => (  \n  <Popup\n    trigger={<button className=\"btnInfo\">About</button>}\n    modal\n    nested\n  >\n    {close => (\n      <div className=\"modal\">\n        <div className=\"header\"> \n          About GuitarJoe \n          <span className='hdVer'>v1.7 20201020</span> \n          <hr className='hrLine' /> \n        </div>\n        <div className=\"content\">\n<h3>Important: </h3>\n&nbsp;- Everything is clickable...please explore<br />\n&nbsp;- use your browser's zoom controls to enlarge/shrink the controls\n<br /><br />\n\nGuitarJoe is a free web application, no ads, no logins, no tracking.  \nThe goal was to create a tool that would make guitar theory accessible while practicing.\nI am not anything close to a musician, so\nI was going crazy taking notes and diagramming chords, scales and intervals: I needed a tool\nto facilitate my understanding so I could focus on the guitar instead of managing scraps of information.\nThis application has successfully reduced my hair loss--I hope it has the same effect on you!\n<br />\n\n<h3>Whats New in Update 20211020</h3>\n1. When in FretSelect mode (selecting more than one note), the app will now search all scales for those notes.  \nBefore only standard Western scales were searched: major, minor, pentatonic, and blues.  \n<br />\n2. Expanded implementation of animations to smooth user interactions.\n<br />\n3. This version includes a major update to code generating the Fretboard.\nFixed a number of bugs. See <a href='https://github.com/ChrisDeFreitas/guitarjoe/' target='_new'>GitHub Repository</a> for details.\n<br />\n\n<h3>About Chord Inversions</h3>\nThe guitar provides many combinations for inversions.  The app tries to display the ideal inversion:  \nThe bass note is highlighted, then the remaining notes are selected in order, on higher strings.  \nUnfortunately, this \nresults in certain inversions having no selections on the fretboard, such as CMaj7 third position.  \n<br /><br />\n&nbsp;- Tested to work in Chrome(Windows), Firefox(Windows, Linux), and Safari(iPad, iPhone)<br />\n&nbsp;- Review documentation, updates and references in the <a href='https://github.com/ChrisDeFreitas/guitarjoe/' target='_new'>GitHub Repository</a> <br />\n&nbsp;- Send comments and bugs to <a href='mailto:ChrisDeFreitas777@gmail.com?subject=GuitarJoe:'>ChrisDeFreitas777@gmail.com</a>\n<br />\n<h3>Thanks to</h3>\n&nbsp;- Application hosted on <a href='https://github.com/ChrisDeFreitas/guitarjoe' target='_new'>Github</a>  <br />\n&nbsp;- Background image from <a href='https://www.flickr.com/photos/webtreatsetc/with/4514047664/' target='_new'>WebTreats ETC</a> <br />\n&nbsp;- Built with the <a href='https://reactjs.org/' target='_new'>React</a> Javascript library <br />\n&nbsp;- <a href='https://www.framer.com/motion/' target='_new'>Framer Motion</a> animation library for React <br />\n&nbsp;- Fuggles font by Robert Leuschke on <a href='https://fonts.google.com/?query=Robert+Leuschke/' target='_new'>Google Fonts</a> <br />\n&nbsp;- Guitar icon by monkik from the <a href='https://thenounproject.com/term/guitar/2588464/' target='_new'>Noun Project</a> <br />\n&nbsp;- Popup control from <a href='https://react-popup.elazizi.com/' target='_new'>reactjs-popup</a> <br />\n&nbsp;- <a href='https://github.com/rigobauer/react-abcjs'>react-abcjs</a>, a React component that renders notes on music staffs <br />\n<br />\nCreated by Chris DeFreitas, BC Canada<br />\n        </div>\n        <div className=\"actions\">\n          <button\n            className=\"button\"\n            onClick={() => {\n              close()\n            }}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    )}\n  </Popup>\n)\n\nexport default About","/*\n  App.js\n  - by Chris DeFreitas, ChrisDeFreitas777@gmail.com\n  - entrypoint for GuitrJoe app\n\n*/\nimport React, { useState } from 'react';\n\nimport './App.css';\n// import './Bgnd.css';\n// import Bgnd from \"./Bgnd.js\";\nimport Fretboard from \"./Fretboard\"\nimport About from \"./AboutDlg\"\nimport { ReactComponent as Logo } from './resources/logo.svg'\n\n\nfunction App(){\n\n  const [fbs, setFbs] = useState( [{id:0, state:true}] )  //one cell for each fretboard instance\n  const [newid, setNewId] = useState( null )\t\t// assigned in duplicate()\n  \n  function indexOfFbid( fbid ){\n    for(let ii=0; ii < fbs.length; ii++){\n      if(fbs[ii].id === fbid)\n        return ii\n    }\n    return false\n  }\n  function duplicate( fretboard ){\n    let fbid = fretboard.props.fbid,\n      list = fbs.slice(),\n      nid = list.length,\n      obj = {id:nid, state:fretboard.state},\n      idx = indexOfFbid( fbid )\n      \n    if(idx === false)\n      throw new Error(`App.duplicate() error, fbid=[${fbid}] not found.`)\n      \n    list.splice( (idx +1), 0, obj)\t\t\n    setFbs( list )\n    setNewId( nid )\n    // console.log('App.duplicate', list)\n  }\n  function remove( fretboard ){\n    let fbid = fretboard.props.fbid,\n      list = fbs.slice(),\n      idx = indexOfFbid( fbid )\n     \n    if(idx === false)\n      throw new Error(`App.remove() error, fbid=[${fbid}] not found.`)\n\n    list[ idx ].state = false\n    setNewId( null )\n    setFbs( list )\n    // console.log('App.remove()', fbid, list)\n  }\n\n  let list = [], fbCount=fbs.length\n  for(let ii=0; ii < fbCount; ii++){\n    let el = null,\n      id = fbs[ii].id,       //use in .key to help react\n      state = fbs[ii].state  //one of: true, state object, false(a deleted fretboard)\n    if(id === newid){   //create new fretboard\n      el = <Fretboard key={id} fbid={id} duplicate={duplicate} remove={remove} \n\t\t\t\tcollapsed={state.collapsed}\n\t\t\t\tfretFirst={state.fretFirst}\n\t\t\t\tfretLast={state.fretLast}\n\t\t\t\tfretBtnText={state.fretBtnText}\n\t\t\t\t\n        fretFilter={state.fretFilter}\n\t\t\t\tstrgFltrList={state.strgFltrList}\n        noteFilter={state.noteFilter}\n        \n        fretSelect={state.fretSelect}\n        fretSelectMatch={state.fretSelectMatch}\n        fretSelectMatchDisplay={state.fretSelectMatchDisplay}\n\n\t\t\t\trootType={state.rootType}\n\t\t\t\tfretRoot={state.fretRoot}\n\t\t\t\tselNoteVal={state.selNoteVal} \n\t\t\t\toctave={state.octave} \n\n\t\t\t\tscaleName={state.scaleName}\n        scaleTriadDisplay={state.scaleTriadDisplay}\n        scaleTriadSelected={state.scaleTriadSelected}\n\n\t\t\t\tchordName={state.chordName}\n        chordInvrDisplay={state.chordInvrDisplay}\n        chordInvrSelected={state.chordInvrSelected}\n\t\t\n        ivlName={state.ivlName}\n      />\n    }else{\n      if(state !== false) //existing fretboard; magic of react does not overwrite old data\n        el = <Fretboard key={id} fbid={id} duplicate={duplicate} remove={remove} />\n    }\n    if(el != null)\n      list.push( el )\n  }\n\n  return (\n    <div className=\"App\">\n\t\t\t<header className=\"App-header header\">\n        <Logo className=\"Logo\" alt=\"Logo\" />\n        GuitarJoe v0.1.7 \n        <About />\n      </header>\n\t\t\t{list}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <App />\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals( console.log );\n"],"sourceRoot":""}